[{"path":"https://calvagone.github.io/campsis.doc/articles/campsis.html","id":"library-import","dir":"Articles","previous_headings":"","what":"Library import","title":"Get started with CAMPSIS","text":"First import campsis package:","code":"library(campsis)"},{"path":"https://calvagone.github.io/campsis.doc/articles/campsis.html","id":"load-model","dir":"Articles","previous_headings":"","what":"Load model","title":"Get started with CAMPSIS","text":"Load 2-compartment PK model built-model library:","code":"model <- model_suite$pk$`2cpt_fo`"},{"path":"https://calvagone.github.io/campsis.doc/articles/campsis.html","id":"create-dataset","dir":"Articles","previous_headings":"","what":"Create dataset","title":"Get started with CAMPSIS","text":"Create dataset CAMPSIS. instance, let’s give 1000mg QD 3 days observe every hour.","code":"dataset <- Dataset(10) %>%   add(Bolus(time=0, amount=1000, ii=24, addl=2)) %>%   add(Observations(times=seq(0,72, by=1)))"},{"path":"https://calvagone.github.io/campsis.doc/articles/campsis.html","id":"simulate","dir":"Articles","previous_headings":"","what":"Simulate","title":"Get started with CAMPSIS","text":"Simulate simple protocol:","code":"results <- model %>% simulate(dataset, seed=1) head(results) ## # A tibble: 6 × 20 ##      ID  TIME   ARM TVBIO  TVKA  TVVC  TVVP   TVQ  TVCL   BIO    KA    VC    VP ##   <int> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> ## 1     1     0     0     1     1    10    40    20     3     1 0.960  14.0  50.2 ## 2     1     1     0     1     1    10    40    20     3     1 0.960  14.0  50.2 ## 3     1     2     0     1     1    10    40    20     3     1 0.960  14.0  50.2 ## 4     1     3     0     1     1    10    40    20     3     1 0.960  14.0  50.2 ## 5     1     4     0     1     1    10    40    20     3     1 0.960  14.0  50.2 ## 6     1     5     0     1     1    10    40    20     3     1 0.960  14.0  50.2 ## # ℹ 7 more variables: Q <dbl>, CL <dbl>, CONC <dbl>, CONC_ERR <dbl>, ## #   A_ABS <dbl>, A_CENTRAL <dbl>, A_PERIPHERAL <dbl>"},{"path":"https://calvagone.github.io/campsis.doc/articles/campsis.html","id":"plot-results","dir":"Articles","previous_headings":"","what":"Plot results","title":"Get started with CAMPSIS","text":"Plot results:  shaded plot may also used:","code":"spaghettiPlot(results, \"CONC\") shadedPlot(results, \"CONC\")"},{"path":"https://calvagone.github.io/campsis.doc/articles/campsis.html","id":"simulate-2-arms","dir":"Articles","previous_headings":"","what":"Simulate 2 arms","title":"Get started with CAMPSIS","text":"can also simulate two different treatment arms. Say first arm receives 1000mg QD second arm 2000mg QD. can implemented follows:","code":"# First treatment arm arm1 <- Arm(subjects=50, label=\"1000 mg QD\") %>%   add(Bolus(time=0, amount=1000, ii=24, addl=2)) %>%   add(Observations(times=seq(0,72, by=1)))  # Second treatment arm arm2 <- Arm(subjects=50, label=\"2000 mg QD\") %>%   add(Bolus(time=0, amount=2000, ii=24, addl=2)) %>%   add(Observations(times=seq(0,72, by=1)))  dataset <- Dataset() %>% add(c(arm1, arm2))  results <- model %>% simulate(dataset, seed=1) shadedPlot(results, \"CONC\", colour=\"ARM\")"},{"path":"https://calvagone.github.io/campsis.doc/articles/campsis.html","id":"going-further","dir":"Articles","previous_headings":"","what":"Going further","title":"Get started with CAMPSIS","text":"invite check vignettes. fun CAMPSIS!","code":""},{"path":"https://calvagone.github.io/campsis.doc/articles/v01_dataset.html","id":"instantiate-a-dataset","dir":"Articles","previous_headings":"","what":"Instantiate a dataset","title":"Create your dataset","text":"Create dataset 3 subjects: shortly: Check many subjects part dataset: See methods can applied dataset: Oh, looks cool. plenty functions play . functions illustrated little little vignettes. next sections , ’ll see can add boluses infusions:","code":"ds <- Dataset(subjects=3) ds <- Dataset(3) ds %>% length() ## [1] 3 methods(class=class(ds)) ##  [1] add                      contains                 delete                   ##  [4] export                   find                     getCovariates            ##  [7] getEventCovariates       getFixedCovariates       getIOVs                  ## [10] getOccasions             getTimes                 getTimeVaryingCovariates ## [13] length                   replace                  setSubjects              ## [16] show                     simulate                 ## see '?methods' for accessing help and source code"},{"path":"https://calvagone.github.io/campsis.doc/articles/v01_dataset.html","id":"add-a-bolus","dir":"Articles","previous_headings":"","what":"Add a bolus","title":"Create your dataset","text":"bolus can created using constructor Bolus added dataset: default, injected first compartment (CMT=1). another compartment needs used, compartment argument may used follows: Bioavailabilities (f argument) lag times (lag argument) can implemented well, dataset. illustrated vignettes.","code":"ds <- ds %>% add(Bolus(time=0, amount=1000)) Bolus(time=0, amount=1000, compartment=2)"},{"path":"https://calvagone.github.io/campsis.doc/articles/v01_dataset.html","id":"add-an-infusion","dir":"Articles","previous_headings":"","what":"Add an infusion","title":"Create your dataset","text":"infusion can created using constructor Infusion added dataset: previously, default compartment first compartment. Infusion rate (rate argument) duration (duration argument), bioavailabilities (f argument) lag times (lag argument) can implemented well, dataset. illustrated vignettes.","code":"ds <- ds %>% add(Infusion(time=0.5, amount=1000))"},{"path":"https://calvagone.github.io/campsis.doc/articles/v01_dataset.html","id":"add-observations","dir":"Articles","previous_headings":"","what":"Add observations","title":"Create your dataset","text":"Observations can created using constructor Observations added dataset: default compartment first one. Although compartment number useful simulations (simulation engines able look DV ), can still useful exporting table modeling tool.","code":"ds <- ds %>% add(Observations(times=c(0.5, 1)))"},{"path":"https://calvagone.github.io/campsis.doc/articles/v01_dataset.html","id":"export-dataset","dir":"Articles","previous_headings":"","what":"Export dataset","title":"Create your dataset","text":"far good! dataset contains 5 subjects, 1 bolus 1 infusion. going export 2-dimensional table. step implicitly done CAMPSIS simulate model. explanations need given regarding following column names: ID: subject ID, always starts 1. ID’s consecutive CAMPSIS ARM: ARM number. 0 default arm. RATE: RATE column (0 boluses, -1/-2 rate/infusion defined model, NA information available) DOSENO: dose number. Doses (boluses infusions) numbered according time occur.","code":"table <- ds %>% export(dest=\"RxODE\") table ## # A tibble: 12 × 9 ##       ID   ARM  TIME  EVID   MDV   AMT   CMT  RATE DOSENO ##    <dbl> <int> <dbl> <int> <int> <dbl> <int> <dbl>  <int> ##  1     1     0   0       1     1  1000     1     0      1 ##  2     1     0   0.5     0     0    NA     1     0     NA ##  3     1     0   0.5     1     1  1000     1    NA      2 ##  4     1     0   1       0     0    NA     1     0     NA ##  5     2     0   0       1     1  1000     1     0      1 ##  6     2     0   0.5     0     0    NA     1     0     NA ##  7     2     0   0.5     1     1  1000     1    NA      2 ##  8     2     0   1       0     0    NA     1     0     NA ##  9     3     0   0       1     1  1000     1     0      1 ## 10     3     0   0.5     0     0    NA     1     0     NA ## 11     3     0   0.5     1     1  1000     1    NA      2 ## 12     3     0   1       0     0    NA     1     0     NA"},{"path":"https://calvagone.github.io/campsis.doc/articles/v01_dataset.html","id":"add-several-arms","dir":"Articles","previous_headings":"","what":"Add several arms","title":"Create your dataset","text":"Instead using default arm (0) dataset, several arms can created added dataset. arms independent sense treatment(s) observation(s) can totally different. illustrate , let’s create dataset two arms. Let’s create 2 different treatments: Observations may also differ: Let’s now add 2 arms fresh dataset: can check many subjects part dataset: resulting exported table follows:","code":"arm1 <- Arm(subjects=2) arm2 <- Arm(subjects=3) arm1 <- arm1 %>% add(Bolus(time=0, amount=1000)) arm2 <- arm2 %>% add(Bolus(time=0, amount=2000)) arm1 <- arm1 %>% add(Observations(times=c(0.5, 1))) arm2 <- arm2 %>% add(Observations(times=c(1, 1.5))) ds <- Dataset() %>% add(c(arm1, arm2)) ds %>% length() ## [1] 5 table <- ds %>% export(dest=\"RxODE\") table ## # A tibble: 15 × 9 ##       ID   ARM  TIME  EVID   MDV   AMT   CMT  RATE DOSENO ##    <dbl> <int> <dbl> <int> <int> <dbl> <int> <dbl>  <int> ##  1     1     1   0       1     1  1000     1     0      1 ##  2     1     1   0.5     0     0    NA     1     0     NA ##  3     1     1   1       0     0    NA     1     0     NA ##  4     2     1   0       1     1  1000     1     0      1 ##  5     2     1   0.5     0     0    NA     1     0     NA ##  6     2     1   1       0     0    NA     1     0     NA ##  7     3     2   0       1     1  2000     1     0      1 ##  8     3     2   1       0     0    NA     1     0     NA ##  9     3     2   1.5     0     0    NA     1     0     NA ## 10     4     2   0       1     1  2000     1     0      1 ## 11     4     2   1       0     0    NA     1     0     NA ## 12     4     2   1.5     0     0    NA     1     0     NA ## 13     5     2   0       1     1  2000     1     0      1 ## 14     5     2   1       0     0    NA     1     0     NA ## 15     5     2   1.5     0     0    NA     1     0     NA"},{"path":"https://calvagone.github.io/campsis.doc/articles/v02_uncertainties.html","id":"simulate-with-all-variabilities","dir":"Articles","previous_headings":"","what":"Simulate with all variabilities","title":"Variability levels","text":"Let’s use simple 1-compartment model absorption compartment illustrate different levels variabilities. ’re going use basic dataset. 1000 mg QD shall administered week. subjects different due IIV RUV.","code":"refModel <- model_suite$nonmem$advan2_trans2 refModel ## [MAIN] ## KA=THETA_KA*exp(ETA_KA) ## CL=THETA_CL*exp(ETA_CL) ## V=THETA_V*exp(ETA_V) ## S2=V ##  ## [ODE] ## d/dt(A_DEPOT)=-KA*A_DEPOT ## d/dt(A_CENTRAL)=-CL*A_CENTRAL/V + KA*A_DEPOT ## d/dt(A_OUTPUT)=CL*A_CENTRAL/V ## F=A_CENTRAL/S2 ##  ## [ERROR] ## CONC=F ## CONC_ERR=CONC*(EPS_PROP + 1) ##  ##  ## THETA's: ##   name index value   fix ## 1   KA     1     1 FALSE ## 2   CL     2     5 FALSE ## 3    V     3    80 FALSE ## OMEGA's: ##   name index index2 value   fix type ## 1   KA     1      1 0.025 FALSE  var ## 2   CL     2      2 0.025 FALSE  var ## 3    V     3      3 0.025 FALSE  var ## SIGMA's: ##   name index index2 value   fix type ## 1 PROP     1      1 0.025 FALSE  var ## No variance-covariance matrix ##  ## Compartments: ## A_DEPOT (CMT=1) ## A_CENTRAL (CMT=2) ## A_OUTPUT (CMT=3) ds <- Dataset(25) %>%   add(Bolus(time=0, amount=1000, ii=24, addl=6)) %>%   add(Observations(times=seq(0,24*7,by=4))) results <- refModel %>% simulate(dataset=ds, seed=1) spaghettiPlot(results, \"CONC_ERR\")"},{"path":"https://calvagone.github.io/campsis.doc/articles/v02_uncertainties.html","id":"simulate-without-ruv","dir":"Articles","previous_headings":"","what":"Simulate without RUV","title":"Variability levels","text":"Disabling RUV done follows: case, CONC_ERR (observed concentration) identical CONC (model-simulated plasma concentration).","code":"model <- refModel %>% disable(c(\"RUV\")) model@parameters ## THETA's: ##   name index value   fix ## 1   KA     1     1 FALSE ## 2   CL     2     5 FALSE ## 3    V     3    80 FALSE ## OMEGA's: ##   name index index2 value   fix type ## 1   KA     1      1 0.025 FALSE  var ## 2   CL     2      2 0.025 FALSE  var ## 3    V     3      3 0.025 FALSE  var ## SIGMA's: ##   name index index2 value   fix type ## 1 PROP     1      1     0 FALSE  var ## No variance-covariance matrix results <- model %>% simulate(dataset=ds, seed=1) spaghettiPlot(results, \"CONC_ERR\") spaghettiPlot(results, \"CONC\")"},{"path":"https://calvagone.github.io/campsis.doc/articles/v02_uncertainties.html","id":"simulate-without-ruv-and-iiv","dir":"Articles","previous_headings":"","what":"Simulate without RUV and IIV","title":"Variability levels","text":"Disabling RUV IIV done follows: Now, typical profile shown subjects.","code":"model <- refModel %>% disable(c(\"IIV\", \"RUV\")) model@parameters ## THETA's: ##   name index value   fix ## 1   KA     1     1 FALSE ## 2   CL     2     5 FALSE ## 3    V     3    80 FALSE ## OMEGA's: ##   name index index2 value   fix type ## 1   KA     1      1     0 FALSE  var ## 2   CL     2      2     0 FALSE  var ## 3    V     3      3     0 FALSE  var ## SIGMA's: ##   name index index2 value   fix type ## 1 PROP     1      1     0 FALSE  var ## No variance-covariance matrix results <- model %>% simulate(dataset=ds, seed=1) spaghettiPlot(results, \"CONC_ERR\")"},{"path":"https://calvagone.github.io/campsis.doc/articles/v03_covariates.html","id":"add-a-body-weight-covariate-into-the-model","dir":"Articles","previous_headings":"","what":"Add a body weight covariate into the model","title":"Covariates","text":"Let’s use simple 1-compartment model illustrate covariates managed CAMPSIS. example, ’re going add allometric scaling clearance parameter. infuse 1000 mg rate 200 mg/hour central compartment observe day. corresponding dataset follows: visualize clearly effect covariates, disable inter-individual variability model.","code":"model <- model_suite$nonmem$advan1_trans2 model <- model %>% replace(Equation(\"CL\", \"THETA_CL*exp(ETA_CL)*pow(BW/70, 0.75)\")) model ## [MAIN] ## CL=THETA_CL*exp(ETA_CL)*pow(BW/70, 0.75) ## V=THETA_V*exp(ETA_V) ## S1=V ##  ## [ODE] ## d/dt(A_CENTRAL)=-CL*A_CENTRAL/V ## d/dt(A_OUTPUT)=CL*A_CENTRAL/V ## F=A_CENTRAL/S1 ##  ## [ERROR] ## CONC=F ## CONC_ERR=CONC*(EPS_PROP + 1) ##  ##  ## THETA's: ##   name index value   fix ## 1   CL     1     5 FALSE ## 2    V     2    80 FALSE ## OMEGA's: ##   name index index2 value   fix type ## 1   CL     1      1 0.025 FALSE  var ## 2    V     2      2 0.025 FALSE  var ## SIGMA's: ##   name index index2 value   fix type ## 1 PROP     1      1 0.025 FALSE  var ## No variance-covariance matrix ##  ## Compartments: ## A_CENTRAL (CMT=1) ## A_OUTPUT (CMT=2) dataset <- Dataset() %>%     add(Infusion(time=0, amount=1000, rate=200)) %>%     add(Observations(times=seq(0,24,by=0.5))) model <- model %>% disable(\"IIV\")"},{"path":"https://calvagone.github.io/campsis.doc/articles/v03_covariates.html","id":"constant-body-weight","dir":"Articles","previous_headings":"","what":"Constant body weight","title":"Covariates","text":"Let’s define constant covariate dataset. done follows. simulated subjects exactly , IIV removed.","code":"ds <- dataset %>% setSubjects(5) %>%   add(Covariate(\"BW\", 70)) results <- model %>% simulate(dataset=ds) spaghettiPlot(results, \"CONC\")"},{"path":"https://calvagone.github.io/campsis.doc/articles/v03_covariates.html","id":"fix-body-weight-values-1subject","dir":"Articles","previous_headings":"","what":"Fix body weight values (1/subject)","title":"Covariates","text":"Let’s now define 1 body weight per subject. done follows. Simulated subjects now different.","code":"ds <- dataset %>% setSubjects(5) %>%   add(Covariate(\"BW\", c(50,60,70,80,90))) results <- model %>% simulate(dataset=ds) spaghettiPlot(results, \"CONC\")"},{"path":"https://calvagone.github.io/campsis.doc/articles/v03_covariates.html","id":"uniform-distribution","dir":"Articles","previous_headings":"","what":"Uniform distribution","title":"Covariates","text":"Let’s say now body weight uniform distribution. can implemented follows: Simulated weights sampled uniform distribution min value 50 max value 90.","code":"ds <- dataset %>% setSubjects(40) %>%   add(Covariate(\"BW\", UniformDistribution(min=50, max=90))) results <- model %>% simulate(dataset=ds, outvars=c(\"CONC\", \"BW\"), seed=1) gridExtra::grid.arrange(spaghettiPlot(results, \"BW\"), spaghettiPlot(results, \"CONC\"), nrow=1)"},{"path":"https://calvagone.github.io/campsis.doc/articles/v03_covariates.html","id":"normal-distribution","dir":"Articles","previous_headings":"","what":"Normal distribution","title":"Covariates","text":"Let’s say now body weight normal distribution. can implemented follows: Simulated weights sampled normal distribution mean 70 standard deviation 10.","code":"ds <- dataset %>% setSubjects(40) %>%   add(Covariate(\"BW\", NormalDistribution(mean=70, sd=10))) results <- model %>% simulate(dataset=ds, outvars=c(\"CONC\", \"BW\"), seed=1) gridExtra::grid.arrange(spaghettiPlot(results, \"BW\"), spaghettiPlot(results, \"CONC\"), nrow=1)"},{"path":"https://calvagone.github.io/campsis.doc/articles/v03_covariates.html","id":"log-normal-distribution","dir":"Articles","previous_headings":"","what":"Log-normal distribution","title":"Covariates","text":"Say now body weight log-normal distribution. can implemented follows: Simulated weights sampled log-normal distribution median 70 coefficient variation 20%.","code":"ds <- dataset %>% setSubjects(40) %>%   add(Covariate(\"BW\", LogNormalDistribution(meanlog=log(70), sdlog=0.2))) results <- model %>% simulate(dataset=ds, outvars=c(\"CONC\", \"BW\"), seed=1) gridExtra::grid.arrange(spaghettiPlot(results, \"BW\"), spaghettiPlot(results, \"CONC\"), nrow=1)"},{"path":"https://calvagone.github.io/campsis.doc/articles/v03_covariates.html","id":"bootstrap","dir":"Articles","previous_headings":"","what":"Bootstrap","title":"Covariates","text":"Body weight can also bootstrapped real dataset. Let’s create fictive one: Simulated weights sampled log-normal distribution median 70 coefficient variation 20%.","code":"bootstrap <- data.frame(ID=c(1,2,3,4,5), BW=c(89,54,60,75,77)) ds <- dataset %>% setSubjects(10) %>%   add(Covariate(\"BW\", BootstrapDistribution(data=bootstrap$BW, replacement=TRUE, random=TRUE))) results <- model %>% simulate(dataset=ds, outvars=c(\"CONC\", \"BW\"), seed=2) gridExtra::grid.arrange(spaghettiPlot(results, \"BW\"), spaghettiPlot(results, \"CONC\"), nrow=1)"},{"path":"https://calvagone.github.io/campsis.doc/articles/v04_bioavailability.html","id":"bioavailability-implemented-in-model","dir":"Articles","previous_headings":"","what":"Bioavailability implemented in model","title":"Bioavailability","text":"Let’s use 2-compartment model absorption compartment illustrate can achieved. example, ’re going define bioavailability F1 absorption compartment. First let’s create new parameter F1, log-normally distributed median 0.75 10% CV. Now, let’s add equation drug model define F1. Finally, need tell CAMPSIS F1 corresponds bioavailability. persisted drug model look like : Now, let’s now give simple bolus simulate without F1.","code":"model <- model_suite$nonmem$advan4_trans4 model <- model %>% add(Theta(name=\"F1\", value=0.75)) model <- model %>% add(Omega(name=\"F1\", value=10, type=\"cv%\")) model <- model %>% add(Equation(\"F1\", \"THETA_F1*exp(ETA_F1)\")) model <- model %>% add(Bioavailability(compartment=1, rhs=\"F1\")) model ## [MAIN] ## KA=THETA_KA*exp(ETA_KA) ## CL=THETA_CL*exp(ETA_CL) ## V2=THETA_V2*exp(ETA_V2) ## V3=THETA_V3*exp(ETA_V3) ## Q=THETA_Q*exp(ETA_Q) ## S2=V2 ## F1=THETA_F1*exp(ETA_F1) ##  ## [ODE] ## d/dt(A_DEPOT)=-KA*A_DEPOT ## d/dt(A_CENTRAL)=KA*A_DEPOT + Q*A_PERIPHERAL/V3 + (-CL/V2 - Q/V2)*A_CENTRAL ## d/dt(A_PERIPHERAL)=-Q*A_PERIPHERAL/V3 + Q*A_CENTRAL/V2 ## d/dt(A_OUTPUT)=CL*A_CENTRAL/V2 ## F=A_CENTRAL/S2 ##  ## [F] ## A_DEPOT=F1 ##  ## [ERROR] ## CONC=F ## CONC_ERR=CONC*(EPS_PROP + 1) ##  ##  ## THETA's: ##   name index value   fix ## 1   KA     1  1.00 FALSE ## 2   CL     2  5.00 FALSE ## 3   V2     3 80.00 FALSE ## 4   V3     4 20.00 FALSE ## 5    Q     5  4.00 FALSE ## 6   F1     6  0.75 FALSE ## OMEGA's: ##   name index index2  value   fix type ## 1   KA     1      1  0.025 FALSE  var ## 2   CL     2      2  0.025 FALSE  var ## 3   V2     3      3  0.025 FALSE  var ## 4   V3     4      4  0.025 FALSE  var ## 5    Q     5      5  0.025 FALSE  var ## 6   F1     6      6 10.000 FALSE  cv% ## SIGMA's: ##   name index index2 value   fix type ## 1 PROP     1      1 0.025 FALSE  var ## No variance-covariance matrix ##  ## Compartments: ## A_DEPOT (CMT=1) ## A_CENTRAL (CMT=2) ## A_PERIPHERAL (CMT=3) ## A_OUTPUT (CMT=4) ds1 <- Dataset(50) %>%   add(Bolus(time=0, amount=1000)) %>%   add(Observations(times=seq(0,24,by=0.5))) results_f1 <- model %>% simulate(dataset=ds1, seed=1) results_no_f1 <- model_suite$nonmem$advan4_trans4 %>% simulate(dataset=ds1, seed=1) gridExtra::grid.arrange(shadedPlot(results_f1, \"CONC\"), shadedPlot(results_no_f1, \"CONC\"), nrow=1)"},{"path":"https://calvagone.github.io/campsis.doc/articles/v04_bioavailability.html","id":"bioavailability-implemented-in-dataset","dir":"Articles","previous_headings":"","what":"Bioavailability implemented in dataset","title":"Bioavailability","text":"simulation can performed adapting column AMT dataset. First, need sample F1 values. can done follows: , can inject values dataset. Let’s look dataset, table form, look doses : Finally, can simulate original model using new dataset.","code":"distribution <- ParameterDistribution(model=model, theta=\"F1\", omega=\"F1\") f1Values <- (distribution %>% sample(as.integer(50)))@sampled_values ds2 <- Dataset(50) %>%   add(Bolus(time=0, amount=1000, f=f1Values)) %>%   add(Observations(times=seq(0,24,by=0.5))) ds2 %>% export(dest=\"RxODE\") %>% dosingOnly() %>% head() ## # A tibble: 6 × 9 ##      ID   ARM  TIME  EVID   MDV   AMT   CMT  RATE DOSENO ##   <dbl> <int> <dbl> <int> <int> <dbl> <int> <dbl>  <int> ## 1     1     0     0     1     1  705.     1     0      1 ## 2     2     0     0     1     1  764.     1     0      1 ## 3     3     0     0     1     1  690.     1     0      1 ## 4     4     0     0     1     1  879.     1     0      1 ## 5     5     0     0     1     1  775.     1     0      1 ## 6     6     0     0     1     1  691.     1     0      1 results_f1 <- model_suite$nonmem$advan4_trans4 %>% simulate(dataset=ds2, seed=1) shadedPlot(results_f1, \"CONC\")"},{"path":"https://calvagone.github.io/campsis.doc/articles/v05_lag_time.html","id":"lag-time-implemented-in-model","dir":"Articles","previous_headings":"","what":"Lag time implemented in model","title":"Lag time","text":"Let’s use 2-compartment model absorption compartment illustrate can achieved. example, ’re going define lag time ALAG1 absorption compartment. First let’s create new parameter ALAG1, log-normally distributed median 2 hours 20% CV. Now, let’s add equation drug model define ALAG1. Finally, need tell CAMPSIS ALAG1 corresponds lag time. persisted drug model look like : Now, let’s now give simple bolus simulate without ALAG1.","code":"model <- model_suite$nonmem$advan4_trans4 model <- model %>% add(Theta(name=\"ALAG1\", value=2)) model <- model %>% add(Omega(name=\"ALAG1\", value=20, type=\"cv%\")) model <- model %>% add(Equation(\"ALAG1\", \"THETA_ALAG1*exp(ETA_ALAG1)\")) model <- model %>% add(LagTime(compartment=1, rhs=\"ALAG1\")) model ## [MAIN] ## KA=THETA_KA*exp(ETA_KA) ## CL=THETA_CL*exp(ETA_CL) ## V2=THETA_V2*exp(ETA_V2) ## V3=THETA_V3*exp(ETA_V3) ## Q=THETA_Q*exp(ETA_Q) ## S2=V2 ## ALAG1=THETA_ALAG1*exp(ETA_ALAG1) ##  ## [ODE] ## d/dt(A_DEPOT)=-KA*A_DEPOT ## d/dt(A_CENTRAL)=KA*A_DEPOT + Q*A_PERIPHERAL/V3 + (-CL/V2 - Q/V2)*A_CENTRAL ## d/dt(A_PERIPHERAL)=-Q*A_PERIPHERAL/V3 + Q*A_CENTRAL/V2 ## d/dt(A_OUTPUT)=CL*A_CENTRAL/V2 ## F=A_CENTRAL/S2 ##  ## [LAG] ## A_DEPOT=ALAG1 ##  ## [ERROR] ## CONC=F ## CONC_ERR=CONC*(EPS_PROP + 1) ##  ##  ## THETA's: ##    name index value   fix ## 1    KA     1     1 FALSE ## 2    CL     2     5 FALSE ## 3    V2     3    80 FALSE ## 4    V3     4    20 FALSE ## 5     Q     5     4 FALSE ## 6 ALAG1     6     2 FALSE ## OMEGA's: ##    name index index2  value   fix type ## 1    KA     1      1  0.025 FALSE  var ## 2    CL     2      2  0.025 FALSE  var ## 3    V2     3      3  0.025 FALSE  var ## 4    V3     4      4  0.025 FALSE  var ## 5     Q     5      5  0.025 FALSE  var ## 6 ALAG1     6      6 20.000 FALSE  cv% ## SIGMA's: ##   name index index2 value   fix type ## 1 PROP     1      1 0.025 FALSE  var ## No variance-covariance matrix ##  ## Compartments: ## A_DEPOT (CMT=1) ## A_CENTRAL (CMT=2) ## A_PERIPHERAL (CMT=3) ## A_OUTPUT (CMT=4) ds1 <- Dataset(50) %>%   add(Bolus(time=0, amount=1000)) %>%   add(Observations(times=seq(0,24,by=0.5))) results_alag <- model %>% simulate(dataset=ds1, seed=1) results_no_alag <- model_suite$nonmem$advan4_trans4 %>% simulate(dataset=ds1, seed=1) gridExtra::grid.arrange(shadedPlot(results_alag, \"CONC\"), shadedPlot(results_no_alag, \"CONC\"), nrow=1)"},{"path":"https://calvagone.github.io/campsis.doc/articles/v05_lag_time.html","id":"lag-time-implemented-in-dataset","dir":"Articles","previous_headings":"","what":"Lag time implemented in dataset","title":"Lag time","text":"simulation can performed defining lag time bolus dataset. , need sample ALAG1 values. can done follows: , can inject dataset. overview dataset table form filter doses: Let’s now simulate dataset using original model.","code":"distribution <- ParameterDistribution(model=model, theta=\"ALAG1\", omega=\"ALAG1\") alagValues <- (distribution %>% sample(as.integer(50)))@sampled_values ds2 <- Dataset(50) %>%   add(Bolus(time=0, amount=1000, lag=alagValues)) %>%   add(Observations(times=seq(0,24,by=0.5))) ds2 %>% export(dest=\"RxODE\") %>% dosingOnly() %>% head() ## # A tibble: 6 × 9 ##      ID   ARM  TIME  EVID   MDV   AMT   CMT  RATE DOSENO ##   <dbl> <int> <dbl> <int> <int> <dbl> <int> <dbl>  <int> ## 1     1     0  1.77     1     1  1000     1     0      1 ## 2     2     0  2.07     1     1  1000     1     0      1 ## 3     3     0  1.69     1     1  1000     1     0      1 ## 4     4     0  2.74     1     1  1000     1     0      1 ## 5     5     0  2.13     1     1  1000     1     0      1 ## 6     6     0  1.70     1     1  1000     1     0      1 results_alag <- model_suite$nonmem$advan4_trans4 %>% simulate(dataset=ds2, seed=1) shadedPlot(results_alag, \"CONC\")"},{"path":"https://calvagone.github.io/campsis.doc/articles/v06_infusions.html","id":"infusion-duration-or-rate-implemented-in-model","dir":"Articles","previous_headings":"","what":"Infusion duration or rate implemented in model","title":"Infusions","text":"Let’s use 2-compartment model without absorption compartment illustrate can achieved. example, ’re going define lag time D1 absorption compartment. First let’s create new parameter D1, log-normally distributed median 5 hours 20% CV. Now, let’s add equation drug model define D1. Finally, need tell CAMPSIS D1 corresponds infusion duration first compartment. persisted drug model look like : Now, let’s infuse 1000 mg run simulation.","code":"model <- model_suite$nonmem$advan3_trans4 model <- model %>% add(Theta(name=\"D1\", value=5)) model <- model %>% add(Omega(name=\"D1\", value=20, type=\"cv%\")) model <- model %>% add(Equation(\"D1\", \"THETA_D1*exp(ETA_D1)\")) model <- model %>% add(InfusionDuration(compartment=1, rhs=\"D1\")) model ## [MAIN] ## CL=THETA_CL*exp(ETA_CL) ## V1=THETA_V1*exp(ETA_V1) ## V2=THETA_V2*exp(ETA_V2) ## Q=THETA_Q*exp(ETA_Q) ## S1=V1 ## D1=THETA_D1*exp(ETA_D1) ##  ## [ODE] ## d/dt(A_CENTRAL)=Q*A_PERIPHERAL/V2 + (-CL/V1 - Q/V1)*A_CENTRAL ## d/dt(A_PERIPHERAL)=-Q*A_PERIPHERAL/V2 + Q*A_CENTRAL/V1 ## d/dt(A_OUTPUT)=CL*A_CENTRAL/V1 ## F=A_CENTRAL/S1 ##  ## [DURATION] ## A_CENTRAL=D1 ##  ## [ERROR] ## CONC=F ## CONC_ERR=CONC*(EPS_PROP + 1) ##  ##  ## THETA's: ##   name index value   fix ## 1   CL     1     5 FALSE ## 2   V1     2    80 FALSE ## 3   V2     3    20 FALSE ## 4    Q     4     4 FALSE ## 5   D1     5     5 FALSE ## OMEGA's: ##   name index index2  value   fix type ## 1   CL     1      1  0.025 FALSE  var ## 2   V1     2      2  0.025 FALSE  var ## 3   V2     3      3  0.025 FALSE  var ## 4    Q     4      4  0.025 FALSE  var ## 5   D1     5      5 20.000 FALSE  cv% ## SIGMA's: ##   name index index2 value   fix type ## 1 PROP     1      1 0.025 FALSE  var ## No variance-covariance matrix ##  ## Compartments: ## A_CENTRAL (CMT=1) ## A_PERIPHERAL (CMT=2) ## A_OUTPUT (CMT=3) ds1 <- Dataset(50) %>%    add(Infusion(time=0, amount=1000)) %>%   add(Observations(times=seq(0,24,by=0.5))) results_d1 <- model %>% simulate(dataset=ds1, seed=1) shadedPlot(results_d1, \"CONC\")"},{"path":"https://calvagone.github.io/campsis.doc/articles/v06_infusions.html","id":"infusion-duration-or-rate-implemented-in-dataset","dir":"Articles","previous_headings":"","what":"Infusion duration or rate implemented in dataset","title":"Infusions","text":"simulation can performed defining infusion duration dataset. , need sample D1 values. can done follows: , can inject dataset. overview dataset table form filter doses: Let’s now simulate dataset using original model.","code":"distribution <- ParameterDistribution(model=model, theta=\"D1\", omega=\"D1\") d1Values <- (distribution %>% sample(as.integer(50)))@sampled_values ds2 <- Dataset(50) %>%   add(Infusion(time=0, amount=1000, duration=d1Values)) %>%   add(Observations(times=seq(0,24,by=0.5))) ds2 %>% export(dest=\"RxODE\") %>% dosingOnly() %>% head() ## # A tibble: 6 × 9 ##      ID   ARM  TIME  EVID   MDV   AMT   CMT  RATE DOSENO ##   <dbl> <int> <dbl> <int> <int> <dbl> <int> <dbl>  <int> ## 1     1     0     0     1     1  1000     1  226.      1 ## 2     2     0     0     1     1  1000     1  193.      1 ## 3     3     0     0     1     1  1000     1  236.      1 ## 4     4     0     0     1     1  1000     1  146.      1 ## 5     5     0     0     1     1  1000     1  187.      1 ## 6     6     0     0     1     1  1000     1  235.      1 results_d1 <- model_suite$nonmem$advan4_trans4 %>% simulate(dataset=ds2, seed=1) shadedPlot(results_d1, \"CONC\")"},{"path":"https://calvagone.github.io/campsis.doc/articles/v07_iov.html","id":"treatment-iov-on-ka","dir":"Articles","previous_headings":"","what":"Treatment IOV on KA","title":"Inter-occasion variability","text":"Let’s use 2-compartment model absorption compartment example. ’re going add term IOV_KA parameter KA. can done follows: model run unless give values IOV_KA. can achieved adding IOV dataset. following code create simple dataset IOV. disable IOV KA, replace method can used: can now run model IOV KA without.","code":"model <- model_suite$nonmem$advan4_trans4 model <- model %>% replace(Equation(\"KA\", \"THETA_KA*exp(ETA_KA + IOV_KA)\")) ds_iov <- Dataset(50) %>%    add(Bolus(time=c(0,24,48), amount=1000, compartment=1)) %>%    add(Observations(times=seq(0,72, by=0.5))) %>%    add(IOV(\"IOV_KA\", distribution=NormalDistribution(mean=0, sd=1))) ds_no_iov <- ds_iov %>% replace(IOV(\"IOV_KA\", 0)) results_iov <- model %>% simulate(dataset=ds_iov, seed=1) results_no_iov <- model %>% simulate(dataset=ds_no_iov, seed=1) gridExtra::grid.arrange(shadedPlot(results_iov, \"CONC\"), shadedPlot(results_no_iov, \"CONC\"), nrow=1)"},{"path":"https://calvagone.github.io/campsis.doc/articles/v08_initial_conditions.html","id":"init-central-compartment","dir":"Articles","previous_headings":"","what":"Init central compartment","title":"Initial conditions","text":"Assume following 2-compartment model used. ’d like init central compartment predefined value, e.g. 1000. can achieved follows. resulting model now new block [INIT] describes initial condition: Let’s now create dataset observations-. can now simulate model:","code":"model <- model_suite$nonmem$advan3_trans4 model <- model %>% add(InitialCondition(compartment=1, rhs=\"1000\")) model ## [MAIN] ## CL=THETA_CL*exp(ETA_CL) ## V1=THETA_V1*exp(ETA_V1) ## V2=THETA_V2*exp(ETA_V2) ## Q=THETA_Q*exp(ETA_Q) ## S1=V1 ##  ## [ODE] ## d/dt(A_CENTRAL)=Q*A_PERIPHERAL/V2 + (-CL/V1 - Q/V1)*A_CENTRAL ## d/dt(A_PERIPHERAL)=-Q*A_PERIPHERAL/V2 + Q*A_CENTRAL/V1 ## d/dt(A_OUTPUT)=CL*A_CENTRAL/V1 ## F=A_CENTRAL/S1 ##  ## [INIT] ## A_CENTRAL=1000 ##  ## [ERROR] ## CONC=F ## CONC_ERR=CONC*(EPS_PROP + 1) ##  ##  ## THETA's: ##   name index value   fix ## 1   CL     1     5 FALSE ## 2   V1     2    80 FALSE ## 3   V2     3    20 FALSE ## 4    Q     4     4 FALSE ## OMEGA's: ##   name index index2 value   fix type ## 1   CL     1      1 0.025 FALSE  var ## 2   V1     2      2 0.025 FALSE  var ## 3   V2     3      3 0.025 FALSE  var ## 4    Q     4      4 0.025 FALSE  var ## SIGMA's: ##   name index index2 value   fix type ## 1 PROP     1      1 0.025 FALSE  var ## No variance-covariance matrix ##  ## Compartments: ## A_CENTRAL (CMT=1) ## A_PERIPHERAL (CMT=2) ## A_OUTPUT (CMT=3) ds <- Dataset(50) %>%   add(Observations(times=seq(0,72, by=0.5))) results <- model %>% simulate(dataset=ds, seed=1) shadedPlot(results, \"CONC\")"},{"path":"https://calvagone.github.io/campsis.doc/articles/v09_dose_adaptation.html","id":"adapt-the-dose-based-on-a-covariate","dir":"Articles","previous_headings":"","what":"Adapt the dose based on a covariate","title":"Simple dose adaptations","text":"Assume drug needs dosed according subject’s weight, instance 0.5 mg per kg. illustrate , let’s use 2-compartment PK model absorption compartment. ’re going create dataset 4 individuals, weighing respectively 40, 60, 80 100 kg. dataset almost ready. just define dose adaptation formula. done follows: Let’s simulate simple dataset. order check dose adaptation formula well applied, set argument dosing TRUE. Dosing rows returned.  Let’s now look dosing information returned. looks great! respective amounts given indeed 20, 30, 40 50 mg!","code":"model <- model_suite$nonmem$advan4_trans4 dataset <- Dataset(4) %>%   add(Bolus(time=0, amount=0.5)) %>% # 0.5mg / kg   add(Observations(times=0:24)) %>%   add(Covariate(\"WT\", c(40, 60, 80, 100))) dataset <- dataset %>% add(DoseAdaptation(\"AMT*WT\")) results <- model %>% disable(\"IIV\") %>% simulate(dataset=dataset, dosing=TRUE, seed=1) spaghettiPlot(results, \"CONC\", \"ID\") results %>% dosingOnly() ## # A tibble: 4 × 19 ##      ID  EVID   CMT   AMT  TIME   ARM    KA    CL    V2    V3     Q    S2     F ##   <int> <int> <int> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> ## 1     1     1     1    20     0     0     1     5    80    20     4    80     0 ## 2     2     1     1    30     0     0     1     5    80    20     4    80     0 ## 3     3     1     1    40     0     0     1     5    80    20     4    80     0 ## 4     4     1     1    50     0     0     1     5    80    20     4    80     0 ## # ℹ 6 more variables: CONC <dbl>, CONC_ERR <dbl>, A_DEPOT <dbl>, ## #   A_CENTRAL <dbl>, A_PERIPHERAL <dbl>, A_OUTPUT <dbl>"},{"path":"https://calvagone.github.io/campsis.doc/articles/v10_replicate_study.html","id":"simulate-uncertainty-on-percentiles","dir":"Articles","previous_headings":"","what":"Simulate uncertainty on percentiles","title":"Replicate your study","text":"Assume following model used. model 2-compartment model without absorption compartment fitted data. contains variance-covariance matrix uncertainty estimated parameters. interested see uncertainty simulated concentration percentiles time. Let’s mimic protocol implemented study. Let’s now simulate model parameter uncertainty. Argument replicates specifies many times simulation replicated. Argument outfun function going called simulation output data frame. Function vpcPlot allows quickly visualize results.","code":"model <- model_suite$testing$other$my_model1 model ## [MAIN] ## CL=THETA_CL*exp(ETA_CL) ## V1=THETA_V1*exp(ETA_V1) ## V2=THETA_V2 ## Q=THETA_Q ## S1=V1 ##  ## [ODE] ## d/dt(A_CENTRAL)=Q*A_PERIPHERAL/V2 + (-CL/V1 - Q/V1)*A_CENTRAL ## d/dt(A_PERIPHERAL)=-Q*A_PERIPHERAL/V2 + Q*A_CENTRAL/V1 ## d/dt(A_OUTPUT)=CL*A_CENTRAL/V1 ## F=A_CENTRAL/S1 ##  ## [DURATION] ## A_CENTRAL=5 ##  ## [ERROR] ## CP=F ## OBS_CP=CP*(EPS_PROP + 1) ## Y=OBS_CP ##  ##  ## THETA's: ##   name index    value   fix        se      rse% ## 1   CL     1  4.76756 FALSE 0.1163899  2.441288 ## 2   V1     2 82.64090 FALSE 1.9256999  2.330202 ## 3   V2     3 19.53960 FALSE 1.5382328  7.872386 ## 4    Q     4  3.81451 FALSE 0.4726151 12.389929 ## OMEGA's: ##   name index index2     value   fix type          se     rse% ## 1   CL     1      1 0.0222955 FALSE  var 0.004867504 21.83178 ## 2   V1     2      2 0.0182225 FALSE  var 0.005172881 28.38733 ## SIGMA's: ##   name index index2     value   fix type           se    rse% ## 1 PROP     1      1 0.0244587 FALSE  var 0.0008126574 3.32257 ## Variance-covariance matrix available (see ?getVarCov) ##  ## Compartments: ## A_CENTRAL (CMT=1) ## A_PERIPHERAL (CMT=2) ## A_OUTPUT (CMT=3) ds <- Dataset(50) %>%   add(Infusion(time=(0:6)*24, amount=1000, compartment=1)) %>%   add(Observations(times=seq(0, 7*24))) results <- model %>% simulate(dataset=ds, replicates=10, outfun=~PI(.x, output=\"Y\"), seed=1) results %>% head() ## # A tibble: 6 × 4 ## # Groups:   TIME [2] ##   replicate  TIME metric value ##       <int> <dbl> <chr>  <dbl> ## 1         1     0 med     0    ## 2         1     0 low     0    ## 3         1     0 up      0    ## 4         1     1 med     2.33 ## 5         1     1 low     1.64 ## 6         1     1 up      3.03 vpcPlot(results)"},{"path":"https://calvagone.github.io/campsis.doc/articles/v11_scenarios.html","id":"simulate-several-protocols-at-once","dir":"Articles","previous_headings":"","what":"Simulate several protocols at once","title":"Scenarios","text":"Using treatment arms:  Using scenarios:","code":"model <- model_suite$nonmem$advan4_trans4  arm1 <- Arm(subjects=3, label=\"1000 mg SD\") %>%   add(Bolus(time=0, 1000)) %>%   add(Observations(times=seq(0, 24, by=0.1)))  arm2 <- Arm(subjects=5, label=\"1500 mg SD\") %>%   add(Bolus(time=0, 1500)) %>%   add(Observations(times=seq(0, 24, by=0.1)))  arm3 <- Arm(subjects=10, label=\"2000 mg SD\") %>%   add(Bolus(time=0, 2000)) %>%   add(Observations(times=seq(0, 24, by=0.1)))  results <- model %>% simulate(dataset=Dataset() %>% add(c(arm1, arm2, arm3)), seed=1) spaghettiPlot(results, \"CONC\", \"ARM\") + ggplot2::facet_wrap(~ARM) model <- model_suite$nonmem$advan4_trans4  dataset <- Dataset() %>%     add(Observations(times=seq(0, 24, by=0.1)))  scenarios <- Scenarios() %>%    add(Scenario(\"1000 mg SD\", dataset=~.x %>% setSubjects(3) %>% add(Bolus(time=0, 1000)))) %>%   add(Scenario(\"1500 mg SD\", dataset=~.x %>% setSubjects(5) %>% add(Bolus(time=0, 1500)))) %>%   add(Scenario(\"2000 mg SD\", dataset=~.x %>% setSubjects(10) %>% add(Bolus(time=0, 2000))))  results <- model %>% simulate(dataset=dataset, scenarios=scenarios, seed=1) spaghettiPlot(results, \"CONC\", \"SCENARIO\") + ggplot2::facet_wrap(~SCENARIO)"},{"path":"https://calvagone.github.io/campsis.doc/articles/v11_scenarios.html","id":"make-a-model-parameter-vary","dir":"Articles","previous_headings":"","what":"Make a model parameter vary","title":"Scenarios","text":"Assume want test different values THETA_KA:","code":"model <- model_suite$nonmem$advan4_trans4  ds <- Dataset(50) %>%   add(Bolus(time=0, amount=1000)) %>%   add(Observations(times=seq(0, 24, by=0.1)))   scenarios <- Scenarios() %>%    add(Scenario(\"THETA_KA=1\", model=~.x %>% replace(Theta(name=\"KA\", value=1)))) %>%   add(Scenario(\"THETA_KA=3\", model=~.x %>% replace(Theta(name=\"KA\", value=3)))) %>%   add(Scenario(\"THETA_KA=6\", model=~.x %>% replace(Theta(name=\"KA\", value=6))))  results <- model %>% simulate(dataset=ds, scenarios=scenarios, seed=1) shadedPlot(results, \"CONC\", \"SCENARIO\")"},{"path":"https://calvagone.github.io/campsis.doc/articles/v11_scenarios.html","id":"compare-different-distributions","dir":"Articles","previous_headings":"","what":"Compare different distributions","title":"Scenarios","text":"Assume want compare different distributions body weight BW:","code":"model <- model_suite$nonmem$advan1_trans2 %>%    replace(Equation(\"CL\", \"THETA_CL*exp(ETA_CL)*pow(BW/70, 0.75)\")) %>%    disable(\"IIV\")  ds <- Dataset(50) %>%   add(Bolus(time=0, amount=1000)) %>%   add(Observations(times=seq(0, 24, by=0.1))) %>%   add(Covariate(\"BW\", 70))  scenarios <- Scenarios() %>%    add(Scenario(\"Constant BW\")) %>%   add(Scenario(\"BW ∼ Uniform distribution\", dataset=~.x %>% replace(Covariate(\"BW\", UniformDistribution(min=60, max=80))))) %>%   add(Scenario(\"BW ∼ Normal distribution\", dataset=~.x %>% replace(Covariate(\"BW\", NormalDistribution(mean=70, sd=10)))))  results <- model %>% simulate(dataset=ds, scenarios=scenarios, seed=1) shadedPlot(results, \"CONC\", \"SCENARIO\") + ggplot2::facet_wrap(~SCENARIO, ncol=1)"},{"path":"https://calvagone.github.io/campsis.doc/articles/v12_time_varying_covariates.html","id":"body-weight-as-a-time-varying-covariate","dir":"Articles","previous_headings":"","what":"Body weight as a time varying covariate","title":"Time-varying covariates","text":"demonstration example, let’s implement allometric scaling clearance volume 1-compartment PK model: Assume drug given month BW varies time. time-varying covariate can added dataset follows: typical profile can simulated following way:  Let’s now compare profile another typical individual constant body weight 70 kg:  Finally, time-varying covariates can also individualized specifying ID column:","code":"model <- model_suite$nonmem$advan2_trans2 model <- model %>% replace(Equation(\"CL\", \"THETA_CL*exp(ETA_CL)*pow(BW/70, 0.75)\")) model <- model %>% replace(Equation(\"V\", \"THETA_V*exp(ETA_V)*BW/70\")) dataset <- Dataset(1) %>%   add(Bolus(time=0, amount=1000)) %>%   add(Observations(times=seq(0,30,by=0.1))) %>%   add(TimeVaryingCovariate(\"BW\", data.frame(TIME=c(0,7,14,21), VALUE=c(80,75,70,65)))) results <- model %>% disable(\"IIV\") %>% simulate(dataset, seed=1, outvars=\"BW\") gridExtra::grid.arrange(spaghettiPlot(results, \"CONC\"),                         spaghettiPlot(results, \"BW\"), ncol=1) scenarios <- Scenarios() %>%   add(Scenario(\"BW as time-varying covarite\")) %>%   add(Scenario(\"Fixed BW\", dataset=~.x %>% replace(Covariate(\"BW\", 70))))  results <- model %>% disable(\"IIV\") %>% simulate(dataset, seed=1, outvars=\"BW\", scenarios=scenarios) gridExtra::grid.arrange(spaghettiPlot(results, \"CONC\", \"SCENARIO\"),                         spaghettiPlot(results, \"BW\", \"SCENARIO\"), ncol=1) dataset <- Dataset(2) %>%   add(Bolus(time=0, amount=1000)) %>%   add(Observations(times=seq(0,30,by=0.1))) %>%   add(TimeVaryingCovariate(\"BW\", data.frame(ID=c(rep(1, 4), rep(2, 4)),                                             TIME=c(0,7,14,21, 0,7,14,21),                                             VALUE=c(80,75,70,65, 65,70,75,80)))) results <- model %>% disable(\"IIV\") %>% simulate(dataset, seed=1, outvars=\"BW\") gridExtra::grid.arrange(spaghettiPlot(results, \"CONC\", \"ID\"),                         spaghettiPlot(results, \"BW\", \"ID\"), ncol=1)"},{"path":"https://calvagone.github.io/campsis.doc/articles/v13_events.html","id":"dose-adaptation-based-on-ctrough-value","dir":"Articles","previous_headings":"","what":"Dose adaptation based on Ctrough value","title":"Interruption events","text":"first example dose adaptation, ’re going adapt dose based Ctrough. Say ’d like Ctrough exceed arbitrary safety limit 5 mg/L. rule follows: Ctrough greater 5, multiply last dose 0.75, otherwise continue dose. Let’s illustrate simple rule using events. use first compartment model absorption model library purpose.","code":"model <- model_suite$nonmem$advan2_trans2  dataset <- Dataset(10) %>%   add(Observations(times=0:168)) %>%   add(EventCovariate(\"DOSE\", 1500))  events <- Events() event1 <- Event(name=\"Dose adaptation\", times=seq(0, 144, by=24), fun=function(inits) {   inits$DOSE <- ifelse(inits$CONC > 5, inits$DOSE*0.75, inits$DOSE)   inits$A_DEPOT <- inits$A_DEPOT + inits$DOSE   return(inits) }) events <- events %>% add(event1)  results <- model %>% simulate(dataset, events=events, seed=1, outvars=\"DOSE\")  gridExtra::grid.arrange(spaghettiPlot(results, \"CONC\"), spaghettiPlot(results, \"DOSE\"), ncol=1)"},{"path":"https://calvagone.github.io/campsis.doc/articles/v14_complex_pkpd_models.html","id":"filgrastim-pkpd-model","dir":"Articles","previous_headings":"","what":"Filgrastim PK/PD model","title":"Complex PK/PD models from literature","text":"Load filgrastim PK/PD model model library follows. Please note model translated NONMEM code. original model file can found DDMORE repository. Eventually, model updated final parameters corresponding publication (Krzyzanski et al., 2010). Let’s create simple demonstration dataset 250 subjects: Assume want compare following subcutaneous administrations filgrastim: 2.5 μg/kg QD week 5 μg/kg QD week 10 μg/kg QD week define following scenarios: quick simulation gives us plasma concentration filgrastim, well absolute neutrophil count (ANC):","code":"pkpd <- model_suite$literature$filgrastim_pkpd_krzyzanski pkpd ## [MAIN] ## FF=THETA_FF ## KA=THETA_KA1*exp(ETA_KA1) ## FR=THETA_FR ## D2=THETA_D2 ## KEL=THETA_KEL*exp(ETA_KEL) ## VD=THETA_VD*exp(ETA_VD) ## KD=THETA_KD ## KINT=THETA_KINT ## KSI=THETA_KSI*exp(ETA_KSI) ## KOFF=THETA_KOFF ## KMT=THETA_KMT ## KBB1=THETA_KBB1 ## KTT=THETA_KTT ## NB0=THETA_NB0*exp(ETA_NB0) ## SC1=THETA_SC1*exp(ETA_SC1) ## SM1=THETA_SM1*exp(ETA_SM1) ## SM2=THETA_SM2*exp(ETA_SM2) ## SM3=THETA_SM3 ## CP0=BAS ## F1=FF ## F2=0 ## if (ROUT == 1) F1=0 ## if (ROUT == 1) F2=1 ## KON=KOFF/KD ## H10=CP0*SM1/(CP0 + SC1) + 1 ## H20=CP0*SM2/(CP0 + SC1) + 1 ## H30=CP0*SM3/(CP0 + SC1) + 1 ## KINB=KMT*NB0/H10 ## BM10=H10*KINB/(H20*KTT + H30*KBB1) ## BM20=BM10*H20*KTT/(H20*KTT + H30*KBB1) ## BM30=BM20*H20*KTT/(H20*KTT + H30*KBB1) ## BM40=BM30*H20*KTT/(H20*KTT + H30*KBB1) ## BM50=BM40*H20*KTT/(H20*KTT + H30*KBB1) ## BM60=BM50*H20*KTT/(H20*KTT + H30*KBB1) ## BM70=BM60*H20*KTT/(H20*KTT + H30*KBB1) ## BM80=BM70*H20*KTT/(H20*KTT + H30*KBB1) ## BM90=BM80*H20*KTT/(H20*KTT + H30*KBB1) ## NT0=BM10 + BM20 + BM30 + BM40 + BM50 + BM60 + BM70 + BM80 + BM90 + NB0 ## AC0=CP0*VD ## RTOT0=KSI*NT0 ## ADR0=AC0*RTOT0/(CP0 + KD) ## KIN=AC0*KEL + ADR0*KINT ##  ## [ODE] ## ABS=A_1 ## ATOT=A_2 ## BM1=A_5 ## BM2=A_6 ## BM3=A_7 ## BM4=A_8 ## BM5=A_9 ## BM6=A_10 ## BM7=A_11 ## BM8=A_12 ## BM9=A_13 ## NB=A_14 ## NT=BM1 + BM2 + BM3 + BM4 + BM5 + BM6 + BM7 + BM8 + BM9 + NB ## RTOT=KSI*NT ## BB=-A_2/VD + KD + RTOT ## CP=-0.5*BB + 0.5*sqrt(4*A_2*KD/VD + pow(BB, 2)) ## AC=CP*VD ## ADR=AC*RTOT/(CP + KD) ## H1=CP*SM1/(CP + SC1) + 1 ## H2=CP*SM2/(CP + SC1) + 1 ## H3=CP*SM3/(CP + SC1) + 1 ## d/dt(A_1)=-ABS*KA ## d/dt(A_2)=ABS*KA - AC*KEL - ADR*KINT + KIN ## d/dt(A_3)=0 ## d/dt(A_4)=0 ## d/dt(A_5)=-BM1*H2*KTT - BM1*H3*KBB1 + BM1*H1*KINB/BM10 ## d/dt(A_6)=BM1*H2*KTT - BM2*H2*KTT - BM2*H3*KBB1 ## d/dt(A_7)=BM2*H2*KTT - BM3*H2*KTT - BM3*H3*KBB1 ## d/dt(A_8)=BM3*H2*KTT - BM4*H2*KTT - BM4*H3*KBB1 ## d/dt(A_9)=BM4*H2*KTT - BM5*H2*KTT - BM5*H3*KBB1 ## d/dt(A_10)=BM5*H2*KTT - BM6*H2*KTT - BM6*H3*KBB1 ## d/dt(A_11)=BM6*H2*KTT - BM7*H2*KTT - BM7*H3*KBB1 ## d/dt(A_12)=BM7*H2*KTT - BM8*H2*KTT - BM8*H3*KBB1 ## d/dt(A_13)=BM8*H2*KTT - BM9*H2*KTT - BM9*H3*KBB1 ## d/dt(A_14)=BM9*H2*KTT + H3*KBB1*(BM1 + BM2 + BM3 + BM4 + BM5 + BM6 + BM7 + BM8 + BM9) - KMT*NB ##  ## [F] ## A_1=F1 ## A_2=F2 ##  ## [DURATION] ## A_2=D2 ##  ## [INIT] ## A_1=0 ## A_2=AC0 + ADR0 ## A_3=0 ## A_4=0 ## A_5=BM10 ## A_6=BM20 ## A_7=BM30 ## A_8=BM40 ## A_9=BM50 ## A_10=BM60 ## A_11=BM70 ## A_12=BM80 ## A_13=BM90 ## A_14=NB0 ##  ##  ## THETA's: ##    name index    value   fix ## 1    FF     1  0.60200 FALSE ## 2   KA1     2  0.65100 FALSE ## 3    FR     3  1.00000  TRUE ## 4    D2     4  0.50000  TRUE ## 5   KEL     5  0.15200 FALSE ## 6    VD     6  2.42000 FALSE ## 7    KD     7  1.44000 FALSE ## 8  KINT     8  0.10500 FALSE ## 9   KSI     9  0.18100 FALSE ## 10 KOFF    10  0.00000  TRUE ## 11  KMT    11  0.07280 FALSE ## 12 KBB1    12  0.00000  TRUE ## 13  KTT    13  0.00862 FALSE ## 14  NB0    14  1.55000 FALSE ## 15  SC1    15  3.15000 FALSE ## 16  SM1    16 34.70000 FALSE ## 17  SM2    17 32.20000 FALSE ## 18  SM3    18  0.00000  TRUE ## OMEGA's: ##   name index index2    value   fix type ## 1  NB0     1      1 0.109000 FALSE  var ## 2  KEL     2      2 0.194000 FALSE  var ## 3   VD     3      3 0.138000 FALSE  var ## 4  KA1     4      4 0.000000  TRUE  var ## 5  KSI     5      5 0.058700 FALSE  var ## 6  SC1     6      6 0.764000 FALSE  var ## 7  SM1     7      7 0.000188 FALSE  var ## 8  SM2     8      8 0.000000  TRUE  var ## SIGMA's: ## # A tibble: 0 × 0 ## No variance-covariance matrix ##  ## Compartments: ## A_1 (CMT=1) ## A_2 (CMT=2) ## A_3 (CMT=3) ## A_4 (CMT=4) ## A_5 (CMT=5) ## A_6 (CMT=6) ## A_7 (CMT=7) ## A_8 (CMT=8) ## A_9 (CMT=9) ## A_10 (CMT=10) ## A_11 (CMT=11) ## A_12 (CMT=12) ## A_13 (CMT=13) ## A_14 (CMT=14) baseDataset <- Dataset(250) %>%    add(Covariate(\"BAS\", 0.02)) %>%   add(Covariate(\"WT\", UniformDistribution(50, 100))) %>%   add(DoseAdaptation(\"WT*AMT\")) %>% # per kilo dosing   add(Observations(0:216)) %>%   add(Covariate(\"ROUT\", 0)) # subcutaneous route (SC) scenarios <- Scenarios() %>%    add(Scenario(\"2.5 μg/kg SC\", dataset=~.x %>% add(Bolus(time=0, amount=2.5, compartment=1, ii=24, addl=6)))) %>%   add(Scenario(\"5 μg/kg SC\", dataset=~.x %>% add(Bolus(time=0, amount=5, compartment=1, ii=24, addl=6)))) %>%   add(Scenario(\"10 μg/kg SC\", dataset=~.x %>% add(Bolus(time=0, amount=10, compartment=1, ii=24, addl=6)))) library(ggplot2)  results <- pkpd %>% simulate(dataset=baseDataset, scenarios=scenarios, seed=1) results <- results %>% dplyr::mutate(SCENARIO=factor(SCENARIO, levels=unique(SCENARIO)))  p1 <- shadedPlot(results, \"CP\", \"SCENARIO\") + facet_wrap(~SCENARIO) +   scale_y_log10(breaks=c(.01,.1,1,10,100)) + ylab(\"G-CSF Serum Concentration (ng/mL)\") p2 <- shadedPlot(results, \"A_14\", \"SCENARIO\") + facet_wrap(~SCENARIO) +    ylab(\"ANC (10^3 cells/μL)\")  gridExtra::grid.arrange(p1, p2, nrow=2)"},{"path":"https://calvagone.github.io/campsis.doc/articles/v15_pkpd_model_library.html","id":"direct-effect-model","dir":"Articles","previous_headings":"","what":"Direct-effect model","title":"PK/PD model library","text":"Load direct-effect model model library: Link PD model PK model follows: Simulate PK/PD model basic dataset:","code":"pd <- model_suite$pd$direct_effect_model pd ## [MAIN] ## EMAX=THETA_EMAX*exp(ETA_EMAX) ## EC50=THETA_EC50*exp(ETA_EC50) ## GAMMA=THETA_GAMMA*exp(ETA_GAMMA) ## E0=THETA_E0*exp(ETA_E0) ##  ## [ODE] ## PK_CONC=10 ## EFFECT=E0 + EMAX*pow(PK_CONC, GAMMA)/(pow(EC50, GAMMA) + pow(PK_CONC, GAMMA)) ##  ##  ## THETA's: ##    name index value   fix                        label  unit ## 1  EMAX     1 100.0 FALSE               Maximum effect  <NA> ## 2  EC50     2  10.0 FALSE Concentration at 50% of EMAX ng/mL ## 3 GAMMA     3   1.5 FALSE             Hill coefficient  <NA> ## 4    E0     4  20.0 FALSE                     Baseline  <NA> ## OMEGA's: ##    name index index2 value   fix type ## 1  EMAX     1      1    10 FALSE  cv% ## 2  EC50     2      2    10 FALSE  cv% ## 3 GAMMA     3      3    10 FALSE  cv% ## 4    E0     4      4    10 FALSE  cv% ## SIGMA's: ## # A tibble: 0 × 0 ## No variance-covariance matrix ##  ## Compartments: pkpd <- pk %>% add(pd) pkpd <- pkpd %>% replace(Equation(\"PK_CONC\", \"A_CENTRAL/S2\")) library(campsis) dataset <- Dataset(25) %>%    add(Bolus(time=0, amount=1000, compartment=1, ii=12, addl=6)) %>%   add(Observations(times=0:168)) results <- pkpd %>% simulate(dataset=dataset, seed=1)  gridExtra::grid.arrange(shadedPlot(results, \"CONC\"), shadedPlot(results, \"EFFECT\"), ncol=1)"},{"path":"https://calvagone.github.io/campsis.doc/articles/v15_pkpd_model_library.html","id":"effect-compartment-model","dir":"Articles","previous_headings":"","what":"Effect-compartment model","title":"PK/PD model library","text":"Load effect-compartment model model library: Link PD model PK model follows: Simulate PK/PD model basic dataset:","code":"pd <- model_suite$pd$effect_cmt_model pd ## [MAIN] ## EMAX=THETA_EMAX*exp(ETA_EMAX) ## EC50=THETA_EC50*exp(ETA_EC50) ## GAMMA=THETA_GAMMA*exp(ETA_GAMMA) ## E0=THETA_E0*exp(ETA_E0) ## KE0=THETA_KE0*exp(ETA_KE0) ##  ## [ODE] ## PK_CONC=10 ## d/dt(A_ECONC)=KE0*(PK_CONC - A_ECONC) ## EFFECT=E0 + EMAX*pow(A_ECONC, GAMMA)/(pow(EC50, GAMMA) + pow(A_ECONC, GAMMA)) ##  ##  ## THETA's: ##    name index value   fix                         label  unit ## 1  EMAX     1 100.0 FALSE                Maximum effect  <NA> ## 2  EC50     2  10.0 FALSE  Concentration at 50% of EMAX ng/mL ## 3 GAMMA     3   1.5 FALSE              Hill coefficient  <NA> ## 4    E0     4  20.0 FALSE                      Baseline  <NA> ## 5   KE0     5   0.5 FALSE Effect compartment delay rate   1/h ## OMEGA's: ##    name index index2 value   fix type ## 1  EMAX     1      1    10 FALSE  cv% ## 2  EC50     2      2    10 FALSE  cv% ## 3 GAMMA     3      3    10 FALSE  cv% ## 4    E0     4      4    10 FALSE  cv% ## 5   KE0     5      5    10 FALSE  cv% ## SIGMA's: ## # A tibble: 0 × 0 ## No variance-covariance matrix ##  ## Compartments: ## A_ECONC (CMT=1) pkpd <- pk %>% add(pd) pkpd <- pkpd %>% replace(Equation(\"PK_CONC\", \"A_CENTRAL/S2\")) library(campsis) dataset <- Dataset(25) %>%    add(Bolus(time=0, amount=1000, compartment=1, ii=12, addl=2)) %>%   add(Observations(times=0:36)) results <- pkpd %>% simulate(dataset=dataset, seed=1)  gridExtra::grid.arrange(shadedPlot(results, \"CONC\"), shadedPlot(results, \"EFFECT\"), ncol=1)"},{"path":"https://calvagone.github.io/campsis.doc/articles/v15_pkpd_model_library.html","id":"transit-compartment-model","dir":"Articles","previous_headings":"","what":"Transit-compartment model","title":"PK/PD model library","text":"Load transit-compartment model model library: Link PD model PK model follows: Simulate PK/PD model basic dataset:","code":"pd <- model_suite$pd$transit_cmt_model pd ## [MAIN] ## BASE=THETA_BASE*exp(ETA_BASE) ## POWER=THETA_POWER*exp(ETA_POWER) ## MTT=THETA_MTT*exp(ETA_MTT) ## SLOPE=THETA_SLOPE*exp(ETA_SLOPE) ## KTR=4/MTT ##  ## [ODE] ## PK_CONC=10 ## DRUG=SLOPE*PK_CONC ## d/dt(A_PROL)=KTR*A_PROL*pow(BASE/A_CIRC, POWER)*(1-DRUG)-KTR*A_PROL ## d/dt(A_TRANS1)=KTR*A_PROL - KTR*A_TRANS1 ## d/dt(A_TRANS2)=KTR*A_TRANS1 - KTR*A_TRANS2 ## d/dt(A_TRANS3)=KTR*A_TRANS2 - KTR*A_TRANS3 ## d/dt(A_CIRC)=KTR*A_TRANS3- KTR*A_CIRC ##  ## [INIT] ## A_PROL=BASE ## A_TRANS1=BASE ## A_TRANS2=BASE ## A_TRANS3=BASE ## A_CIRC=BASE ##  ##  ## THETA's: ##    name index   value   fix ## 1  BASE     1 1.0e+03 FALSE ## 2 POWER     2 1.5e-01 FALSE ## 3   MTT     3 1.0e+02 FALSE ## 4 SLOPE     4 5.0e-03 FALSE ## OMEGA's: ##    name index index2 value   fix type ## 1  BASE     1      1    10 FALSE  cv% ## 2 POWER     2      2    10 FALSE  cv% ## 3   MTT     3      3    10 FALSE  cv% ## 4 SLOPE     4      4    10 FALSE  cv% ## SIGMA's: ## # A tibble: 0 × 0 ## No variance-covariance matrix ##  ## Compartments: ## A_PROL (CMT=1) ## A_TRANS1 (CMT=2) ## A_TRANS2 (CMT=3) ## A_TRANS3 (CMT=4) ## A_CIRC (CMT=5) pkpd <- pk %>% add(pd) pkpd <- pkpd %>% replace(Equation(\"PK_CONC\", \"A_CENTRAL/S2\")) library(campsis) dataset <- Dataset(25) %>%    add(Bolus(time=0, amount=1000, compartment=1, ii=12, addl=35)) %>%   add(Observations(times=0:1000)) results <- pkpd %>% simulate(dataset=dataset, seed=1)  gridExtra::grid.arrange(shadedPlot(results, \"CONC\"), shadedPlot(results, \"A_CIRC\"), ncol=1)"},{"path":"https://calvagone.github.io/campsis.doc/articles/v15_pkpd_model_library.html","id":"indirect-response-model","dir":"Articles","previous_headings":"","what":"Indirect-response model","title":"PK/PD model library","text":"Load one 4 indirect-response model (IRM) present model library: Link PD model PK model follows: Simulate PK/PD model basic dataset:","code":"pd <- model_suite$pd$irm_kout_inhibition pd ## [MAIN] ## IC50=THETA_IC50*exp(ETA_IC50) ## IMAX=THETA_IMAX*exp(ETA_IMAX) ## BL=THETA_BL  *exp(ETA_BL) ## KOUT=THETA_KOUT*exp(ETA_KOUT) ## KIN=BL*KOUT ##  ## [ODE] ## PK_CONC=10 ## COEF=1 - IMAX*PK_CONC/(IC50 + PK_CONC) ## d/dt(A_EFFECT)=KIN - KOUT*COEF*A_EFFECT ##  ## [INIT] ## A_EFFECT=BL ##  ##  ## THETA's: ##   name index value   fix                        label  unit ## 1 IC50     1  15.0 FALSE Concentration at 50% of IMAX ng/mL ## 2 KOUT     2   0.1 FALSE  Rate of decline of response   1/h ## 3 IMAX     3   1.0 FALSE           Maximum inhibition  <NA> ## 4   BL     4 100.0 FALSE                     Baseline  <NA> ## OMEGA's: ##   name index index2 value   fix type ## 1 IC50     1      1    25 FALSE  cv% ## 2 KOUT     2      2    25 FALSE  cv% ## 3 IMAX     3      3     0 FALSE  cv% ## 4   BL     4      4    25 FALSE  cv% ## SIGMA's: ## # A tibble: 0 × 0 ## No variance-covariance matrix ##  ## Compartments: ## A_EFFECT (CMT=1) pkpd <- pk %>% add(pd) pkpd <- pkpd %>% replace(Equation(\"PK_CONC\", \"A_CENTRAL/S2\")) library(campsis) dataset <- Dataset(25) %>%    add(Bolus(time=0, amount=1000, compartment=1, ii=12, addl=35)) %>%   add(Observations(times=0:1000)) results <- pkpd %>% simulate(dataset=dataset, seed=1)  gridExtra::grid.arrange(shadedPlot(results, \"CONC\"), shadedPlot(results, \"A_EFFECT\"), ncol=1)"},{"path":"https://calvagone.github.io/campsis.doc/articles/v16_progress_bar.html","id":"track-the-simulation-progress-in-an-r-script","dir":"Articles","previous_headings":"","what":"Track the simulation progress in an R script","title":"Progress bar","text":"Load package progressr follows: easiest way track progress add following snippet script. , call simulate method campsis display progress bar. default, progress bar give progress percentage. user-custom handler may provided. Please look official documentation (Vignette progressr: Introduction / ‘Customizing progress reported’). want use default handler campsis, gives details ’s simulated ’s remaining time (ETA), can write: don’t want handler(s) global, can also explicitly call method with_progress. snippet example simulation method called.  handler may provided well:","code":"library(progressr) handlers(global=TRUE) handlers(campsis_handler()) dataset <- Dataset(1000) %>%   add(Infusion(time=0, amount=1000, compartment=1, ii=24, addl=6)) %>%   add(Observations(seq(0, 7*24)))  model <- model_suite$pk$`1cpt_fo` results <- with_progress(simulate(model=model, dataset=dataset, dest=\"mrgsolve\", seed=1, replicates=3)) shadedPlot(results, \"CONC\", \"replicate\") results <- with_progress(simulate(model=model, dataset=dataset, dest=\"mrgsolve\", seed=1, replicates=3), handlers=campsis_handler())"},{"path":"https://calvagone.github.io/campsis.doc/articles/v16_progress_bar.html","id":"track-the-simulation-progress-in-a-targets-project","dir":"Articles","previous_headings":"","what":"Track the simulation progress in a targets project","title":"Progress bar","text":"targets package Make-like pipeline tool Statistics data science R. targets, can maintain reproducible workflow without repeating . ideal pipeline tool use medium large simulation projects Campsis. following script (_targets.R) gives brief overview can achieve targets progress bar can enabled. important mention handlers(global=TRUE) can’t used script. try , error message pop . R folder contains much possible code (logic) executed, form R functions. snippet shows content my_script.R. explicit call with_progress make progress bar appear executing target results. small project can downloaded clicking link . run project, simply open R console within targets folder type:","code":"library(targets)  source(\"R/my_script.R\")  # Packages loaded by targets packages <- c(\"campsis\", \"progressr\") tar_option_set(packages=packages)  # Enable progress bar options(progressr.enable=TRUE) progressr::handlers(campsis::campsis_handler())  list(   tar_target(     model,     model_suite$pk$`1cpt_fo`   ),   tar_target(     dataset,     makeDataset(subjects=1000, dose=1000)   ),   tar_target(     results,     runSimulation(model=model, dataset=dataset, replicates=3)   ) ) makeDataset <- function(subjects, dose) {   dataset <- Dataset(subjects=subjects) %>%     add(Infusion(time=0, amount=dose, compartment=1, ii=24, addl=6)) %>%     add(Observations(seq(0, 7*24)))   return(dataset) }  runSimulation <- function(model, dataset, replicates) {   results <- with_progress(simulate(model=model, dataset=dataset, dest=\"mrgsolve\",                                     seed=1, replicates=replicates))   return(results) } library(targets) tar_make()"},{"path":"https://calvagone.github.io/campsis.doc/articles/v17_run_simulation_in_parallel.html","id":"base-model-and-dataset","dir":"Articles","previous_headings":"","what":"Base model and dataset","title":"Run your simulation in parallel","text":"","code":"model <- model_suite$pk$`2cpt_fo_mm`  dataset <- Dataset(100) %>%   add(Bolus(time=0, amount=100, ii=12, addl=10)) %>%   add(Observations(times=0:(11*12)))"},{"path":"https://calvagone.github.io/campsis.doc/articles/v17_run_simulation_in_parallel.html","id":"run-replicates-in-parallel","dir":"Articles","previous_headings":"","what":"Run replicates in parallel","title":"Run your simulation in parallel","text":"Sequential run: Using 6 cores:  Since uncertainty parameters since 1000 patients simulated replicate, confidence intervals percentiles low.","code":"tic() results <- simulate(model=model, dataset=dataset, dest=\"mrgsolve\", seed=1, outfun=~PI(.x, output=\"CONC\"), replicates=10) toc() ## 12.83 sec elapsed settings <- Settings(Hardware(cpu=6, replicate_parallel=TRUE)) tic() results <- simulate(model=model, dataset=dataset, dest=\"mrgsolve\", seed=1, outfun=~PI(.x, output=\"CONC\"), replicates=10, settings=settings) toc() ## 20.64 sec elapsed vpcPlot(results)"},{"path":"https://calvagone.github.io/campsis.doc/articles/v17_run_simulation_in_parallel.html","id":"run-scenarios-in-parallel","dir":"Articles","previous_headings":"","what":"Run scenarios in parallel","title":"Run your simulation in parallel","text":"Instead giving fixed dose, let’s make dose dynamic using DOSE covariate: Let’s create one scenario per dose tested: Sequential run: Using 6 cores (plan auto-setup): Using 6 cores (plan already setup last execution): Plot results:","code":"dataset_ <- dataset %>%   add(Covariate(\"DOSE\", 0)) %>%   add(DoseAdaptation(\"DOSE\")) scenarios <- Scenarios() for (dose in c(0.5,1,5,10,50,100,500,1000,5000,10000,50000,100000)) {   scenarios <- scenarios %>%     add(Scenario(name=paste0(\"DOSE=\", dose), dataset=dataset_ %>% replace(Covariate(\"DOSE\", dose)))) } tic() results <- simulate(model=model, dataset=dataset_, dest=\"mrgsolve\", seed=1, scenarios=scenarios) toc() ## 10.39 sec elapsed settings <- Settings(Hardware(cpu=6, scenario_parallel=TRUE)) tic() results <- simulate(model=model, dataset=dataset_, dest=\"mrgsolve\", seed=1, scenarios=scenarios, settings=settings) toc() ## 20.74 sec elapsed settings <- Settings(Hardware(cpu=6, scenario_parallel=TRUE, auto_setup_plan=FALSE)) tic() results <- simulate(model=model, dataset=dataset_, dest=\"mrgsolve\", seed=1, scenarios=scenarios, settings=settings) toc() ## 1.94 sec elapsed # Re-arrange scenarios by natural order results <- results %>% mutate(SCENARIO=factor(SCENARIO, levels=unique(SCENARIO)))  shadedPlot(results, \"CONC\", \"SCENARIO\") +   facet_wrap(~SCENARIO, ncol=4, scales=\"free_y\") +   guides(colour=\"none\", fill=\"none\")"},{"path":"https://calvagone.github.io/campsis.doc/articles/v17_run_simulation_in_parallel.html","id":"export-dataset-in-parallel","dir":"Articles","previous_headings":"","what":"Export dataset in parallel","title":"Run your simulation in parallel","text":"particular cases, number subjects important /dataset complex, may interesting export dataset parallel. Let’s illustrate feature using dataset contains lot subjects treatment IOV (costly). Sequential run: Using 6 cores (plan auto-setup): Using 6 cores (plan already setup last execution): Plot results:","code":"dataset_ <- dataset %>%   setSubjects(4000) %>%   add(IOV(\"IOV_KA\", distribution=NormalDistribution(mean=0, sd=0.1))) # This step is costly model_ <- model %>%   replaceAll(\"ETA_KA\", \"ETA_KA + IOV_KA\") tic() settings <- Settings(Hardware(slice_size=4000)) results <- simulate(model=model_, dataset=dataset_, dest=\"mrgsolve\", seed=1, settings=settings) toc() ## 15.45 sec elapsed settings <- Settings(Hardware(cpu=6, dataset_parallel=TRUE, dataset_slice_size=4000, slice_size=4000)) tic() results <- simulate(model=model_, dataset=dataset_, dest=\"mrgsolve\", seed=1, settings=settings) toc() ## 16.58 sec elapsed settings <- Settings(Hardware(cpu=6, dataset_parallel=TRUE, dataset_slice_size=4000, slice_size=4000, auto_setup_plan=FALSE)) tic() results <- simulate(model=model_, dataset=dataset_, dest=\"mrgsolve\", seed=1, settings=settings) toc() ## 7.45 sec elapsed shadedPlot(results, \"CONC\")"},{"path":"https://calvagone.github.io/campsis.doc/articles/v17_run_simulation_in_parallel.html","id":"run-slices-in-parallel","dir":"Articles","previous_headings":"","what":"Run slices in parallel","title":"Run your simulation in parallel","text":"may useful simulate slices parallel simulation time per individual high (e.g. long simulation). illustrate topic, let’s dose observe drug 6-month period. Sequential run (rxode2) : Sequential run (mrgsolve) : Using 6 cores (rxode2, plan auto-setup): Using 6 cores (mrgsolve, plan auto-setup): Please note default slice size mrgsolve 500, means 1 core used previous example. rxode2, works much smaller slice size 6 subjects, paralleling slices may interesting long simulations, demonstrated .","code":"dataset_ <- Dataset(10) %>%   add(Bolus(time=0, amount=100, ii=12, addl=364)) %>%   add(Observations(times=0:(365*12))) tic() results <- simulate(model=model, dataset=dataset_, dest=\"rxode2\", seed=1) toc() ## 15.64 sec elapsed tic() results <- simulate(model=model, dataset=dataset_, dest=\"mrgsolve\", seed=1) toc() ## 1.87 sec elapsed settings <- Settings(Hardware(cpu=6, slice_parallel=TRUE)) tic() results <- simulate(model=model, dataset=dataset_, dest=\"rxode2\", seed=1, settings=settings) toc() ## 15.65 sec elapsed settings <- Settings(Hardware(cpu=6, slice_parallel=TRUE)) tic() results <- simulate(model=model, dataset=dataset_, dest=\"mrgsolve\", seed=1, settings=settings) toc() ## 4.03 sec elapsed"},{"path":"https://calvagone.github.io/campsis.doc/articles/v17_run_simulation_in_parallel.html","id":"setup-plan-with-package-future","dir":"Articles","previous_headings":"","what":"Setup plan with package future","title":"Run your simulation in parallel","text":"may seen examples , argument auto_setup_plan TRUE default. means, Campsis, setup hardware plan every time call simulate method. comes high cost since setup phase can take time. repeated simulations, may useful setup plan manually . , can call setupPlanDefault settings hardware object: , please don’t forget set argument auto_setup_plan FALSE, give settings simulate method, otherwise plan setup … going back sequential execution (1 CPU core), can call:","code":"settings <- Settings(Hardware(cpu=2, replicate_parallel=TRUE, auto_setup_plan=FALSE)) setupPlanDefault(settings) setupPlanSequential()"},{"path":"https://calvagone.github.io/campsis.doc/articles/v17_run_simulation_in_parallel.html","id":"run-campsis-in-parallel-within-the-pipeline-tool-targets","dir":"Articles","previous_headings":"","what":"Run Campsis in parallel within the pipeline tool targets","title":"Run your simulation in parallel","text":"targets package Make-like pipeline tool Statistics data science R. targets, can maintain reproducible workflow without repeating . ideal pipeline tool use medium large simulation projects Campsis. package supports parallelisation therefore can complete simulation workflow faster. following script (_targets.R) gives brief overview can run several simulation targets parallel. small project can downloaded clicking link . run project, nothing easier. Open R console within targets folder type:","code":"library(targets)  source(\"R/my_script.R\")  # Packages loaded by targets packages <- c(\"campsis\", \"progressr\", \"future\") tar_option_set(packages=packages, storage=\"worker\", retrieval=\"worker\")  # Prepare 3 workers future::plan(future::multisession, workers=3)  list(   tar_target(     model,     model_suite$pk$`1cpt_zo_abs_lag`,     deployment=\"main\"   ),   tar_target(     dataset,     makeDataset(subjects=1000, dose=1000),     deployment=\"main\"   ),   tar_target(     results1,     runSimulation(model=model, dataset=dataset, replicates=10, seed=1),     deployment=\"worker\"   ),   tar_target(     results2,     runSimulation(model=model, dataset=dataset, replicates=10, seed=2),     deployment=\"worker\"   ),   tar_target(     results3,     runSimulation(model=model, dataset=dataset, replicates=10, seed=3),     deployment=\"worker\"   ) ) library(targets) tar_make_future(workers=3)"},{"path":"https://calvagone.github.io/campsis.doc/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Nicolas Luyckx. Author, maintainer.","code":""},{"path":"https://calvagone.github.io/campsis.doc/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Luyckx N (2024). campsis: Generic PK/PD Simulation Platform CAMPSIS. R package version 1.5.1, https://calvagone.github.io/, https://github.com/Calvagone/campsis.","code":"@Manual{,   title = {campsis: Generic PK/PD Simulation Platform CAMPSIS},   author = {Nicolas Luyckx},   year = {2024},   note = {R package version 1.5.1, https://calvagone.github.io/},   url = {https://github.com/Calvagone/campsis}, }"},{"path":[]},{"path":"https://calvagone.github.io/campsis.doc/index.html","id":"requirements","dir":"","previous_headings":"","what":"Requirements","title":"Generic PK/PD Simulation Platform CAMPSIS","text":"R package campsismod must installed beforehand Simulation engine must installed (rxode2, RxODE mrgsolve)","code":""},{"path":"https://calvagone.github.io/campsis.doc/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Generic PK/PD Simulation Platform CAMPSIS","text":"Install latest stable release using devtools:","code":"devtools::install_github(\"Calvagone/campsis\")"},{"path":"https://calvagone.github.io/campsis.doc/index.html","id":"basic-example","dir":"","previous_headings":"","what":"Basic example","title":"Generic PK/PD Simulation Platform CAMPSIS","text":"Import campsis package: Create dataset: Load model use built-model library: Simulate results preferred simulation engine (rxode2, RxODE mrgsolve choice!): Plot results:","code":"library(campsis) ds <- Dataset(50) %>%   add(Bolus(time=0, amount=1000, ii=12, addl=2)) %>%   add(Observations(times=seq(0, 36, by=0.5))) model <- model_suite$pk$`2cpt_fo` results <- model %>% simulate(dataset=ds, dest=\"rxode2\", seed=1) shadedPlot(results, \"CONC\")"},{"path":"https://calvagone.github.io/campsis.doc/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://calvagone.github.io/campsis.doc/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://calvagone.github.io/campsis.doc/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://calvagone.github.io/campsis.doc/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://calvagone.github.io/campsis.doc/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://calvagone.github.io/campsis.doc/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://calvagone.github.io/campsis.doc/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://calvagone.github.io/campsis.doc/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://calvagone.github.io/campsis.doc/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://calvagone.github.io/campsis.doc/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://calvagone.github.io/campsis.doc/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://calvagone.github.io/campsis.doc/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://calvagone.github.io/campsis.doc/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://calvagone.github.io/campsis.doc/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://calvagone.github.io/campsis.doc/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://calvagone.github.io/campsis.doc/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://calvagone.github.io/campsis.doc/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://calvagone.github.io/campsis.doc/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://calvagone.github.io/campsis.doc/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://calvagone.github.io/campsis.doc/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://calvagone.github.io/campsis.doc/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://calvagone.github.io/campsis.doc/reference/applyCompartmentCharacteristics.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply compartment characteristics from model.\r\nIn practice, only compartment infusion duration needs to be applied. — applyCompartmentCharacteristics","title":"Apply compartment characteristics from model.\r\nIn practice, only compartment infusion duration needs to be applied. — applyCompartmentCharacteristics","text":"Apply compartment characteristics model. practice, compartment infusion duration needs applied.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/applyCompartmentCharacteristics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply compartment characteristics from model.\r\nIn practice, only compartment infusion duration needs to be applied. — applyCompartmentCharacteristics","text":"","code":"applyCompartmentCharacteristics(table, properties)"},{"path":"https://calvagone.github.io/campsis.doc/reference/applyCompartmentCharacteristics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply compartment characteristics from model.\r\nIn practice, only compartment infusion duration needs to be applied. — applyCompartmentCharacteristics","text":"table current dataset properties compartment properties model","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/applyCompartmentCharacteristics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply compartment characteristics from model.\r\nIn practice, only compartment infusion duration needs to be applied. — applyCompartmentCharacteristics","text":"updated dataset","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/applyScenario.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply scenario to the given model or dataset. — applyScenario","title":"Apply scenario to the given model or dataset. — applyScenario","text":"Apply scenario given model dataset.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/applyScenario.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply scenario to the given model or dataset. — applyScenario","text":"","code":"applyScenario(x, scenario)"},{"path":"https://calvagone.github.io/campsis.doc/reference/applyScenario.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply scenario to the given model or dataset. — applyScenario","text":"x given model dataset scenario scenario applied","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/applyScenario.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply scenario to the given model or dataset. — applyScenario","text":"updated model dataset","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/arm-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Arm class. — arm-class","title":"Arm class. — arm-class","text":"Arm class.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/arm-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Arm class. — arm-class","text":"id arm unique ID, integer subjects number subjects arm, integer label arm label, single character string protocol protocol covariates covariates bootstrap covariates bootstrapped","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/Arm.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a treatment arm. — Arm","title":"Create a treatment arm. — Arm","text":"Create treatment arm.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/Arm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a treatment arm. — Arm","text":"","code":"Arm(id = as.integer(NA), subjects = 1, label = as.character(NA))"},{"path":"https://calvagone.github.io/campsis.doc/reference/Arm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a treatment arm. — Arm","text":"id unique identifier arm (available trough dataset), integer. NA (default), identifier auto-incremented. subjects number subjects arm, integer label arm label, single character string. set, label output ARM column CAMPSIS instead identifier.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/Arm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a treatment arm. — Arm","text":"arm","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/arms-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Arms class. — arms-class","title":"Arms class. — arms-class","text":"Arms class.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/assignDoseNumber.html","id":null,"dir":"Reference","previous_headings":"","what":"Assign dose number to each treatment entry. — assignDoseNumber","title":"Assign dose number to each treatment entry. — assignDoseNumber","text":"Assign dose number treatment entry.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/assignDoseNumber.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assign dose number to each treatment entry. — assignDoseNumber","text":"","code":"assignDoseNumber(object)"},{"path":"https://calvagone.github.io/campsis.doc/reference/assignDoseNumber.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assign dose number to each treatment entry. — assignDoseNumber","text":"object treatment","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/assignDoseNumber.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assign dose number to each treatment entry. — assignDoseNumber","text":"updated treatment object","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/BinomialDistribution.html","id":null,"dir":"Reference","previous_headings":"","what":"Binomial distribution. — BinomialDistribution","title":"Binomial distribution. — BinomialDistribution","text":"Binomial distribution.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/BinomialDistribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Binomial distribution. — BinomialDistribution","text":"","code":"BinomialDistribution(trials, prob)"},{"path":"https://calvagone.github.io/campsis.doc/reference/BinomialDistribution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Binomial distribution. — BinomialDistribution","text":"trials number Bernoulli trials per observation (=subject), integer prob probability success trial","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/BinomialDistribution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Binomial distribution. — BinomialDistribution","text":"binomial distribution","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/bolus-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Bolus class. — bolus-class","title":"Bolus class. — bolus-class","text":"Bolus class.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/Bolus.html","id":null,"dir":"Reference","previous_headings":"","what":"Create one or several bolus(es). — Bolus","title":"Create one or several bolus(es). — Bolus","text":"Create one several bolus(es).","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/Bolus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create one or several bolus(es). — Bolus","text":"","code":"Bolus(   time,   amount,   compartment = NA,   f = NULL,   lag = NULL,   ii = NULL,   addl = NULL )"},{"path":"https://calvagone.github.io/campsis.doc/reference/Bolus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create one or several bolus(es). — Bolus","text":"time treatment time(s), numeric value vector. First treatment time used together ii addl. amount amount give bolus, single numeric value compartment compartment index, single integer value f fraction dose amount, distribution lag dose lag time, distribution ii interdose interval, requires argument 'time' single numeric value addl number additional doses, requires argument 'time' single integer value","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/Bolus.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create one or several bolus(es). — Bolus","text":"single bolus list boluses","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/bootstrap-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Bootstrap class. — bootstrap-class","title":"Bootstrap class. — bootstrap-class","text":"Bootstrap class.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/bootstrap-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Bootstrap class. — bootstrap-class","text":"data data frame bootstrapped. Column 'BS_ID' mandatory corresponds original row ID bootstrap. must numeric unique. columns covariates bootstrapped (row row). replacement values can reused , logical random values drawn randomly, logical export_id tell CAMPSIS 'BS_ID' must exported dataset, logical","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/Bootstrap.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a bootstrap object. — Bootstrap","title":"Create a bootstrap object. — Bootstrap","text":"Create bootstrap object.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/Bootstrap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a bootstrap object. — Bootstrap","text":"","code":"Bootstrap(   data,   id = \"BS_ID\",   replacement = FALSE,   random = FALSE,   export_id = FALSE )"},{"path":"https://calvagone.github.io/campsis.doc/reference/Bootstrap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a bootstrap object. — Bootstrap","text":"data data frame bootstrapped. must unique identifier column named according specified argument 'id' (default value 'BS_ID'). columns covariates bootstrap. must numeric. Whatever configuration bootstrap, covariates always read row row belong individual. id unique identifier column name data replacement values can reused drawn, logical random values drawn randomly, logical export_id tell CAMPSIS identifier 'BS_ID' must output , logical","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/Bootstrap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a bootstrap object. — Bootstrap","text":"bootstrap object","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/BootstrapDistribution.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a bootstrap distribution. During function sampling, CAMPSIS will generate\r\nvalues depending on the given data and arguments. — BootstrapDistribution","title":"Create a bootstrap distribution. During function sampling, CAMPSIS will generate\r\nvalues depending on the given data and arguments. — BootstrapDistribution","text":"Create bootstrap distribution. function sampling, CAMPSIS generate values depending given data arguments.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/BootstrapDistribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a bootstrap distribution. During function sampling, CAMPSIS will generate\r\nvalues depending on the given data and arguments. — BootstrapDistribution","text":"","code":"BootstrapDistribution(data, replacement = FALSE, random = FALSE)"},{"path":"https://calvagone.github.io/campsis.doc/reference/BootstrapDistribution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a bootstrap distribution. During function sampling, CAMPSIS will generate\r\nvalues depending on the given data and arguments. — BootstrapDistribution","text":"data values draw, numeric vector replacement values can reused , logical random values drawn randomly, logical","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/BootstrapDistribution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a bootstrap distribution. During function sampling, CAMPSIS will generate\r\nvalues depending on the given data and arguments. — BootstrapDistribution","text":"bootstrap distribution","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/bootstrap_distribution-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Bootstrap distribution class. — bootstrap_distribution-class","title":"Bootstrap distribution class. — bootstrap_distribution-class","text":"Bootstrap distribution class.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/bootstrap_distribution-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Bootstrap distribution class. — bootstrap_distribution-class","text":"data values draw, numeric vector replacement values can reused , logical random values drawn randomly, logical","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/campsis_handler.html","id":null,"dir":"Reference","previous_headings":"","what":"Suggested Campsis handler for showing the progress bar. — campsis_handler","title":"Suggested Campsis handler for showing the progress bar. — campsis_handler","text":"Suggested Campsis handler showing progress bar.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/campsis_handler.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Suggested Campsis handler for showing the progress bar. — campsis_handler","text":"","code":"campsis_handler()"},{"path":"https://calvagone.github.io/campsis.doc/reference/campsis_handler.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Suggested Campsis handler for showing the progress bar. — campsis_handler","text":"progressr handler list","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/checkIIandADDL.html","id":null,"dir":"Reference","previous_headings":"","what":"Check ii and addl arguments in addition to time. — checkIIandADDL","title":"Check ii and addl arguments in addition to time. — checkIIandADDL","text":"Check ii addl arguments addition time.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/checkIIandADDL.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check ii and addl arguments in addition to time. — checkIIandADDL","text":"","code":"checkIIandADDL(time, ii, addl)"},{"path":"https://calvagone.github.io/campsis.doc/reference/checkIIandADDL.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check ii and addl arguments in addition to time. — checkIIandADDL","text":"time treatment time(s) ii interdose interval addl number additional doses","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/checkIIandADDL.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check ii and addl arguments in addition to time. — checkIIandADDL","text":"return value","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/computeIncrementalProgress.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute incremental progress. — computeIncrementalProgress","title":"Compute incremental progress. — computeIncrementalProgress","text":"Compute incremental progress.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/computeIncrementalProgress.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute incremental progress. — computeIncrementalProgress","text":"","code":"computeIncrementalProgress(object, tick_slice)"},{"path":"https://calvagone.github.io/campsis.doc/reference/computeIncrementalProgress.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute incremental progress. — computeIncrementalProgress","text":"object simulation progress object tick_slice tick progress slices","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/computeIncrementalProgress.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute incremental progress. — computeIncrementalProgress","text":"incremental progress, percentage","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/ConstantDistribution.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a constant distribution. Its value will be constant across all generated samples. — ConstantDistribution","title":"Create a constant distribution. Its value will be constant across all generated samples. — ConstantDistribution","text":"Create constant distribution. value constant across generated samples.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/ConstantDistribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a constant distribution. Its value will be constant across all generated samples. — ConstantDistribution","text":"","code":"ConstantDistribution(value)"},{"path":"https://calvagone.github.io/campsis.doc/reference/ConstantDistribution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a constant distribution. Its value will be constant across all generated samples. — ConstantDistribution","text":"value covariate value, single numeric value","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/ConstantDistribution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a constant distribution. Its value will be constant across all generated samples. — ConstantDistribution","text":"constant distribution (value samples)","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/constant_distribution-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Constant distribution class. — constant_distribution-class","title":"Constant distribution class. — constant_distribution-class","text":"Constant distribution class.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/constant_distribution-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Constant distribution class. — constant_distribution-class","text":"value covariate value, single numeric value","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/counterBalanceLocfMode.html","id":null,"dir":"Reference","previous_headings":"","what":"Counter-balance LOCF mode for occasions & IOV.\r\nThis function will simply shift all the related occasion & IOV columns to the left (by one). — counterBalanceLocfMode","title":"Counter-balance LOCF mode for occasions & IOV.\r\nThis function will simply shift all the related occasion & IOV columns to the left (by one). — counterBalanceLocfMode","text":"Counter-balance LOCF mode occasions & IOV. function simply shift related occasion & IOV columns left (one).","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/counterBalanceLocfMode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Counter-balance LOCF mode for occasions & IOV.\r\nThis function will simply shift all the related occasion & IOV columns to the left (by one). — counterBalanceLocfMode","text":"","code":"counterBalanceLocfMode(table, columnNames)"},{"path":"https://calvagone.github.io/campsis.doc/reference/counterBalanceLocfMode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Counter-balance LOCF mode for occasions & IOV.\r\nThis function will simply shift all the related occasion & IOV columns to the left (by one). — counterBalanceLocfMode","text":"table current table columnNames columns counter-balanced","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/counterBalanceLocfMode.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Counter-balance LOCF mode for occasions & IOV.\r\nThis function will simply shift all the related occasion & IOV columns to the left (by one). — counterBalanceLocfMode","text":"2-dimensional dataset","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/counterBalanceNocbMode.html","id":null,"dir":"Reference","previous_headings":"","what":"Counter-balance NOCB mode for occasions & IOV.\r\nThis function will simply shift all the related occasion & IOV columns to the right (by one). — counterBalanceNocbMode","title":"Counter-balance NOCB mode for occasions & IOV.\r\nThis function will simply shift all the related occasion & IOV columns to the right (by one). — counterBalanceNocbMode","text":"Counter-balance NOCB mode occasions & IOV. function simply shift related occasion & IOV columns right (one).","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/counterBalanceNocbMode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Counter-balance NOCB mode for occasions & IOV.\r\nThis function will simply shift all the related occasion & IOV columns to the right (by one). — counterBalanceNocbMode","text":"","code":"counterBalanceNocbMode(table, columnNames)"},{"path":"https://calvagone.github.io/campsis.doc/reference/counterBalanceNocbMode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Counter-balance NOCB mode for occasions & IOV.\r\nThis function will simply shift all the related occasion & IOV columns to the right (by one). — counterBalanceNocbMode","text":"table current table columnNames columns counter-balanced","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/counterBalanceNocbMode.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Counter-balance NOCB mode for occasions & IOV.\r\nThis function will simply shift all the related occasion & IOV columns to the right (by one). — counterBalanceNocbMode","text":"2-dimensional dataset","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/covariate-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Covariate class. — covariate-class","title":"Covariate class. — covariate-class","text":"Covariate class.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/covariate-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Covariate class. — covariate-class","text":"name covariate name, single character value distribution covariate distribution","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/Covariate.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a non time-varying (fixed) covariate. — Covariate","title":"Create a non time-varying (fixed) covariate. — Covariate","text":"Create non time-varying (fixed) covariate.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/Covariate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a non time-varying (fixed) covariate. — Covariate","text":"","code":"Covariate(name, distribution)"},{"path":"https://calvagone.github.io/campsis.doc/reference/Covariate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a non time-varying (fixed) covariate. — Covariate","text":"name covariate name, single character value distribution covariate distribution","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/Covariate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a non time-varying (fixed) covariate. — Covariate","text":"fixed covariate","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/covariates-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Covariates class. — covariates-class","title":"Covariates class. — covariates-class","text":"Covariates class.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/cutTableForEvent.html","id":null,"dir":"Reference","previous_headings":"","what":"Cut table according to given iteration. — cutTableForEvent","title":"Cut table according to given iteration. — cutTableForEvent","text":"Cut table according given iteration.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/cutTableForEvent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cut table according to given iteration. — cutTableForEvent","text":"","code":"cutTableForEvent(table, iteration, summary)"},{"path":"https://calvagone.github.io/campsis.doc/reference/cutTableForEvent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cut table according to given iteration. — cutTableForEvent","text":"table whole table, data frame iteration current iteration processed summary dataset summary","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/cutTableForEvent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cut table according to given iteration. — cutTableForEvent","text":"data frame","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/dataset-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Dataset class. — dataset-class","title":"Dataset class. — dataset-class","text":"Dataset class.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/dataset-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Dataset class. — dataset-class","text":"arms list treatment arms config dataset configuration export iiv data frame containing inter-individual variability (ETAS) export","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/Dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a dataset. — Dataset","title":"Create a dataset. — Dataset","text":"Create dataset.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/Dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a dataset. — Dataset","text":"","code":"Dataset(subjects = NULL)"},{"path":"https://calvagone.github.io/campsis.doc/reference/Dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a dataset. — Dataset","text":"subjects number subjects default arm","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/Dataset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a dataset. — Dataset","text":"dataset","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/DatasetConfig.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a dataset configuration. This configuration allows CAMPSIS to know which\r\nare the default depot and observed compartments. — DatasetConfig","title":"Create a dataset configuration. This configuration allows CAMPSIS to know which\r\nare the default depot and observed compartments. — DatasetConfig","text":"Create dataset configuration. configuration allows CAMPSIS know default depot observed compartments.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/DatasetConfig.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a dataset configuration. This configuration allows CAMPSIS to know which\r\nare the default depot and observed compartments. — DatasetConfig","text":"","code":"DatasetConfig(   defDepotCmt = 1,   defObsCmt = 1,   exportTSLD = FALSE,   exportTDOS = FALSE )"},{"path":"https://calvagone.github.io/campsis.doc/reference/DatasetConfig.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a dataset configuration. This configuration allows CAMPSIS to know which\r\nare the default depot and observed compartments. — DatasetConfig","text":"defDepotCmt default depot compartment, integer defObsCmt default observation compartment, integer exportTSLD export column TSLD (time since last dose), logical exportTDOS export column TDOS (time last dose), logical","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/DatasetConfig.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a dataset configuration. This configuration allows CAMPSIS to know which\r\nare the default depot and observed compartments. — DatasetConfig","text":"dataset configuration","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/DatasetSummary.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a dataset summary (internal method). — DatasetSummary","title":"Create a dataset summary (internal method). — DatasetSummary","text":"Create dataset summary (internal method).","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/DatasetSummary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a dataset summary (internal method). — DatasetSummary","text":"","code":"DatasetSummary()"},{"path":"https://calvagone.github.io/campsis.doc/reference/DatasetSummary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a dataset summary (internal method). — DatasetSummary","text":"dataset summary","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/dataset_config-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Dataset configuration class. — dataset_config-class","title":"Dataset configuration class. — dataset_config-class","text":"Dataset configuration class.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/dataset_config-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Dataset configuration class. — dataset_config-class","text":"def_depot_cmt default depot compartment, integer def_obs_cmt default observation compartment, integer export_tsld export column TSLD, logical export_tdos export column TDOS, logical","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/Declare.html","id":null,"dir":"Reference","previous_headings":"","what":"Create declare settings. — Declare","title":"Create declare settings. — Declare","text":"Create declare settings.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/Declare.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create declare settings. — Declare","text":"","code":"Declare(variables = character(0))"},{"path":"https://calvagone.github.io/campsis.doc/reference/Declare.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create declare settings. — Declare","text":"variables uninitialized variables declared, needed mrgsolve","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/Declare.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create declare settings. — Declare","text":"Declare settings","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/declare_settings-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Declare settings class. — declare_settings-class","title":"Declare settings class. — declare_settings-class","text":"Declare settings class.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/declare_settings-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Declare settings class. — declare_settings-class","text":"variables uninitialized variables declared, needed mrgsolve","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/DiscreteDistribution.html","id":null,"dir":"Reference","previous_headings":"","what":"Discrete distribution. — DiscreteDistribution","title":"Discrete distribution. — DiscreteDistribution","text":"Discrete distribution.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/DiscreteDistribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Discrete distribution. — DiscreteDistribution","text":"","code":"DiscreteDistribution(x, prob, replace = TRUE)"},{"path":"https://calvagone.github.io/campsis.doc/reference/DiscreteDistribution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Discrete distribution. — DiscreteDistribution","text":"x vector one integers choose prob vector probability weights obtaining elements vector sampled replace sampling replacement, default TRUE","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/DiscreteDistribution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Discrete distribution. — DiscreteDistribution","text":"discrete distribution","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/distribution-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Distribution class. See this class as an interface. — distribution-class","title":"Distribution class. See this class as an interface. — distribution-class","text":"Distribution class. See class interface.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/DoseAdaptation.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a dose adaptation. — DoseAdaptation","title":"Create a dose adaptation. — DoseAdaptation","text":"Create dose adaptation.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/DoseAdaptation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a dose adaptation. — DoseAdaptation","text":"","code":"DoseAdaptation(formula, compartments = integer(0))"},{"path":"https://calvagone.github.io/campsis.doc/reference/DoseAdaptation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a dose adaptation. — DoseAdaptation","text":"formula formula apply, single character string, e.g. \"AMT*WT\" compartments compartment numbers formula needs applied, integer vector. Default integer(0) (formula applied compartments)","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/DoseAdaptation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a dose adaptation. — DoseAdaptation","text":"fixed covariate","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/dose_adaptation-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Dose adaptation class. — dose_adaptation-class","title":"Dose adaptation class. — dose_adaptation-class","text":"Dose adaptation class.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/dose_adaptation-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Dose adaptation class. — dose_adaptation-class","text":"formula formula apply, single character string, e.g. \"AMT*WT\" compartments compartment numbers formula needs applied","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/dose_adaptations-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Dose adaptations class. — dose_adaptations-class","title":"Dose adaptations class. — dose_adaptations-class","text":"Dose adaptations class.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/dosingOnly.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter CAMPSIS output on dosing rows. — dosingOnly","title":"Filter CAMPSIS output on dosing rows. — dosingOnly","text":"Filter CAMPSIS output dosing rows.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/dosingOnly.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter CAMPSIS output on dosing rows. — dosingOnly","text":"","code":"dosingOnly(x)"},{"path":"https://calvagone.github.io/campsis.doc/reference/dosingOnly.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter CAMPSIS output on dosing rows. — dosingOnly","text":"x data frame, CAMPSIS output","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/dosingOnly.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter CAMPSIS output on dosing rows. — dosingOnly","text":"data frame dosing rows","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/dropOthers.html","id":null,"dir":"Reference","previous_headings":"","what":"Return the 'DROP_OTHERS' string that may be used in the 'outvars' vector for\r\nRxODE/mrgsolve to drop all others variables that are usually output in the resulting data frame. — dropOthers","title":"Return the 'DROP_OTHERS' string that may be used in the 'outvars' vector for\r\nRxODE/mrgsolve to drop all others variables that are usually output in the resulting data frame. — dropOthers","text":"Return 'DROP_OTHERS' string may used 'outvars' vector RxODE/mrgsolve drop others variables usually output resulting data frame.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/dropOthers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return the 'DROP_OTHERS' string that may be used in the 'outvars' vector for\r\nRxODE/mrgsolve to drop all others variables that are usually output in the resulting data frame. — dropOthers","text":"","code":"dropOthers()"},{"path":"https://calvagone.github.io/campsis.doc/reference/dropOthers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return the 'DROP_OTHERS' string that may be used in the 'outvars' vector for\r\nRxODE/mrgsolve to drop all others variables that are usually output in the resulting data frame. — dropOthers","text":"character value","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/EtaDistribution.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an ETA distribution. The resulting distribution is a\r\nnormal distribution, with mean=0 and sd=sqrt(OMEGA). — EtaDistribution","title":"Create an ETA distribution. The resulting distribution is a\r\nnormal distribution, with mean=0 and sd=sqrt(OMEGA). — EtaDistribution","text":"Create ETA distribution. resulting distribution normal distribution, mean=0 sd=sqrt(OMEGA).","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/EtaDistribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an ETA distribution. The resulting distribution is a\r\nnormal distribution, with mean=0 and sd=sqrt(OMEGA). — EtaDistribution","text":"","code":"EtaDistribution(model, omega)"},{"path":"https://calvagone.github.io/campsis.doc/reference/EtaDistribution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an ETA distribution. The resulting distribution is a\r\nnormal distribution, with mean=0 and sd=sqrt(OMEGA). — EtaDistribution","text":"model model omega corresponding THETA name, character","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/EtaDistribution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an ETA distribution. The resulting distribution is a\r\nnormal distribution, with mean=0 and sd=sqrt(OMEGA). — EtaDistribution","text":"ETA distribution","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/event-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Event class. — event-class","title":"Event class. — event-class","text":"Event class.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/event-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Event class. — event-class","text":"name event name, character value times interruption times, numeric vector fun event function apply interruption debug output variables changed event","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/Event.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an interruption event. — Event","title":"Create an interruption event. — Event","text":"Create interruption event.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/Event.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an interruption event. — Event","text":"","code":"Event(name = NULL, times, fun, debug = FALSE)"},{"path":"https://calvagone.github.io/campsis.doc/reference/Event.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an interruption event. — Event","text":"name event name, character value times interruption times, numeric vector fun event function apply interruption debug output variables changed event","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/Event.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an interruption event. — Event","text":"event definition","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/EventCovariate.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an event covariate. These covariates can be modified further in\r\ninterruption events. — EventCovariate","title":"Create an event covariate. These covariates can be modified further in\r\ninterruption events. — EventCovariate","text":"Create event covariate. covariates can modified interruption events.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/EventCovariate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an event covariate. These covariates can be modified further in\r\ninterruption events. — EventCovariate","text":"","code":"EventCovariate(name, distribution)"},{"path":"https://calvagone.github.io/campsis.doc/reference/EventCovariate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an event covariate. These covariates can be modified further in\r\ninterruption events. — EventCovariate","text":"name covariate name, character distribution covariate distribution time 0","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/EventCovariate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an event covariate. These covariates can be modified further in\r\ninterruption events. — EventCovariate","text":"time-varying covariate","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/EventIteration.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an event iteration object. — EventIteration","title":"Create an event iteration object. — EventIteration","text":"Create event iteration object.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/EventIteration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an event iteration object. — EventIteration","text":"","code":"EventIteration(index, start, end, inits = data.frame(), maxIndex)"},{"path":"https://calvagone.github.io/campsis.doc/reference/EventIteration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an event iteration object. — EventIteration","text":"index iteration index, starts 1 start iteration start time end iteration end time inits initial values subjects, data frame maxIndex last iteration index","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/EventIteration.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an event iteration object. — EventIteration","text":"event iteration object","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/EventRelatedObservations.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an event-related observations list. Please note that the provided 'times' will \r\nautomatically be sorted. Duplicated times will be removed. — EventRelatedObservations","title":"Create an event-related observations list. Please note that the provided 'times' will \r\nautomatically be sorted. Duplicated times will be removed. — EventRelatedObservations","text":"Create event-related observations list. Please note provided 'times'  automatically sorted. Duplicated times removed.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/EventRelatedObservations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an event-related observations list. Please note that the provided 'times' will \r\nautomatically be sorted. Duplicated times will be removed. — EventRelatedObservations","text":"","code":"EventRelatedObservations(times, compartment = NA)"},{"path":"https://calvagone.github.io/campsis.doc/reference/EventRelatedObservations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an event-related observations list. Please note that the provided 'times' will \r\nautomatically be sorted. Duplicated times will be removed. — EventRelatedObservations","text":"times observation times, numeric vector compartment compartment index, integer","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/EventRelatedObservations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an event-related observations list. Please note that the provided 'times' will \r\nautomatically be sorted. Duplicated times will be removed. — EventRelatedObservations","text":"observations","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/events-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Events class. — events-class","title":"Events class. — events-class","text":"Events class.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/Events.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a list of interruption events. — Events","title":"Create a list of interruption events. — Events","text":"Create list interruption events.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/Events.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a list of interruption events. — Events","text":"","code":"Events()"},{"path":"https://calvagone.github.io/campsis.doc/reference/Events.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a list of interruption events. — Events","text":"events object","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/event_covariate-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Event covariate class. — event_covariate-class","title":"Event covariate class. — event_covariate-class","text":"Event covariate class.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/exportDelegate.html","id":null,"dir":"Reference","previous_headings":"","what":"Export delegate method. This method is common to RxODE and mrgsolve. — exportDelegate","title":"Export delegate method. This method is common to RxODE and mrgsolve. — exportDelegate","text":"Export delegate method. method common RxODE mrgsolve.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/exportDelegate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export delegate method. This method is common to RxODE and mrgsolve. — exportDelegate","text":"","code":"exportDelegate(object, dest, model, arm_offset = NULL, offset_within_arm = 0)"},{"path":"https://calvagone.github.io/campsis.doc/reference/exportDelegate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export delegate method. This method is common to RxODE and mrgsolve. — exportDelegate","text":"object current dataset dest destination engine model Campsis model, provided, ETA's added dataset arm_offset arm offset (ID's) apply parallelisation used. Default value NULL, meaning parallelisation disabled. Otherwise, corresponds offset apply current arm exported (parallel). offset_within_arm offset (ID's) apply within current arm exported (used parallelisation enabled), default 0","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/exportDelegate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export delegate method. This method is common to RxODE and mrgsolve. — exportDelegate","text":"2-dimensional dataset, RxODE mrgsolve","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/exportTableDelegate.html","id":null,"dir":"Reference","previous_headings":"","what":"Export table delegate. — exportTableDelegate","title":"Export table delegate. — exportTableDelegate","text":"Export table delegate.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/exportTableDelegate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export table delegate. — exportTableDelegate","text":"","code":"exportTableDelegate(model, dataset, dest, events, seed, tablefun, settings)"},{"path":"https://calvagone.github.io/campsis.doc/reference/exportTableDelegate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export table delegate. — exportTableDelegate","text":"model generic CAMPSIS model dataset CAMPSIS dataset 2-dimensional table dest destination simulation engine, default 'RxODE' events interruption events seed seed value tablefun function lambda formula apply exported 2-dimensional dataset settings advanced simulation settings","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/exportTableDelegate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export table delegate. — exportTableDelegate","text":"data frame","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/factorScenarios.html","id":null,"dir":"Reference","previous_headings":"","what":"Factor scenarios columns if not done yet. — factorScenarios","title":"Factor scenarios columns if not done yet. — factorScenarios","text":"Factor scenarios columns done yet.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/factorScenarios.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Factor scenarios columns if not done yet. — factorScenarios","text":"","code":"factorScenarios(x, scenarios = NULL)"},{"path":"https://calvagone.github.io/campsis.doc/reference/factorScenarios.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Factor scenarios columns if not done yet. — factorScenarios","text":"x data frame scenarios scenarios","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/fillIOVOccColumns.html","id":null,"dir":"Reference","previous_headings":"","what":"Fill IOV/Occasion columns. — fillIOVOccColumns","title":"Fill IOV/Occasion columns. — fillIOVOccColumns","text":"Problem RxODE (LOCF mode) / mrgsolve (LOCF mode), 2 rows time (often: OBS DOSE), first row covariate value taken! Workaround: identify rows (group ID TIME) apply fill direction.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/fillIOVOccColumns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fill IOV/Occasion columns. — fillIOVOccColumns","text":"","code":"fillIOVOccColumns(table, columnNames, downDirectionFirst)"},{"path":"https://calvagone.github.io/campsis.doc/reference/fillIOVOccColumns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fill IOV/Occasion columns. — fillIOVOccColumns","text":"table current table columnNames column names fill downDirectionFirst TRUE: first fill fill (ID & TIME). FALSE: First fill (ID & TIME), fill ","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/fillIOVOccColumns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fill IOV/Occasion columns. — fillIOVOccColumns","text":"2-dimensional dataset","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/FixedDistribution.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a fixed distribution.\r\nEach sample will be assigned a fixed value coming from vector 'values'. — FixedDistribution","title":"Create a fixed distribution.\r\nEach sample will be assigned a fixed value coming from vector 'values'. — FixedDistribution","text":"Create fixed distribution. sample assigned fixed value coming vector 'values'.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/FixedDistribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a fixed distribution.\r\nEach sample will be assigned a fixed value coming from vector 'values'. — FixedDistribution","text":"","code":"FixedDistribution(values)"},{"path":"https://calvagone.github.io/campsis.doc/reference/FixedDistribution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a fixed distribution.\r\nEach sample will be assigned a fixed value coming from vector 'values'. — FixedDistribution","text":"values covariate values, numeric vector (1 value per sample)","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/FixedDistribution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a fixed distribution.\r\nEach sample will be assigned a fixed value coming from vector 'values'. — FixedDistribution","text":"fixed distribution (1 value per sample)","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/fixed_covariate-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Fixed covariate class. — fixed_covariate-class","title":"Fixed covariate class. — fixed_covariate-class","text":"Fixed covariate class.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/fixed_distribution-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Fixed distribution class. — fixed_distribution-class","title":"Fixed distribution class. — fixed_distribution-class","text":"Fixed distribution class.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/fixed_distribution-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Fixed distribution class. — fixed_distribution-class","text":"values covariate values, numeric vector (1 value per sample)","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/FunctionDistribution.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a function distribution. During distribution sampling, the provided function\r\nwill be responsible for generating values for each sample. If first argument\r\nof this function is not the size (n), please tell which argument corresponds\r\nto the size 'n' (e.g. list(size=","title":"Create a function distribution. During distribution sampling, the provided function\r\nwill be responsible for generating values for each sample. If first argument\r\nof this function is not the size (n), please tell which argument corresponds\r\nto the size 'n' (e.g. list(size=","text":"Create function distribution. distribution sampling, provided function responsible generating values sample. first argument function size (n), please tell argument corresponds size 'n' (e.g. list(size=\"n\")).","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/FunctionDistribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a function distribution. During distribution sampling, the provided function\r\nwill be responsible for generating values for each sample. If first argument\r\nof this function is not the size (n), please tell which argument corresponds\r\nto the size 'n' (e.g. list(size=","text":"","code":"FunctionDistribution(fun, args)"},{"path":"https://calvagone.github.io/campsis.doc/reference/FunctionDistribution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a function distribution. During distribution sampling, the provided function\r\nwill be responsible for generating values for each sample. If first argument\r\nof this function is not the size (n), please tell which argument corresponds\r\nto the size 'n' (e.g. list(size=","text":"fun function name, character (e.g. 'rnorm') args list arguments (e.g list(mean=70, sd=10))","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/FunctionDistribution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a function distribution. During distribution sampling, the provided function\r\nwill be responsible for generating values for each sample. If first argument\r\nof this function is not the size (n), please tell which argument corresponds\r\nto the size 'n' (e.g. list(size=","text":"function distribution","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/function_distribution-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Function distribution class. — function_distribution-class","title":"Function distribution class. — function_distribution-class","text":"Function distribution class.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/function_distribution-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Function distribution class. — function_distribution-class","text":"fun function name, character (e.g. 'rnorm') args list arguments (e.g list(mean=70, sd=10))","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/generateIIV.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate IIV matrix for the given Campsis model. — generateIIV","title":"Generate IIV matrix for the given Campsis model. — generateIIV","text":"Generate IIV matrix given Campsis model.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/generateIIV.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate IIV matrix for the given Campsis model. — generateIIV","text":"","code":"generateIIV(model, n, offset = 0)"},{"path":"https://calvagone.github.io/campsis.doc/reference/generateIIV.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate IIV matrix for the given Campsis model. — generateIIV","text":"model Campsis model n number subjects offset specified, resulting ID ID + offset","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/generateIIV.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate IIV matrix for the given Campsis model. — generateIIV","text":"IIV data frame ID column","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/generateIIV_.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate IIV matrix for the given OMEGA matrix. — generateIIV_","title":"Generate IIV matrix for the given OMEGA matrix. — generateIIV_","text":"Generate IIV matrix given OMEGA matrix.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/generateIIV_.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate IIV matrix for the given OMEGA matrix. — generateIIV_","text":"","code":"generateIIV_(omega, n)"},{"path":"https://calvagone.github.io/campsis.doc/reference/generateIIV_.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate IIV matrix for the given OMEGA matrix. — generateIIV_","text":"omega omega matrix n number subjects","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/generateIIV_.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate IIV matrix for the given OMEGA matrix. — generateIIV_","text":"IIV data frame","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/getColumn.html","id":null,"dir":"Reference","previous_headings":"","what":"Get data of given column unless if does not exist (return NULL in that case). — getColumn","title":"Get data of given column unless if does not exist (return NULL in that case). — getColumn","text":"Get data given column unless exist (return NULL case).","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/getColumn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get data of given column unless if does not exist (return NULL in that case). — getColumn","text":"","code":"getColumn(.data, colname)"},{"path":"https://calvagone.github.io/campsis.doc/reference/getColumn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get data of given column unless if does not exist (return NULL in that case). — getColumn","text":".data data frame colname column name","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/getColumn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get data of given column unless if does not exist (return NULL in that case). — getColumn","text":"vector","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/getCovariates.html","id":null,"dir":"Reference","previous_headings":"","what":"Get all covariates (fixed / time-varying / event covariates). — getCovariates","title":"Get all covariates (fixed / time-varying / event covariates). — getCovariates","text":"Get covariates (fixed / time-varying / event covariates).","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/getCovariates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get all covariates (fixed / time-varying / event covariates). — getCovariates","text":"","code":"getCovariates(object)  # S4 method for covariates getCovariates(object)  # S4 method for arm getCovariates(object)  # S4 method for arms getCovariates(object)  # S4 method for dataset getCovariates(object)"},{"path":"https://calvagone.github.io/campsis.doc/reference/getCovariates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get all covariates (fixed / time-varying / event covariates). — getCovariates","text":"object object","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/getCovariates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get all covariates (fixed / time-varying / event covariates). — getCovariates","text":"covariates object","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/getDatasetMaxTime.html","id":null,"dir":"Reference","previous_headings":"","what":"Get dataset max time. — getDatasetMaxTime","title":"Get dataset max time. — getDatasetMaxTime","text":"Get dataset max time.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/getDatasetMaxTime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get dataset max time. — getDatasetMaxTime","text":"","code":"getDatasetMaxTime(dataset)"},{"path":"https://calvagone.github.io/campsis.doc/reference/getDatasetMaxTime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get dataset max time. — getDatasetMaxTime","text":"dataset dataset","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/getDatasetMaxTime.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get dataset max time. — getDatasetMaxTime","text":"max time dataset, whatever form, 2-dimensional structured","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/getEventCovariates.html","id":null,"dir":"Reference","previous_headings":"","what":"Get all event-related covariates. — getEventCovariates","title":"Get all event-related covariates. — getEventCovariates","text":"Get event-related covariates.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/getEventCovariates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get all event-related covariates. — getEventCovariates","text":"","code":"getEventCovariates(object)  # S4 method for covariates getEventCovariates(object)  # S4 method for arm getEventCovariates(object)  # S4 method for arms getEventCovariates(object)  # S4 method for dataset getEventCovariates(object)"},{"path":"https://calvagone.github.io/campsis.doc/reference/getEventCovariates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get all event-related covariates. — getEventCovariates","text":"object object","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/getEventCovariates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get all event-related covariates. — getEventCovariates","text":"event-related covariates object","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/getEventIterations.html","id":null,"dir":"Reference","previous_headings":"","what":"Get list of event iterations. — getEventIterations","title":"Get list of event iterations. — getEventIterations","text":"Get list event iterations.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/getEventIterations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get list of event iterations. — getEventIterations","text":"","code":"getEventIterations(events, maxTime)"},{"path":"https://calvagone.github.io/campsis.doc/reference/getEventIterations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get list of event iterations. — getEventIterations","text":"events events maxTime simulation max time","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/getEventIterations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get list of event iterations. — getEventIterations","text":"list event iterations","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/getFixedCovariates.html","id":null,"dir":"Reference","previous_headings":"","what":"Get all fixed covariates. — getFixedCovariates","title":"Get all fixed covariates. — getFixedCovariates","text":"Get fixed covariates.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/getFixedCovariates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get all fixed covariates. — getFixedCovariates","text":"","code":"getFixedCovariates(object)  # S4 method for covariates getFixedCovariates(object)  # S4 method for arm getFixedCovariates(object)  # S4 method for arms getFixedCovariates(object)  # S4 method for dataset getFixedCovariates(object)"},{"path":"https://calvagone.github.io/campsis.doc/reference/getFixedCovariates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get all fixed covariates. — getFixedCovariates","text":"object object","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/getFixedCovariates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get all fixed covariates. — getFixedCovariates","text":"fixed covariates object","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/getFurrrScheduling.html","id":null,"dir":"Reference","previous_headings":"","what":"Get scheduling mode for furrr (see argument 'scheduling' available in furrr options). — getFurrrScheduling","title":"Get scheduling mode for furrr (see argument 'scheduling' available in furrr options). — getFurrrScheduling","text":"Get scheduling mode furrr (see argument 'scheduling' available furrr options).","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/getFurrrScheduling.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get scheduling mode for furrr (see argument 'scheduling' available in furrr options). — getFurrrScheduling","text":"","code":"getFurrrScheduling(parallel)"},{"path":"https://calvagone.github.io/campsis.doc/reference/getFurrrScheduling.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get scheduling mode for furrr (see argument 'scheduling' available in furrr options). — getFurrrScheduling","text":"parallel use parallel computing furrr, logical value","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/getFurrrScheduling.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get scheduling mode for furrr (see argument 'scheduling' available in furrr options). — getFurrrScheduling","text":"1 parallel computing, 0 otherwise","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/getInitialConditions.html","id":null,"dir":"Reference","previous_headings":"","what":"Get initial conditions at simulation start-up. — getInitialConditions","title":"Get initial conditions at simulation start-up. — getInitialConditions","text":"Get initial conditions simulation start-.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/getInitialConditions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get initial conditions at simulation start-up. — getInitialConditions","text":"","code":"getInitialConditions(subdataset, iteration, cmtNames)"},{"path":"https://calvagone.github.io/campsis.doc/reference/getInitialConditions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get initial conditions at simulation start-up. — getInitialConditions","text":"subdataset subset dataset simulate iteration current iteration cmtNames compartment names","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/getInitialConditions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get initial conditions at simulation start-up. — getInitialConditions","text":"named numeric vector new initial conditions","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/getIOVs.html","id":null,"dir":"Reference","previous_headings":"","what":"Get all IOV objects. — getIOVs","title":"Get all IOV objects. — getIOVs","text":"Get IOV objects.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/getIOVs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get all IOV objects. — getIOVs","text":"","code":"getIOVs(object)  # S4 method for arm getIOVs(object)  # S4 method for arms getIOVs(object)  # S4 method for dataset getIOVs(object)"},{"path":"https://calvagone.github.io/campsis.doc/reference/getIOVs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get all IOV objects. — getIOVs","text":"object object","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/getIOVs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get all IOV objects. — getIOVs","text":"IOV's object","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/getOccasions.html","id":null,"dir":"Reference","previous_headings":"","what":"Get all occasions. — getOccasions","title":"Get all occasions. — getOccasions","text":"Get occasions.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/getOccasions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get all occasions. — getOccasions","text":"","code":"getOccasions(object)  # S4 method for arm getOccasions(object)  # S4 method for arms getOccasions(object)  # S4 method for dataset getOccasions(object)"},{"path":"https://calvagone.github.io/campsis.doc/reference/getOccasions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get all occasions. — getOccasions","text":"object object","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/getOccasions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get all occasions. — getOccasions","text":"occasions object","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/getRandomSeedValue.html","id":null,"dir":"Reference","previous_headings":"","what":"Get random seed value. — getRandomSeedValue","title":"Get random seed value. — getRandomSeedValue","text":"Get random seed value.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/getRandomSeedValue.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get random seed value. — getRandomSeedValue","text":"","code":"getRandomSeedValue()"},{"path":"https://calvagone.github.io/campsis.doc/reference/getRandomSeedValue.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get random seed value. — getRandomSeedValue","text":"random seed value generated based time","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/getSeed.html","id":null,"dir":"Reference","previous_headings":"","what":"Get seed value. — getSeed","title":"Get seed value. — getSeed","text":"Get seed value.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/getSeed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get seed value. — getSeed","text":"","code":"getSeed(seed = NULL)"},{"path":"https://calvagone.github.io/campsis.doc/reference/getSeed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get seed value. — getSeed","text":"seed user-input seed, NULL specified","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/getSeed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get seed value. — getSeed","text":"seed value, integer","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/getSeedForDatasetExport.html","id":null,"dir":"Reference","previous_headings":"","what":"Get seed for dataset export. — getSeedForDatasetExport","title":"Get seed for dataset export. — getSeedForDatasetExport","text":"Get seed dataset export.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/getSeedForDatasetExport.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get seed for dataset export. — getSeedForDatasetExport","text":"","code":"getSeedForDatasetExport(seed, progress)"},{"path":"https://calvagone.github.io/campsis.doc/reference/getSeedForDatasetExport.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get seed for dataset export. — getSeedForDatasetExport","text":"seed original seed progress simulation progress","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/getSeedForDatasetExport.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get seed for dataset export. — getSeedForDatasetExport","text":"seed value used export dataset","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/getSeedForIteration.html","id":null,"dir":"Reference","previous_headings":"","what":"Get seed for iteration. — getSeedForIteration","title":"Get seed for iteration. — getSeedForIteration","text":"Get seed iteration.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/getSeedForIteration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get seed for iteration. — getSeedForIteration","text":"","code":"getSeedForIteration(seed, progress)"},{"path":"https://calvagone.github.io/campsis.doc/reference/getSeedForIteration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get seed for iteration. — getSeedForIteration","text":"seed original seed progress simulation progress","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/getSeedForIteration.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get seed for iteration. — getSeedForIteration","text":"seed value used given replicate number iteration","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/getSeedForParametersSampling.html","id":null,"dir":"Reference","previous_headings":"","what":"Get seed for parameter uncertainty sampling. — getSeedForParametersSampling","title":"Get seed for parameter uncertainty sampling. — getSeedForParametersSampling","text":"Get seed parameter uncertainty sampling.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/getSeedForParametersSampling.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get seed for parameter uncertainty sampling. — getSeedForParametersSampling","text":"","code":"getSeedForParametersSampling(seed)"},{"path":"https://calvagone.github.io/campsis.doc/reference/getSeedForParametersSampling.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get seed for parameter uncertainty sampling. — getSeedForParametersSampling","text":"seed original seed","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/getSeedForParametersSampling.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get seed for parameter uncertainty sampling. — getSeedForParametersSampling","text":"seed value used sample parameter uncertainty","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/getSimulationEngineType.html","id":null,"dir":"Reference","previous_headings":"","what":"Get simulation engine type. — getSimulationEngineType","title":"Get simulation engine type. — getSimulationEngineType","text":"Get simulation engine type.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/getSimulationEngineType.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get simulation engine type. — getSimulationEngineType","text":"","code":"getSimulationEngineType(dest)"},{"path":"https://calvagone.github.io/campsis.doc/reference/getSimulationEngineType.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get simulation engine type. — getSimulationEngineType","text":"dest destination engine, string form","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/getSimulationEngineType.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get simulation engine type. — getSimulationEngineType","text":"simulation engine type","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/getSplittingConfiguration.html","id":null,"dir":"Reference","previous_headings":"","what":"Get splitting configuration for parallel export. — getSplittingConfiguration","title":"Get splitting configuration for parallel export. — getSplittingConfiguration","text":"Get splitting configuration parallel export.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/getSplittingConfiguration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get splitting configuration for parallel export. — getSplittingConfiguration","text":"","code":"getSplittingConfiguration(dataset, hardware)"},{"path":"https://calvagone.github.io/campsis.doc/reference/getSplittingConfiguration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get splitting configuration for parallel export. — getSplittingConfiguration","text":"dataset Campsis dataset export hardware hardware configuration","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/getSplittingConfiguration.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get splitting configuration for parallel export. — getSplittingConfiguration","text":"splitting configuration list ('parallel_dataset' enabled)  NA ('parallel_dataset' disabled length dataset less dataset export slice size)","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/getTimes.html","id":null,"dir":"Reference","previous_headings":"","what":"Get all distinct times for the specified object. — getTimes","title":"Get all distinct times for the specified object. — getTimes","text":"Get distinct times specified object.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/getTimes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get all distinct times for the specified object. — getTimes","text":"","code":"getTimes(object)  # S4 method for observations_set getTimes(object)  # S4 method for arm getTimes(object)  # S4 method for arms getTimes(object)  # S4 method for events getTimes(object)  # S4 method for dataset getTimes(object)"},{"path":"https://calvagone.github.io/campsis.doc/reference/getTimes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get all distinct times for the specified object. — getTimes","text":"object object","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/getTimes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get all distinct times for the specified object. — getTimes","text":"numeric vector unique times, sorted","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/getTimeVaryingCovariates.html","id":null,"dir":"Reference","previous_headings":"","what":"Get all time-varying covariates. — getTimeVaryingCovariates","title":"Get all time-varying covariates. — getTimeVaryingCovariates","text":"Get time-varying covariates.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/getTimeVaryingCovariates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get all time-varying covariates. — getTimeVaryingCovariates","text":"","code":"getTimeVaryingCovariates(object)  # S4 method for covariates getTimeVaryingCovariates(object)  # S4 method for arm getTimeVaryingCovariates(object)  # S4 method for arms getTimeVaryingCovariates(object)  # S4 method for dataset getTimeVaryingCovariates(object)"},{"path":"https://calvagone.github.io/campsis.doc/reference/getTimeVaryingCovariates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get all time-varying covariates. — getTimeVaryingCovariates","text":"object object","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/getTimeVaryingCovariates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get all time-varying covariates. — getTimeVaryingCovariates","text":"time-varying covariates object","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/getTimeVaryingVariables.html","id":null,"dir":"Reference","previous_headings":"","what":"Get all time-varying variables. These variables are likely to be influenced\r\nby the NOCB mode chosen and by the 'nocbvars' vector. — getTimeVaryingVariables","title":"Get all time-varying variables. These variables are likely to be influenced\r\nby the NOCB mode chosen and by the 'nocbvars' vector. — getTimeVaryingVariables","text":"Get time-varying variables. variables likely influenced NOCB mode chosen 'nocbvars' vector.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/getTimeVaryingVariables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get all time-varying variables. These variables are likely to be influenced\r\nby the NOCB mode chosen and by the 'nocbvars' vector. — getTimeVaryingVariables","text":"","code":"getTimeVaryingVariables(object)"},{"path":"https://calvagone.github.io/campsis.doc/reference/getTimeVaryingVariables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get all time-varying variables. These variables are likely to be influenced\r\nby the NOCB mode chosen and by the 'nocbvars' vector. — getTimeVaryingVariables","text":"object dataset","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/getTimeVaryingVariables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get all time-varying variables. These variables are likely to be influenced\r\nby the NOCB mode chosen and by the 'nocbvars' vector. — getTimeVaryingVariables","text":"character vector time-varying variables dataset","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/Hardware.html","id":null,"dir":"Reference","previous_headings":"","what":"Create hardware settings. — Hardware","title":"Create hardware settings. — Hardware","text":"Create hardware settings.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/Hardware.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create hardware settings. — Hardware","text":"","code":"Hardware(   cpu = 1,   replicate_parallel = FALSE,   scenario_parallel = FALSE,   slice_parallel = FALSE,   slice_size = NULL,   dataset_parallel = FALSE,   dataset_slice_size = 500,   auto_setup_plan = NULL )"},{"path":"https://calvagone.github.io/campsis.doc/reference/Hardware.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create hardware settings. — Hardware","text":"cpu number CPU cores use, default 1 replicate_parallel enable parallel computing replicates, default FALSE scenario_parallel enable parallel computing scenarios, default FALSE slice_parallel enable parallel computing slices, default FALSE slice_size number subjects per simulated slice, default NULL (auto-configured Campsis depending specified engine) dataset_parallel enable parallelisation exporting dataset table, default FALSE dataset_slice_size dataset slice size exporting subjects table, default 500. applicable 'dataset_parallel' enabled. auto_setup_plan auto-setup plan library future, set (.e. =NULL), plan setup automatically number CPU's > 1.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/Hardware.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create hardware settings. — Hardware","text":"hardware settings","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/hardware_settings-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Hardware settings class. — hardware_settings-class","title":"Hardware settings class. — hardware_settings-class","text":"Hardware settings class.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/hardware_settings-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Hardware settings class. — hardware_settings-class","text":"cpu number CPU cores use, default 1 replicate_parallel enable parallel computing replicates, default FALSE scenario_parallel enable parallel computing scenarios, default FALSE slice_parallel enable parallel computing slices, default FALSE slice_size number subjects per simulated slice, default NULL (auto-configured Campsis depending specified engine) dataset_parallel enable parallelisation exporting dataset table, default FALSE dataset_slice_size dataset slice size exporting subjects table, default 500. applicable 'dataset_parallel' enabled. auto_setup_plan auto-setup plan library future, default FALSE","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/importCampsismodToNamespace.html","id":null,"dir":"Reference","previous_headings":"","what":"Import the whole campsismod package into NAMESPACE when parsed by 'roxygen'. — importCampsismodToNamespace","title":"Import the whole campsismod package into NAMESPACE when parsed by 'roxygen'. — importCampsismodToNamespace","text":"Import whole campsismod package NAMESPACE parsed 'roxygen'.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/importCampsismodToNamespace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import the whole campsismod package into NAMESPACE when parsed by 'roxygen'. — importCampsismodToNamespace","text":"","code":"importCampsismodToNamespace()"},{"path":"https://calvagone.github.io/campsis.doc/reference/importCampsismodToNamespace.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import the whole campsismod package into NAMESPACE when parsed by 'roxygen'. — importCampsismodToNamespace","text":"always TRUE","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/infusion-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Infusion class. — infusion-class","title":"Infusion class. — infusion-class","text":"Infusion class.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/infusion-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Infusion class. — infusion-class","text":"duration infusion duration, distribution rate infusion rate, distribution","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/Infusion.html","id":null,"dir":"Reference","previous_headings":"","what":"Create one or several infusion(s). — Infusion","title":"Create one or several infusion(s). — Infusion","text":"Create one several infusion(s).","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/Infusion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create one or several infusion(s). — Infusion","text":"","code":"Infusion(   time,   amount,   compartment = NA,   f = NULL,   lag = NULL,   duration = NULL,   rate = NULL,   ii = NULL,   addl = NULL )"},{"path":"https://calvagone.github.io/campsis.doc/reference/Infusion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create one or several infusion(s). — Infusion","text":"time treatment time(s), numeric value vector. First treatment time used together ii addl. amount total amount infuse, numeric compartment compartment index, integer f fraction infusion amount, distribution lag infusion lag time, distribution duration infusion duration, distribution rate infusion rate, distribution ii interdose interval, requires argument 'time' single numeric value addl number additional doses, requires argument 'time' single integer value","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/Infusion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create one or several infusion(s). — Infusion","text":"single infusion list infusions.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/internal_settings-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal settings class (transient object from the simulation settings). — internal_settings-class","title":"Internal settings class (transient object from the simulation settings). — internal_settings-class","text":"Internal settings class (transient object simulation settings).","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/internal_settings-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Internal settings class (transient object from the simulation settings). — internal_settings-class","text":"dataset_summary dataset summary progress simulation progress iterations list event iterations","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/IOV.html","id":null,"dir":"Reference","previous_headings":"","what":"Define inter-occasion variability (IOV) into the dataset. A new variable of name\r\n'colname' will be output into the dataset and will vary at each dose number\r\naccording to the given distribution. — IOV","title":"Define inter-occasion variability (IOV) into the dataset. A new variable of name\r\n'colname' will be output into the dataset and will vary at each dose number\r\naccording to the given distribution. — IOV","text":"Define inter-occasion variability (IOV) dataset. new variable name 'colname' output dataset vary dose number according given distribution.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/IOV.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define inter-occasion variability (IOV) into the dataset. A new variable of name\r\n'colname' will be output into the dataset and will vary at each dose number\r\naccording to the given distribution. — IOV","text":"","code":"IOV(colname, distribution, doseNumbers = NULL)"},{"path":"https://calvagone.github.io/campsis.doc/reference/IOV.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define inter-occasion variability (IOV) into the dataset. A new variable of name\r\n'colname' will be output into the dataset and will vary at each dose number\r\naccording to the given distribution. — IOV","text":"colname name column output dataset distribution distribution doseNumbers dose numbers, provided, IOV generated doses . default, IOV generated doses.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/IOV.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define inter-occasion variability (IOV) into the dataset. A new variable of name\r\n'colname' will be output into the dataset and will vary at each dose number\r\naccording to the given distribution. — IOV","text":"IOV object","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/isEmptyBootstrap.html","id":null,"dir":"Reference","previous_headings":"","what":"Is the given bootstrap empty. — isEmptyBootstrap","title":"Is the given bootstrap empty. — isEmptyBootstrap","text":"given bootstrap empty.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/isEmptyBootstrap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is the given bootstrap empty. — isEmptyBootstrap","text":"","code":"isEmptyBootstrap(object)"},{"path":"https://calvagone.github.io/campsis.doc/reference/isEmptyBootstrap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is the given bootstrap empty. — isEmptyBootstrap","text":"object bootstrap object","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/isEmptyBootstrap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Is the given bootstrap empty. — isEmptyBootstrap","text":"logical value TRUE/FALSE","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/leftJoinIIV.html","id":null,"dir":"Reference","previous_headings":"","what":"Left-join IIV matrix. — leftJoinIIV","title":"Left-join IIV matrix. — leftJoinIIV","text":"Left-join IIV matrix.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/leftJoinIIV.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Left-join IIV matrix. — leftJoinIIV","text":"","code":"leftJoinIIV(table, iiv)"},{"path":"https://calvagone.github.io/campsis.doc/reference/leftJoinIIV.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Left-join IIV matrix. — leftJoinIIV","text":"table dataset, tabular form iiv IIV matrix","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/leftJoinIIV.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Left-join IIV matrix. — leftJoinIIV","text":"updated table IIV matrix","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/length-arm-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Return the number of subjects contained in this arm. — length,arm-method","title":"Return the number of subjects contained in this arm. — length,arm-method","text":"Return number subjects contained arm.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/length-arm-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return the number of subjects contained in this arm. — length,arm-method","text":"","code":"# S4 method for arm length(x)"},{"path":"https://calvagone.github.io/campsis.doc/reference/length-arm-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return the number of subjects contained in this arm. — length,arm-method","text":"x arm","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/length-arm-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return the number of subjects contained in this arm. — length,arm-method","text":"number","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/length-dataset-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Return the number of subjects contained in this dataset. — length,dataset-method","title":"Return the number of subjects contained in this dataset. — length,dataset-method","text":"Return number subjects contained dataset.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/length-dataset-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return the number of subjects contained in this dataset. — length,dataset-method","text":"","code":"# S4 method for dataset length(x)"},{"path":"https://calvagone.github.io/campsis.doc/reference/length-dataset-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return the number of subjects contained in this dataset. — length,dataset-method","text":"x dataset","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/length-dataset-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return the number of subjects contained in this dataset. — length,dataset-method","text":"number","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/LogNormalDistribution.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a log normal distribution. — LogNormalDistribution","title":"Create a log normal distribution. — LogNormalDistribution","text":"Create log normal distribution.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/LogNormalDistribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a log normal distribution. — LogNormalDistribution","text":"","code":"LogNormalDistribution(meanlog, sdlog)"},{"path":"https://calvagone.github.io/campsis.doc/reference/LogNormalDistribution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a log normal distribution. — LogNormalDistribution","text":"meanlog mean value distribution log domain sdlog standard deviation distribution log domain","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/LogNormalDistribution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a log normal distribution. — LogNormalDistribution","text":"log normal distribution","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/mergeTimeVaryingCovariates.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge time-varying covariates into a single data frame. This last data frame\r\nwill be merged afterwards with all treatment and observation rows. — mergeTimeVaryingCovariates","title":"Merge time-varying covariates into a single data frame. This last data frame\r\nwill be merged afterwards with all treatment and observation rows. — mergeTimeVaryingCovariates","text":"Merge time-varying covariates single data frame. last data frame merged afterwards treatment observation rows.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/mergeTimeVaryingCovariates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge time-varying covariates into a single data frame. This last data frame\r\nwill be merged afterwards with all treatment and observation rows. — mergeTimeVaryingCovariates","text":"","code":"mergeTimeVaryingCovariates(covariates, ids_within_arm, arm_offset)"},{"path":"https://calvagone.github.io/campsis.doc/reference/mergeTimeVaryingCovariates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge time-varying covariates into a single data frame. This last data frame\r\nwill be merged afterwards with all treatment and observation rows. — mergeTimeVaryingCovariates","text":"covariates covariates, time-varying covariates extracted ids_within_arm ids within current arm sampled arm_offset arm offset (term ID's)","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/mergeTimeVaryingCovariates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge time-varying covariates into a single data frame. This last data frame\r\nwill be merged afterwards with all treatment and observation rows. — mergeTimeVaryingCovariates","text":"data.frame","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/mrgsolve_engine-class.html","id":null,"dir":"Reference","previous_headings":"","what":"mrgsolve engine class. — mrgsolve_engine-class","title":"mrgsolve engine class. — mrgsolve_engine-class","text":"mrgsolve engine class.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/nhanes.html","id":null,"dir":"Reference","previous_headings":"","what":"NHANES database (demographics and body measure data combined, from 2017-2018). — nhanes","title":"NHANES database (demographics and body measure data combined, from 2017-2018). — nhanes","text":"NHANES database (demographics body measure data combined, 2017-2018).","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/nhanes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NHANES database (demographics and body measure data combined, from 2017-2018). — nhanes","text":"","code":"nhanes"},{"path":"https://calvagone.github.io/campsis.doc/reference/nhanes.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"NHANES database (demographics and body measure data combined, from 2017-2018). — nhanes","text":"data frame ID Original identifier SEX Sex: 1 males, 2 females AGE Age years BW Body weight kg BMI Body mass index HT Height cm","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/nhanes.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"NHANES database (demographics and body measure data combined, from 2017-2018). — nhanes","text":"https://wwwn.cdc.gov/Nchs/Nhanes/2017-2018/DEMO_J.XPT https://wwwn.cdc.gov/Nchs/Nhanes/2017-2018/BMX_J.XPT","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/NOCB.html","id":null,"dir":"Reference","previous_headings":"","what":"Create NOCB settings. — NOCB","title":"Create NOCB settings. — NOCB","text":"Create NOCB settings.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/NOCB.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create NOCB settings. — NOCB","text":"","code":"NOCB(enable = NULL, variables = character(0))"},{"path":"https://calvagone.github.io/campsis.doc/reference/NOCB.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create NOCB settings. — NOCB","text":"enable enable/disable next-observation carried backward mode (NOCB), default value TRUE mrgsolve, FALSE RxODE variables variable names subject NOCB behavior (see vignette info)","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/NOCB.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create NOCB settings. — NOCB","text":"NOCB settings","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/nocb_settings-class.html","id":null,"dir":"Reference","previous_headings":"","what":"NOCB settings class. — nocb_settings-class","title":"NOCB settings class. — nocb_settings-class","text":"NOCB settings class.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/nocb_settings-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"NOCB settings class. — nocb_settings-class","text":"enable enable/disable next-observation carried backward mode (NOCB), default value TRUE mrgsolve, FALSE RxODE variables variable names subject NOCB behavior (see vignette info)","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/NormalDistribution.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a normal distribution. — NormalDistribution","title":"Create a normal distribution. — NormalDistribution","text":"Create normal distribution.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/NormalDistribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a normal distribution. — NormalDistribution","text":"","code":"NormalDistribution(mean, sd)"},{"path":"https://calvagone.github.io/campsis.doc/reference/NormalDistribution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a normal distribution. — NormalDistribution","text":"mean mean value distribution sd standard deviation distribution","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/NormalDistribution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a normal distribution. — NormalDistribution","text":"normal distribution","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/observations-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Observations class. — observations-class","title":"Observations class. — observations-class","text":"Observations class.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/observations-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Observations class. — observations-class","text":"times observation times, numeric vector compartment compartment index, integer dv observed values, numeric vector (EXTERNAL USE)","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/Observations.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an observations list. Please note that the provided 'times' will \r\nautomatically be sorted. Duplicated times will be removed. — Observations","title":"Create an observations list. Please note that the provided 'times' will \r\nautomatically be sorted. Duplicated times will be removed. — Observations","text":"Create observations list. Please note provided 'times'  automatically sorted. Duplicated times removed.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/Observations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an observations list. Please note that the provided 'times' will \r\nautomatically be sorted. Duplicated times will be removed. — Observations","text":"","code":"Observations(times, compartment = NA)"},{"path":"https://calvagone.github.io/campsis.doc/reference/Observations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an observations list. Please note that the provided 'times' will \r\nautomatically be sorted. Duplicated times will be removed. — Observations","text":"times observation times, numeric vector compartment compartment index, integer","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/Observations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an observations list. Please note that the provided 'times' will \r\nautomatically be sorted. Duplicated times will be removed. — Observations","text":"observations list","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/observations_set-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Observations set class. — observations_set-class","title":"Observations set class. — observations_set-class","text":"Observations set class.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/obsOnly.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter CAMPSIS output on observation rows. — obsOnly","title":"Filter CAMPSIS output on observation rows. — obsOnly","text":"Filter CAMPSIS output observation rows.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/obsOnly.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter CAMPSIS output on observation rows. — obsOnly","text":"","code":"obsOnly(x)"},{"path":"https://calvagone.github.io/campsis.doc/reference/obsOnly.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter CAMPSIS output on observation rows. — obsOnly","text":"x data frame, CAMPSIS output","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/obsOnly.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter CAMPSIS output on observation rows. — obsOnly","text":"data frame observation rows","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/occasion-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Occasion class. — occasion-class","title":"Occasion class. — occasion-class","text":"Occasion class.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/occasion-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Occasion class. — occasion-class","text":"colname single character value representing column name related occasion values occasion values, integer vector, length dose_numbers dose_numbers associated dose numbers, integer vector, length values","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/Occasion.html","id":null,"dir":"Reference","previous_headings":"","what":"Define a new occasion. Occasions are defined by mapping occasion values to dose numbers.\r\nA new column will automatically be created in the exported dataset. — Occasion","title":"Define a new occasion. Occasions are defined by mapping occasion values to dose numbers.\r\nA new column will automatically be created in the exported dataset. — Occasion","text":"Define new occasion. Occasions defined mapping occasion values dose numbers. new column automatically created exported dataset.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/Occasion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define a new occasion. Occasions are defined by mapping occasion values to dose numbers.\r\nA new column will automatically be created in the exported dataset. — Occasion","text":"","code":"Occasion(colname, values, doseNumbers)"},{"path":"https://calvagone.github.io/campsis.doc/reference/Occasion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define a new occasion. Occasions are defined by mapping occasion values to dose numbers.\r\nA new column will automatically be created in the exported dataset. — Occasion","text":"colname name column output dataset values occasion numbers, integer vector doseNumbers related dose numbers, integer vector length 'values'","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/Occasion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define a new occasion. Occasions are defined by mapping occasion values to dose numbers.\r\nA new column will automatically be created in the exported dataset. — Occasion","text":"occasion object","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/occasions-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Occasions class. — occasions-class","title":"Occasions class. — occasions-class","text":"Occasions class.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/ParameterDistribution.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a parameter distribution. The resulting distribution is a\r\nlog-normal distribution, with meanlog=log(THETA) and sdlog=sqrt(OMEGA). — ParameterDistribution","title":"Create a parameter distribution. The resulting distribution is a\r\nlog-normal distribution, with meanlog=log(THETA) and sdlog=sqrt(OMEGA). — ParameterDistribution","text":"Create parameter distribution. resulting distribution log-normal distribution, meanlog=log(THETA) sdlog=sqrt(OMEGA).","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/ParameterDistribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a parameter distribution. The resulting distribution is a\r\nlog-normal distribution, with meanlog=log(THETA) and sdlog=sqrt(OMEGA). — ParameterDistribution","text":"","code":"ParameterDistribution(model, theta, omega = NULL)"},{"path":"https://calvagone.github.io/campsis.doc/reference/ParameterDistribution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a parameter distribution. The resulting distribution is a\r\nlog-normal distribution, with meanlog=log(THETA) and sdlog=sqrt(OMEGA). — ParameterDistribution","text":"model model theta corresponding THETA name, character omega corresponding OMEGA name, character, NULL defined","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/ParameterDistribution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a parameter distribution. The resulting distribution is a\r\nlog-normal distribution, with meanlog=log(THETA) and sdlog=sqrt(OMEGA). — ParameterDistribution","text":"parameter distribution","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/PI.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the prediction interval summary over time. — PI","title":"Compute the prediction interval summary over time. — PI","text":"Compute prediction interval summary time.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/PI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the prediction interval summary over time. — PI","text":"","code":"PI(x, output, scenarios = NULL, level = 0.9, gather = TRUE)"},{"path":"https://calvagone.github.io/campsis.doc/reference/PI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the prediction interval summary over time. — PI","text":"x data frame output variable show, character value scenarios scenarios, character vector, NULL default level PI level, default 0.9 (90% PI) gather FALSE: med, low & columns, TRUE: metric column","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/PI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the prediction interval summary over time. — PI","text":"summary table","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/preprocessArmColumn.html","id":null,"dir":"Reference","previous_headings":"","what":"Preprocess ARM column. Add ARM equation in model automatically. — preprocessArmColumn","title":"Preprocess ARM column. Add ARM equation in model automatically. — preprocessArmColumn","text":"Preprocess ARM column. Add ARM equation model automatically.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/preprocessArmColumn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preprocess ARM column. Add ARM equation in model automatically. — preprocessArmColumn","text":"","code":"preprocessArmColumn(dataset, model)"},{"path":"https://calvagone.github.io/campsis.doc/reference/preprocessArmColumn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preprocess ARM column. Add ARM equation in model automatically. — preprocessArmColumn","text":"dataset current dataset, data frame form model model","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/preprocessArmColumn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Preprocess ARM column. Add ARM equation in model automatically. — preprocessArmColumn","text":"updated model","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/preprocessDest.html","id":null,"dir":"Reference","previous_headings":"","what":"Pre-process destination engine. Throw an error message if the destination \r\nengine is not installed. — preprocessDest","title":"Pre-process destination engine. Throw an error message if the destination \r\nengine is not installed. — preprocessDest","text":"Pre-process destination engine. Throw error message destination  engine installed.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/preprocessDest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pre-process destination engine. Throw an error message if the destination \r\nengine is not installed. — preprocessDest","text":"","code":"preprocessDest(dest)"},{"path":"https://calvagone.github.io/campsis.doc/reference/preprocessDest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pre-process destination engine. Throw an error message if the destination \r\nengine is not installed. — preprocessDest","text":"dest destination engine","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/preprocessDest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pre-process destination engine. Throw an error message if the destination \r\nengine is not installed. — preprocessDest","text":"'rxode2', 'RxODE' 'mrgsolve'","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/preprocessDosing.html","id":null,"dir":"Reference","previous_headings":"","what":"Preprocess 'dosing' argument. — preprocessDosing","title":"Preprocess 'dosing' argument. — preprocessDosing","text":"Preprocess 'dosing' argument.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/preprocessDosing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preprocess 'dosing' argument. — preprocessDosing","text":"","code":"preprocessDosing(dosing)"},{"path":"https://calvagone.github.io/campsis.doc/reference/preprocessDosing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preprocess 'dosing' argument. — preprocessDosing","text":"dosing dosing argument, logical value","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/preprocessDosing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Preprocess 'dosing' argument. — preprocessDosing","text":"user value, specified, return FALSE (observations )","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/preprocessEvents.html","id":null,"dir":"Reference","previous_headings":"","what":"Pre-process events. — preprocessEvents","title":"Pre-process events. — preprocessEvents","text":"Pre-process events.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/preprocessEvents.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pre-process events. — preprocessEvents","text":"","code":"preprocessEvents(events)"},{"path":"https://calvagone.github.io/campsis.doc/reference/preprocessEvents.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pre-process events. — preprocessEvents","text":"events interruption events","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/preprocessFunction.html","id":null,"dir":"Reference","previous_headings":"","what":"Pre-process function argument. — preprocessFunction","title":"Pre-process function argument. — preprocessFunction","text":"Pre-process function argument.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/preprocessFunction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pre-process function argument. — preprocessFunction","text":"","code":"preprocessFunction(fun, name)"},{"path":"https://calvagone.github.io/campsis.doc/reference/preprocessFunction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pre-process function argument. — preprocessFunction","text":"fun function lambda formula name function name","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/preprocessFunction.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pre-process function argument. — preprocessFunction","text":"function case","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/preprocessIds.html","id":null,"dir":"Reference","previous_headings":"","what":"Preprocess subjects ID's. — preprocessIds","title":"Preprocess subjects ID's. — preprocessIds","text":"Preprocess subjects ID's.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/preprocessIds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preprocess subjects ID's. — preprocessIds","text":"","code":"preprocessIds(dataset)"},{"path":"https://calvagone.github.io/campsis.doc/reference/preprocessIds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preprocess subjects ID's. — preprocessIds","text":"dataset current dataset, data frame form","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/preprocessIds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Preprocess subjects ID's. — preprocessIds","text":"list consecutive ID's","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/preprocessNocb.html","id":null,"dir":"Reference","previous_headings":"","what":"Preprocess 'nocb' argument. — preprocessNocb","title":"Preprocess 'nocb' argument. — preprocessNocb","text":"Preprocess 'nocb' argument.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/preprocessNocb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preprocess 'nocb' argument. — preprocessNocb","text":"","code":"preprocessNocb(nocb, dest)"},{"path":"https://calvagone.github.io/campsis.doc/reference/preprocessNocb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preprocess 'nocb' argument. — preprocessNocb","text":"nocb nocb argument, logical value dest destination engine","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/preprocessNocb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Preprocess 'nocb' argument. — preprocessNocb","text":"user value, specified, return TRUE mrgsolve FALSE RxODE","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/preprocessNocbvars.html","id":null,"dir":"Reference","previous_headings":"","what":"Preprocess 'nocbvars' argument. — preprocessNocbvars","title":"Preprocess 'nocbvars' argument. — preprocessNocbvars","text":"Preprocess 'nocbvars' argument.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/preprocessNocbvars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preprocess 'nocbvars' argument. — preprocessNocbvars","text":"","code":"preprocessNocbvars(nocbvars)"},{"path":"https://calvagone.github.io/campsis.doc/reference/preprocessNocbvars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preprocess 'nocbvars' argument. — preprocessNocbvars","text":"nocbvars nocbvars argument, character vector","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/preprocessOutvars.html","id":null,"dir":"Reference","previous_headings":"","what":"Preprocess 'outvars' argument. 'Outvars' is a character vector which tells\r\nCAMPSIS the mandatory columns to keep in the output dataframe. — preprocessOutvars","title":"Preprocess 'outvars' argument. 'Outvars' is a character vector which tells\r\nCAMPSIS the mandatory columns to keep in the output dataframe. — preprocessOutvars","text":"Preprocess 'outvars' argument. 'Outvars' character vector tells CAMPSIS mandatory columns keep output dataframe.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/preprocessOutvars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preprocess 'outvars' argument. 'Outvars' is a character vector which tells\r\nCAMPSIS the mandatory columns to keep in the output dataframe. — preprocessOutvars","text":"","code":"preprocessOutvars(outvars)"},{"path":"https://calvagone.github.io/campsis.doc/reference/preprocessOutvars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preprocess 'outvars' argument. 'Outvars' is a character vector which tells\r\nCAMPSIS the mandatory columns to keep in the output dataframe. — preprocessOutvars","text":"outvars character vector function","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/preprocessOutvars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Preprocess 'outvars' argument. 'Outvars' is a character vector which tells\r\nCAMPSIS the mandatory columns to keep in the output dataframe. — preprocessOutvars","text":"outvars","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/preprocessReplicates.html","id":null,"dir":"Reference","previous_headings":"","what":"Preprocess 'replicates' argument. — preprocessReplicates","title":"Preprocess 'replicates' argument. — preprocessReplicates","text":"Preprocess 'replicates' argument.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/preprocessReplicates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preprocess 'replicates' argument. — preprocessReplicates","text":"","code":"preprocessReplicates(replicates)"},{"path":"https://calvagone.github.io/campsis.doc/reference/preprocessReplicates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preprocess 'replicates' argument. — preprocessReplicates","text":"replicates number replicates","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/preprocessReplicates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Preprocess 'replicates' argument. — preprocessReplicates","text":"number, integer","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/preprocessScenarios.html","id":null,"dir":"Reference","previous_headings":"","what":"Pre-process scenarios. — preprocessScenarios","title":"Pre-process scenarios. — preprocessScenarios","text":"Pre-process scenarios.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/preprocessScenarios.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pre-process scenarios. — preprocessScenarios","text":"","code":"preprocessScenarios(scenarios)"},{"path":"https://calvagone.github.io/campsis.doc/reference/preprocessScenarios.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pre-process scenarios. — preprocessScenarios","text":"scenarios scenarios","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/preprocessSettings.html","id":null,"dir":"Reference","previous_headings":"","what":"Preprocess the simulation settings. — preprocessSettings","title":"Preprocess the simulation settings. — preprocessSettings","text":"Preprocess simulation settings.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/preprocessSettings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preprocess the simulation settings. — preprocessSettings","text":"","code":"preprocessSettings(settings, dest)"},{"path":"https://calvagone.github.io/campsis.doc/reference/preprocessSettings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preprocess the simulation settings. — preprocessSettings","text":"settings simulation settings dest destination engine","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/preprocessSettings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Preprocess the simulation settings. — preprocessSettings","text":"updated simulation settings","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/preprocessSlices.html","id":null,"dir":"Reference","previous_headings":"","what":"Preprocess 'slices' argument. — preprocessSlices","title":"Preprocess 'slices' argument. — preprocessSlices","text":"Preprocess 'slices' argument.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/preprocessSlices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preprocess 'slices' argument. — preprocessSlices","text":"","code":"preprocessSlices(slices, maxID)"},{"path":"https://calvagone.github.io/campsis.doc/reference/preprocessSlices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preprocess 'slices' argument. — preprocessSlices","text":"slices slices argument corresponding number subjects simulated ","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/preprocessSlices.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Preprocess 'slices' argument. — preprocessSlices","text":"slices NULL, otherwise total number subjects","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/preprocessTSLDAndTDOSColumn.html","id":null,"dir":"Reference","previous_headings":"","what":"Preprocess TSLD and TDOS columns according to given dataset configuration. — preprocessTSLDAndTDOSColumn","title":"Preprocess TSLD and TDOS columns according to given dataset configuration. — preprocessTSLDAndTDOSColumn","text":"Preprocess TSLD TDOS columns according given dataset configuration.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/preprocessTSLDAndTDOSColumn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preprocess TSLD and TDOS columns according to given dataset configuration. — preprocessTSLDAndTDOSColumn","text":"","code":"preprocessTSLDAndTDOSColumn(table, config)"},{"path":"https://calvagone.github.io/campsis.doc/reference/preprocessTSLDAndTDOSColumn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preprocess TSLD and TDOS columns according to given dataset configuration. — preprocessTSLDAndTDOSColumn","text":"table current table config dataset config","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/preprocessTSLDAndTDOSColumn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Preprocess TSLD and TDOS columns according to given dataset configuration. — preprocessTSLDAndTDOSColumn","text":"updated table","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/processArmLabels.html","id":null,"dir":"Reference","previous_headings":"","what":"Process arm labels. Arm identifiers in ARM column are replaced by arm labels\r\nas soon as one arm label is provided. — processArmLabels","title":"Process arm labels. Arm identifiers in ARM column are replaced by arm labels\r\nas soon as one arm label is provided. — processArmLabels","text":"Process arm labels. Arm identifiers ARM column replaced arm labels soon one arm label provided.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/processArmLabels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process arm labels. Arm identifiers in ARM column are replaced by arm labels\r\nas soon as one arm label is provided. — processArmLabels","text":"","code":"processArmLabels(campsis, arms)"},{"path":"https://calvagone.github.io/campsis.doc/reference/processArmLabels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process arm labels. Arm identifiers in ARM column are replaced by arm labels\r\nas soon as one arm label is provided. — processArmLabels","text":"campsis CAMPSIS output arms treatment arms","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/processArmLabels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process arm labels. Arm identifiers in ARM column are replaced by arm labels\r\nas soon as one arm label is provided. — processArmLabels","text":"updated CAMPSIS output arm labels instead arm identifiers","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/processDropOthers.html","id":null,"dir":"Reference","previous_headings":"","what":"Process 'DROP_OTHERS'. — processDropOthers","title":"Process 'DROP_OTHERS'. — processDropOthers","text":"Process 'DROP_OTHERS'.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/processDropOthers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process 'DROP_OTHERS'. — processDropOthers","text":"","code":"processDropOthers(x, outvars = character(0), dropOthers)"},{"path":"https://calvagone.github.io/campsis.doc/reference/processDropOthers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process 'DROP_OTHERS'. — processDropOthers","text":"x current data frame outvars variables keep dropOthers logical value","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/processDropOthers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process 'DROP_OTHERS'. — processDropOthers","text":"processed data frame","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/processSimulateArguments.html","id":null,"dir":"Reference","previous_headings":"","what":"Preprocess arguments of the simulate method. — processSimulateArguments","title":"Preprocess arguments of the simulate method. — processSimulateArguments","text":"Preprocess arguments simulate method.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/processSimulateArguments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preprocess arguments of the simulate method. — processSimulateArguments","text":"","code":"processSimulateArguments(model, dataset, dest, outvars, dosing, settings)"},{"path":"https://calvagone.github.io/campsis.doc/reference/processSimulateArguments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preprocess arguments of the simulate method. — processSimulateArguments","text":"model CAMPSIS model dataset dataset, data.frame form dest destination engine outvars outvars dosing add dosing information, logical value settings simulation settings","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/processSimulateArguments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Preprocess arguments of the simulate method. — processSimulateArguments","text":"simulation configuration","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/processTSLDAndTDOSColumn.html","id":null,"dir":"Reference","previous_headings":"","what":"Process TSLD and TDOS columns according to given dataset configuration. — processTSLDAndTDOSColumn","title":"Process TSLD and TDOS columns according to given dataset configuration. — processTSLDAndTDOSColumn","text":"Process TSLD TDOS columns according given dataset configuration.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/processTSLDAndTDOSColumn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process TSLD and TDOS columns according to given dataset configuration. — processTSLDAndTDOSColumn","text":"","code":"processTSLDAndTDOSColumn(table, config)"},{"path":"https://calvagone.github.io/campsis.doc/reference/processTSLDAndTDOSColumn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process TSLD and TDOS columns according to given dataset configuration. — processTSLDAndTDOSColumn","text":"table current table config dataset config","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/processTSLDAndTDOSColumn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process TSLD and TDOS columns according to given dataset configuration. — processTSLDAndTDOSColumn","text":"updated table","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/Progress.html","id":null,"dir":"Reference","previous_headings":"","what":"Create progress settings. — Progress","title":"Create progress settings. — Progress","text":"Create progress settings.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/Progress.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create progress settings. — Progress","text":"","code":"Progress(tick_slice = TRUE)"},{"path":"https://calvagone.github.io/campsis.doc/reference/Progress.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create progress settings. — Progress","text":"tick_slice tick() called simulated slice, default TRUE. cases, number subjects per slice low, may useful disable flag, improve performance issues.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/Progress.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create progress settings. — Progress","text":"progress settings","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/progress_settings-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Progress settings class. — progress_settings-class","title":"Progress settings class. — progress_settings-class","text":"Progress settings class.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/progress_settings-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Progress settings class. — progress_settings-class","text":"tick_slice tick() called simulated slice, default TRUE. cases, number subjects per slice low, may useful disable flag, improve performance issues.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/protocol-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Protocol class. — protocol-class","title":"Protocol class. — protocol-class","text":"Protocol class.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/removeInitialConditions.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove initial conditions. — removeInitialConditions","title":"Remove initial conditions. — removeInitialConditions","text":"Remove initial conditions.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/removeInitialConditions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove initial conditions. — removeInitialConditions","text":"","code":"removeInitialConditions(model)"},{"path":"https://calvagone.github.io/campsis.doc/reference/removeInitialConditions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove initial conditions. — removeInitialConditions","text":"model CAMPSIS model","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/removeInitialConditions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove initial conditions. — removeInitialConditions","text":"model without initial conditions","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/reorderColumns.html","id":null,"dir":"Reference","previous_headings":"","what":"Reorder output columns. — reorderColumns","title":"Reorder output columns. — reorderColumns","text":"Reorder output columns.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/reorderColumns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reorder output columns. — reorderColumns","text":"","code":"reorderColumns(results, dosing)"},{"path":"https://calvagone.github.io/campsis.doc/reference/reorderColumns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reorder output columns. — reorderColumns","text":"results RxODE/mrgsolve output dosing dosing information, logical value","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/reorderColumns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reorder output columns. — reorderColumns","text":"reordered dataframe","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/retrieveParameterValue.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve the parameter value (standardized) for the specified parameter name. — retrieveParameterValue","title":"Retrieve the parameter value (standardized) for the specified parameter name. — retrieveParameterValue","text":"Retrieve parameter value (standardized) specified parameter name.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/retrieveParameterValue.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve the parameter value (standardized) for the specified parameter name. — retrieveParameterValue","text":"","code":"retrieveParameterValue(model, paramName, default = NULL, mandatory = FALSE)"},{"path":"https://calvagone.github.io/campsis.doc/reference/retrieveParameterValue.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve the parameter value (standardized) for the specified parameter name. — retrieveParameterValue","text":"model model paramName parameter name default default value found mandatory must model ","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/retrieveParameterValue.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve the parameter value (standardized) for the specified parameter name. — retrieveParameterValue","text":"standardized parameter value given default value found","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/rxode_engine-class.html","id":null,"dir":"Reference","previous_headings":"","what":"RxODE/rxode2 engine class. — rxode_engine-class","title":"RxODE/rxode2 engine class. — rxode_engine-class","text":"RxODE/rxode2 engine class.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/rxode_engine-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"RxODE/rxode2 engine class. — rxode_engine-class","text":"rxode2 logical field indicate CAMPSIS use rxode2 (field set TRUE) RxODE (field set FALSE). Default TRUE.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/sample.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample generic object. — sample","title":"Sample generic object. — sample","text":"Sample generic object.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/sample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample generic object. — sample","text":"","code":"sample(object, n, ...)  # S4 method for constant_distribution,integer sample(object, n)  # S4 method for fixed_distribution,integer sample(object, n)  # S4 method for function_distribution,integer sample(object, n)  # S4 method for bootstrap_distribution,integer sample(object, n)  # S4 method for bolus,integer sample(object, n, ...)  # S4 method for infusion,integer sample(object, n, ...)  # S4 method for observations,integer sample(object, n, ...)  # S4 method for covariate,integer sample(object, n)  # S4 method for bootstrap,integer sample(object, n)  # S4 method for campsis_model,integer sample(object, n)"},{"path":"https://calvagone.github.io/campsis.doc/reference/sample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample generic object. — sample","text":"object generic object n number samples required ... extra arguments","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/sample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample generic object. — sample","text":"sampling result","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/sampleCovariatesList.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample covariates list. — sampleCovariatesList","title":"Sample covariates list. — sampleCovariatesList","text":"Sample covariates list.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/sampleCovariatesList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample covariates list. — sampleCovariatesList","text":"","code":"sampleCovariatesList(covariates, ids_within_arm, subset)"},{"path":"https://calvagone.github.io/campsis.doc/reference/sampleCovariatesList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample covariates list. — sampleCovariatesList","text":"covariates list covariates sample ids_within_arm ids within current arm sampled subset take subset original values export parallelised","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/sampleCovariatesList.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample covariates list. — sampleCovariatesList","text":"dataframe n rows, 1 column per covariate","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/sampleDistributionAsTibble.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample a distribution and return a tibble. — sampleDistributionAsTibble","title":"Sample a distribution and return a tibble. — sampleDistributionAsTibble","text":"Sample distribution return tibble.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/sampleDistributionAsTibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample a distribution and return a tibble. — sampleDistributionAsTibble","text":"","code":"sampleDistributionAsTibble(distribution, n, colname)"},{"path":"https://calvagone.github.io/campsis.doc/reference/sampleDistributionAsTibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample a distribution and return a tibble. — sampleDistributionAsTibble","text":"distribution distribution n number desired samples colname name unique column tibble","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/sampleDistributionAsTibble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample a distribution and return a tibble. — sampleDistributionAsTibble","text":"tibble n rows 1 column","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/sampleTimeVaryingCovariates.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample time-varying covariates. — sampleTimeVaryingCovariates","title":"Sample time-varying covariates. — sampleTimeVaryingCovariates","text":"Sample time-varying covariates.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/sampleTimeVaryingCovariates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample time-varying covariates. — sampleTimeVaryingCovariates","text":"","code":"sampleTimeVaryingCovariates(object, armID, needsDV)"},{"path":"https://calvagone.github.io/campsis.doc/reference/sampleTimeVaryingCovariates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample time-varying covariates. — sampleTimeVaryingCovariates","text":"object time-varying covariates, data.frame form armID treatment arm ID needsDV append extra column DV, logical value","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/sampleTimeVaryingCovariates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample time-varying covariates. — sampleTimeVaryingCovariates","text":"data.frame","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/scatterPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Scatter plot (or X vs Y plot). — scatterPlot","title":"Scatter plot (or X vs Y plot). — scatterPlot","text":"Scatter plot (X vs Y plot).","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/scatterPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scatter plot (or X vs Y plot). — scatterPlot","text":"","code":"scatterPlot(x, output, colour = NULL, time = NULL)"},{"path":"https://calvagone.github.io/campsis.doc/reference/scatterPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scatter plot (or X vs Y plot). — scatterPlot","text":"x data frame output 2 variables show, character vector colour variable(s) colour time time look 2 variables, NULL, min time used (usually 0)","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/scatterPlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scatter plot (or X vs Y plot). — scatterPlot","text":"ggplot object","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/scenario-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Scenario class. — scenario-class","title":"Scenario class. — scenario-class","text":"Scenario class.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/scenario-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Scenario class. — scenario-class","text":"name scenario name, single character string model either CAMPSIS model, function lambda-style formula dataset either CAMPSIS dataset, function lambda-style formula","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/Scenario.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an scenario. — Scenario","title":"Create an scenario. — Scenario","text":"Create scenario.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/Scenario.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an scenario. — Scenario","text":"","code":"Scenario(name = NULL, model = NULL, dataset = NULL)"},{"path":"https://calvagone.github.io/campsis.doc/reference/Scenario.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an scenario. — Scenario","text":"name scenario name, single character string model either CAMPSIS model, function lambda-style formula dataset either CAMPSIS dataset, function lambda-style formula","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/Scenario.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an scenario. — Scenario","text":"new scenario","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/scenarios-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Scenarios class. — scenarios-class","title":"Scenarios class. — scenarios-class","text":"Scenarios class.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/Scenarios.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a list of scenarios. — Scenarios","title":"Create a list of scenarios. — Scenarios","text":"Create list scenarios.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/Scenarios.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a list of scenarios. — Scenarios","text":"","code":"Scenarios()"},{"path":"https://calvagone.github.io/campsis.doc/reference/Scenarios.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a list of scenarios. — Scenarios","text":"scenarios object","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/setLabel.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the label. — setLabel","title":"Set the label. — setLabel","text":"Set label.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/setLabel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the label. — setLabel","text":"","code":"setLabel(object, x)  # S4 method for arm,character setLabel(object, x)"},{"path":"https://calvagone.github.io/campsis.doc/reference/setLabel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the label. — setLabel","text":"object object label x new label","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/setLabel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the label. — setLabel","text":"updated object","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/setSeed.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the seed. The goal of this method is to centralize all calls to\r\nthe R method 'set.seed'. — setSeed","title":"Set the seed. The goal of this method is to centralize all calls to\r\nthe R method 'set.seed'. — setSeed","text":"Set seed. goal method centralize calls R method 'set.seed'.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/setSeed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the seed. The goal of this method is to centralize all calls to\r\nthe R method 'set.seed'. — setSeed","text":"","code":"setSeed(seed)"},{"path":"https://calvagone.github.io/campsis.doc/reference/setSeed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the seed. The goal of this method is to centralize all calls to\r\nthe R method 'set.seed'. — setSeed","text":"seed seed value, NULL","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/setSubjects.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the number of subjects. — setSubjects","title":"Set the number of subjects. — setSubjects","text":"Set number subjects.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/setSubjects.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the number of subjects. — setSubjects","text":"","code":"setSubjects(object, x)  # S4 method for arm,integer setSubjects(object, x)  # S4 method for dataset,integer setSubjects(object, x)"},{"path":"https://calvagone.github.io/campsis.doc/reference/setSubjects.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the number of subjects. — setSubjects","text":"object object x new number subjects","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/setSubjects.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the number of subjects. — setSubjects","text":"updated object","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/Settings.html","id":null,"dir":"Reference","previous_headings":"","what":"Create advanced simulation settings. — Settings","title":"Create advanced simulation settings. — Settings","text":"Create advanced simulation settings.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/Settings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create advanced simulation settings. — Settings","text":"","code":"Settings(...)"},{"path":"https://calvagone.github.io/campsis.doc/reference/Settings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create advanced simulation settings. — Settings","text":"... user-required settings: see ?Hardware, ?Solver, ?NOCB, ?Declare ?Progress settings","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/Settings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create advanced simulation settings. — Settings","text":"advanced simulation settings","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/setupPlanDefault.html","id":null,"dir":"Reference","previous_headings":"","what":"Setup default plan for the given simulation or hardware settings.\r\nThis plan will prioritise the ditribution of workers in the following order:\r\n1) Replicates (if 'replicate_parallel' is enabled)\r\n2) Scenarios (if 'scenario_parallel' is enabled)\r\n3) Dataset export / slices (if 'dataset_export' or 'slice_parallel' is enabled) — setupPlanDefault","title":"Setup default plan for the given simulation or hardware settings.\r\nThis plan will prioritise the ditribution of workers in the following order:\r\n1) Replicates (if 'replicate_parallel' is enabled)\r\n2) Scenarios (if 'scenario_parallel' is enabled)\r\n3) Dataset export / slices (if 'dataset_export' or 'slice_parallel' is enabled) — setupPlanDefault","text":"Setup default plan given simulation hardware settings. plan prioritise ditribution workers following order: 1) Replicates ('replicate_parallel' enabled) 2) Scenarios ('scenario_parallel' enabled) 3) Dataset export / slices ('dataset_export' 'slice_parallel' enabled)","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/setupPlanDefault.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Setup default plan for the given simulation or hardware settings.\r\nThis plan will prioritise the ditribution of workers in the following order:\r\n1) Replicates (if 'replicate_parallel' is enabled)\r\n2) Scenarios (if 'scenario_parallel' is enabled)\r\n3) Dataset export / slices (if 'dataset_export' or 'slice_parallel' is enabled) — setupPlanDefault","text":"","code":"setupPlanDefault(object)"},{"path":"https://calvagone.github.io/campsis.doc/reference/setupPlanDefault.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Setup default plan for the given simulation or hardware settings.\r\nThis plan will prioritise the ditribution of workers in the following order:\r\n1) Replicates (if 'replicate_parallel' is enabled)\r\n2) Scenarios (if 'scenario_parallel' is enabled)\r\n3) Dataset export / slices (if 'dataset_export' or 'slice_parallel' is enabled) — setupPlanDefault","text":"object simulation hardware settings","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/setupPlanDefault.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Setup default plan for the given simulation or hardware settings.\r\nThis plan will prioritise the ditribution of workers in the following order:\r\n1) Replicates (if 'replicate_parallel' is enabled)\r\n2) Scenarios (if 'scenario_parallel' is enabled)\r\n3) Dataset export / slices (if 'dataset_export' or 'slice_parallel' is enabled) — setupPlanDefault","text":"nothing","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/setupPlanSequential.html","id":null,"dir":"Reference","previous_headings":"","what":"Setup plan as sequential (i.e. no parallelisation). — setupPlanSequential","title":"Setup plan as sequential (i.e. no parallelisation). — setupPlanSequential","text":"Setup plan sequential (.e. parallelisation).","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/setupPlanSequential.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Setup plan as sequential (i.e. no parallelisation). — setupPlanSequential","text":"","code":"setupPlanSequential()"},{"path":"https://calvagone.github.io/campsis.doc/reference/setupPlanSequential.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Setup plan as sequential (i.e. no parallelisation). — setupPlanSequential","text":"nothing","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/shadedPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Shaded plot (or prediction interval plot). — shadedPlot","title":"Shaded plot (or prediction interval plot). — shadedPlot","text":"Shaded plot (prediction interval plot).","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/shadedPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shaded plot (or prediction interval plot). — shadedPlot","text":"","code":"shadedPlot(   x,   output,   colour = NULL,   strat_extra = NULL,   level = 0.9,   alpha = 0.25 )"},{"path":"https://calvagone.github.io/campsis.doc/reference/shadedPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shaded plot (or prediction interval plot). — shadedPlot","text":"x data frame output variable show colour variable(s) colour strat_extra variable(s) stratify, colour (useful use facet_wrap) level PI level, default 0.9 (90% PI) alpha alpha parameter (transparency) given geom_ribbon","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/shadedPlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Shaded plot (or prediction interval plot). — shadedPlot","text":"ggplot object","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/simulate.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate function. — simulate","title":"Simulate function. — simulate","text":"Simulate function.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/simulate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate function. — simulate","text":"","code":"simulate(   model,   dataset,   dest = NULL,   events = NULL,   scenarios = NULL,   tablefun = NULL,   outvars = NULL,   outfun = NULL,   seed = NULL,   replicates = 1,   dosing = FALSE,   settings = NULL )  # S4 method for campsis_model,dataset,character,events,scenarios,`function`,character,`function`,integer,integer,logical,simulation_settings simulate(   model,   dataset,   dest = NULL,   events = NULL,   scenarios = NULL,   tablefun = NULL,   outvars = NULL,   outfun = NULL,   seed = NULL,   replicates = 1,   dosing = FALSE,   settings = NULL )  # S4 method for campsis_model,tbl_df,character,events,scenarios,`function`,character,`function`,integer,integer,logical,simulation_settings simulate(   model,   dataset,   dest = NULL,   events = NULL,   scenarios = NULL,   tablefun = NULL,   outvars = NULL,   outfun = NULL,   seed = NULL,   replicates = 1,   dosing = FALSE,   settings = NULL )  # S4 method for campsis_model,data.frame,character,events,scenarios,`function`,character,`function`,integer,integer,logical,simulation_settings simulate(   model,   dataset,   dest = NULL,   events = NULL,   scenarios = NULL,   tablefun = NULL,   outvars = NULL,   outfun = NULL,   seed = NULL,   replicates = 1,   dosing = FALSE,   settings = NULL )  # S4 method for campsis_model,tbl_df,rxode_engine,events,scenarios,`function`,character,`function`,integer,integer,logical,simulation_settings simulate(   model,   dataset,   dest = NULL,   events = NULL,   scenarios = NULL,   tablefun = NULL,   outvars = NULL,   outfun = NULL,   seed = NULL,   replicates = 1,   dosing = FALSE,   settings = NULL )  # S4 method for campsis_model,tbl_df,mrgsolve_engine,events,scenarios,`function`,character,`function`,integer,integer,logical,simulation_settings simulate(   model,   dataset,   dest = NULL,   events = NULL,   scenarios = NULL,   tablefun = NULL,   outvars = NULL,   outfun = NULL,   seed = NULL,   replicates = 1,   dosing = FALSE,   settings = NULL )"},{"path":"https://calvagone.github.io/campsis.doc/reference/simulate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate function. — simulate","text":"model generic CAMPSIS model dataset CAMPSIS dataset 2-dimensional table dest destination simulation engine, default 'RxODE' events interruption events scenarios list scenarios simulated tablefun function lambda formula apply exported 2-dimensional dataset outvars variables output resulting dataframe outfun function lambda formula apply resulting dataframe replicate seed seed value replicates number replicates, default 1 dosing output dosing information, default FALSE settings advanced simulation settings","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/simulate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate function. — simulate","text":"dataframe results","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/simulateDelegate.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulation delegate (several replicates). — simulateDelegate","title":"Simulation delegate (several replicates). — simulateDelegate","text":"Simulation delegate (several replicates).","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/simulateDelegate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulation delegate (several replicates). — simulateDelegate","text":"","code":"simulateDelegate(   model,   dataset,   dest,   events,   scenarios,   tablefun,   outvars,   outfun,   seed,   replicates,   dosing,   settings )"},{"path":"https://calvagone.github.io/campsis.doc/reference/simulateDelegate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulation delegate (several replicates). — simulateDelegate","text":"model generic CAMPSIS model dataset CAMPSIS dataset 2-dimensional table dest destination simulation engine, default 'RxODE' events interruption events scenarios list scenarios simulated tablefun function lambda formula apply exported 2-dimensional dataset outvars variables output resulting dataframe outfun function lambda formula apply resulting dataframe replicate seed seed value replicates number replicates, default 1 dosing output dosing information, default FALSE settings advanced simulation settings","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/simulateDelegate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulation delegate (several replicates). — simulateDelegate","text":"data frame results","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/simulateDelegateCore.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulation delegate core (single replicate). — simulateDelegateCore","title":"Simulation delegate core (single replicate). — simulateDelegateCore","text":"Simulation delegate core (single replicate).","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/simulateDelegateCore.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulation delegate core (single replicate). — simulateDelegateCore","text":"","code":"simulateDelegateCore(   model,   dataset,   dest,   events,   tablefun,   outvars,   outfun,   seed,   replicates,   dosing,   settings )"},{"path":"https://calvagone.github.io/campsis.doc/reference/simulateDelegateCore.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulation delegate core (single replicate). — simulateDelegateCore","text":"model generic CAMPSIS model dataset CAMPSIS dataset 2-dimensional table dest destination simulation engine, default 'RxODE' events interruption events tablefun function lambda formula apply exported 2-dimensional dataset outvars variables output resulting dataframe outfun function lambda formula apply resulting dataframe replicate seed seed value replicates number replicates, default 1 dosing output dosing information, default FALSE settings advanced simulation settings","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/simulateDelegateCore.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulation delegate core (single replicate). — simulateDelegateCore","text":"data frame results","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/simulateScenarios.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulation scenarios. — simulateScenarios","title":"Simulation scenarios. — simulateScenarios","text":"Simulation scenarios.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/simulateScenarios.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulation scenarios. — simulateScenarios","text":"","code":"simulateScenarios(   scenarios,   model,   dataset,   dest,   events,   tablefun,   outvars,   outfun,   seed,   replicates,   dosing,   settings )"},{"path":"https://calvagone.github.io/campsis.doc/reference/simulateScenarios.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulation scenarios. — simulateScenarios","text":"scenarios list scenarios simulated model generic CAMPSIS model dataset CAMPSIS dataset 2-dimensional table dest destination simulation engine, default 'RxODE' events interruption events tablefun function lambda formula apply exported 2-dimensional dataset outvars variables output resulting dataframe outfun function lambda formula apply resulting dataframe replicate seed seed value replicates number replicates, default 1 dosing output dosing information, default FALSE settings advanced simulation settings","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/simulateScenarios.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulation scenarios. — simulateScenarios","text":"data frame results","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/SimulationProgress.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a simulation progress object. — SimulationProgress","title":"Create a simulation progress object. — SimulationProgress","text":"Create simulation progress object.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/SimulationProgress.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a simulation progress object. — SimulationProgress","text":"","code":"SimulationProgress(   replicates = 1,   scenarios = 1,   progressor = NULL,   hardware = NULL )"},{"path":"https://calvagone.github.io/campsis.doc/reference/SimulationProgress.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a simulation progress object. — SimulationProgress","text":"replicates total number replicates simulate scenarios total number scenarios simulate progressor progressr progressor hardware hardware settings","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/SimulationProgress.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a simulation progress object. — SimulationProgress","text":"progress bar","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/simulation_engine-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulation engine class. — simulation_engine-class","title":"Simulation engine class. — simulation_engine-class","text":"Simulation engine class.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/simulation_progress-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulation progress class. — simulation_progress-class","title":"Simulation progress class. — simulation_progress-class","text":"Simulation progress class.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/simulation_progress-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulation progress class. — simulation_progress-class","text":"replicates total number replicates simulate scenarios total number scenarios simulate iterations total number iterations simulate slices total number slices simulate replicate current replicate number simulated scenario current scenario number simulated iteration current iteration number simulated slice current slice number simulated progressor progressr progressor hardware hardware settings","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/simulation_settings-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulation settings class. — simulation_settings-class","title":"Simulation settings class. — simulation_settings-class","text":"Simulation settings class.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/simulation_settings-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Simulation settings class. — simulation_settings-class","text":"hardware hardware settings object solver solver settings object nocb NOCB settings object declare declare settings (mrgsolve ) progress progress settings internal internal settings","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/Solver.html","id":null,"dir":"Reference","previous_headings":"","what":"Create solver settings. — Solver","title":"Create solver settings. — Solver","text":"Create solver settings.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/Solver.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create solver settings. — Solver","text":"","code":"Solver(   atol = 1e-08,   rtol = 1e-08,   hmax = NA,   maxsteps = 70000L,   method = \"liblsoda\" )"},{"path":"https://calvagone.github.io/campsis.doc/reference/Solver.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create solver settings. — Solver","text":"atol absolute solver tolerance, default 1e-08 rtol relative solver tolerance, default 1e-08 hmax limit big solver step can , default NA maxsteps max steps 2 integration times (e.g. observations records far apart), default 70000 method solver method, RxODE/rxode2 : 'liblsoda' (default), 'lsoda', 'dop853', 'indLin'. Mrgsolve's method always 'lsoda'.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/Solver.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create solver settings. — Solver","text":"solver settings","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/solver_settings-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Solver settings class.\r\nSee ?mrgsolve::update.\r\nSee ?rxode2::rxSolve. — solver_settings-class","title":"Solver settings class.\r\nSee ?mrgsolve::update.\r\nSee ?rxode2::rxSolve. — solver_settings-class","text":"Solver settings class. See ?mrgsolve::update. See ?rxode2::rxSolve.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/solver_settings-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Solver settings class.\r\nSee ?mrgsolve::update.\r\nSee ?rxode2::rxSolve. — solver_settings-class","text":"atol absolute solver tolerance, default 1e-08 rtol relative solver tolerance, default 1e-08 hmax limit big solver step can , default NA maxsteps max steps 2 integration times (e.g. observations records far apart), default 70000 method solver method, RxODE/rxode2 : 'liblsoda' (default), 'lsoda', 'dop853', 'indLin'. Mrgsolve's method always 'lsoda'.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/spaghettiPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Spaghetti plot. — spaghettiPlot","title":"Spaghetti plot. — spaghettiPlot","text":"Spaghetti plot.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/spaghettiPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spaghetti plot. — spaghettiPlot","text":"","code":"spaghettiPlot(x, output, colour = NULL)"},{"path":"https://calvagone.github.io/campsis.doc/reference/spaghettiPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Spaghetti plot. — spaghettiPlot","text":"x data frame output variable show colour variable(s) colour","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/spaghettiPlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Spaghetti plot. — spaghettiPlot","text":"plot","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/splitDataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Split dataset according to config. — splitDataset","title":"Split dataset according to config. — splitDataset","text":"Split dataset according config.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/splitDataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split dataset according to config. — splitDataset","text":"","code":"splitDataset(dataset, config)"},{"path":"https://calvagone.github.io/campsis.doc/reference/splitDataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split dataset according to config. — splitDataset","text":"dataset Campsis dataset export config current iteration future_map_dfr","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/splitDataset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split dataset according to config. — splitDataset","text":"subset given dataset","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/TimeVaryingCovariate.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a time-varying covariate. This covariate will be implemented using \r\nEVID=2 rows in the exported dataset and will not use interruption events. — TimeVaryingCovariate","title":"Create a time-varying covariate. This covariate will be implemented using \r\nEVID=2 rows in the exported dataset and will not use interruption events. — TimeVaryingCovariate","text":"Create time-varying covariate. covariate implemented using  EVID=2 rows exported dataset use interruption events.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/TimeVaryingCovariate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a time-varying covariate. This covariate will be implemented using \r\nEVID=2 rows in the exported dataset and will not use interruption events. — TimeVaryingCovariate","text":"","code":"TimeVaryingCovariate(name, table)"},{"path":"https://calvagone.github.io/campsis.doc/reference/TimeVaryingCovariate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a time-varying covariate. This covariate will be implemented using \r\nEVID=2 rows in the exported dataset and will not use interruption events. — TimeVaryingCovariate","text":"name covariate name, character table data.frame, must contain mandatory columns 'TIME' 'VALUE'. 'ID' column may also specified. case, ID's 1 max number subjects dataset/arm can used. ID's must VALUE defined TIME 0.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/TimeVaryingCovariate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a time-varying covariate. This covariate will be implemented using \r\nEVID=2 rows in the exported dataset and will not use interruption events. — TimeVaryingCovariate","text":"time-varying covariate","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/time_varying_covariate-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Time-varying covariate class. — time_varying_covariate-class","title":"Time-varying covariate class. — time_varying_covariate-class","text":"Time-varying covariate class.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/toDatasetSummary.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert dataset to dataset summary (internal method). — toDatasetSummary","title":"Convert dataset to dataset summary (internal method). — toDatasetSummary","text":"Convert dataset dataset summary (internal method).","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/toDatasetSummary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert dataset to dataset summary (internal method). — toDatasetSummary","text":"","code":"toDatasetSummary(dataset)"},{"path":"https://calvagone.github.io/campsis.doc/reference/toDatasetSummary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert dataset to dataset summary (internal method). — toDatasetSummary","text":"dataset summary","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/toExplicitDistribution.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert user-given distribution to an explicit CAMPSIS distribution.\r\nPassed distribution can be:\r\n- a NULL value. In that case, it will be converted into an 'UndefinedDistribution'.\r\n- a single numeric value. In that case, it will be converted into a 'ConstantDistribution'.\r\n- a numeric vector. In that case, it will be converted into a 'FixedDistribution'.\r\n- all available types of distribution. In this case, no conversion is applied. — toExplicitDistribution","title":"Convert user-given distribution to an explicit CAMPSIS distribution.\r\nPassed distribution can be:\r\n- a NULL value. In that case, it will be converted into an 'UndefinedDistribution'.\r\n- a single numeric value. In that case, it will be converted into a 'ConstantDistribution'.\r\n- a numeric vector. In that case, it will be converted into a 'FixedDistribution'.\r\n- all available types of distribution. In this case, no conversion is applied. — toExplicitDistribution","text":"Convert user-given distribution explicit CAMPSIS distribution. Passed distribution can : - NULL value. case, converted 'UndefinedDistribution'. - single numeric value. case, converted 'ConstantDistribution'. - numeric vector. case, converted 'FixedDistribution'. - available types distribution. case, conversion applied.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/toExplicitDistribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert user-given distribution to an explicit CAMPSIS distribution.\r\nPassed distribution can be:\r\n- a NULL value. In that case, it will be converted into an 'UndefinedDistribution'.\r\n- a single numeric value. In that case, it will be converted into a 'ConstantDistribution'.\r\n- a numeric vector. In that case, it will be converted into a 'FixedDistribution'.\r\n- all available types of distribution. In this case, no conversion is applied. — toExplicitDistribution","text":"","code":"toExplicitDistribution(distribution)"},{"path":"https://calvagone.github.io/campsis.doc/reference/toExplicitDistribution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert user-given distribution to an explicit CAMPSIS distribution.\r\nPassed distribution can be:\r\n- a NULL value. In that case, it will be converted into an 'UndefinedDistribution'.\r\n- a single numeric value. In that case, it will be converted into a 'ConstantDistribution'.\r\n- a numeric vector. In that case, it will be converted into a 'FixedDistribution'.\r\n- all available types of distribution. In this case, no conversion is applied. — toExplicitDistribution","text":"distribution user-given distribution","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/toExplicitDistribution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert user-given distribution to an explicit CAMPSIS distribution.\r\nPassed distribution can be:\r\n- a NULL value. In that case, it will be converted into an 'UndefinedDistribution'.\r\n- a single numeric value. In that case, it will be converted into a 'ConstantDistribution'.\r\n- a numeric vector. In that case, it will be converted into a 'FixedDistribution'.\r\n- all available types of distribution. In this case, no conversion is applied. — toExplicitDistribution","text":"distribution object","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/treatment-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Treatment class. — treatment-class","title":"Treatment class. — treatment-class","text":"Treatment class.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/treatment_iov-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Treatment IOV class. — treatment_iov-class","title":"Treatment IOV class. — treatment_iov-class","text":"Treatment IOV class.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/treatment_iov-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Treatment IOV class. — treatment_iov-class","text":"colname name column output dataset distribution distribution dose_numbers associated dose numbers, integer vector, length values","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/treatment_iovs-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Treatment IOV's class. — treatment_iovs-class","title":"Treatment IOV's class. — treatment_iovs-class","text":"Treatment IOV's class.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/undefined_distribution-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Undefined distribution class. This type of object is automatically created\r\nin method toExplicitDistribution() when the user does not provide a concrete\r\ndistribution. This is because S4 objects do not accept NULL values. — undefined_distribution-class","title":"Undefined distribution class. This type of object is automatically created\r\nin method toExplicitDistribution() when the user does not provide a concrete\r\ndistribution. This is because S4 objects do not accept NULL values. — undefined_distribution-class","text":"Undefined distribution class. type object automatically created method toExplicitDistribution() user provide concrete distribution. S4 objects accept NULL values.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/UniformDistribution.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an uniform distribution. — UniformDistribution","title":"Create an uniform distribution. — UniformDistribution","text":"Create uniform distribution.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/UniformDistribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an uniform distribution. — UniformDistribution","text":"","code":"UniformDistribution(min, max)"},{"path":"https://calvagone.github.io/campsis.doc/reference/UniformDistribution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an uniform distribution. — UniformDistribution","text":"min min value max max value","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/UniformDistribution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an uniform distribution. — UniformDistribution","text":"uniform distribution","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/uniteColumns.html","id":null,"dir":"Reference","previous_headings":"","what":"Unite the given column names. — uniteColumns","title":"Unite the given column names. — uniteColumns","text":"Unite given column names.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/uniteColumns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unite the given column names. — uniteColumns","text":"","code":"uniteColumns(x, columns, colname, factor = TRUE)"},{"path":"https://calvagone.github.io/campsis.doc/reference/uniteColumns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unite the given column names. — uniteColumns","text":"x data frame, CAMPSIS output columns columns unify colname destination column name factor factor destination column","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/uniteColumns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Unite the given column names. — uniteColumns","text":"data frame","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/VPC.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the VPC summary. Input data frame must contain the following columns:\r\n- replicate: replicate number\r\n- low: low percentile value in replicate (and in scenario if present)\r\n- med: median value in replicate (and in scenario if present)\r\n- up: up percentile value in replicate (and in scenario if present)\r\n- any scenario column — VPC","title":"Compute the VPC summary. Input data frame must contain the following columns:\r\n- replicate: replicate number\r\n- low: low percentile value in replicate (and in scenario if present)\r\n- med: median value in replicate (and in scenario if present)\r\n- up: up percentile value in replicate (and in scenario if present)\r\n- any scenario column — VPC","text":"Compute VPC summary. Input data frame must contain following columns: - replicate: replicate number - low: low percentile value replicate (scenario present) - med: median value replicate (scenario present) - : percentile value replicate (scenario present) - scenario column","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/VPC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the VPC summary. Input data frame must contain the following columns:\r\n- replicate: replicate number\r\n- low: low percentile value in replicate (and in scenario if present)\r\n- med: median value in replicate (and in scenario if present)\r\n- up: up percentile value in replicate (and in scenario if present)\r\n- any scenario column — VPC","text":"","code":"VPC(x, scenarios = NULL, level = 0.9)"},{"path":"https://calvagone.github.io/campsis.doc/reference/VPC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the VPC summary. Input data frame must contain the following columns:\r\n- replicate: replicate number\r\n- low: low percentile value in replicate (and in scenario if present)\r\n- med: median value in replicate (and in scenario if present)\r\n- up: up percentile value in replicate (and in scenario if present)\r\n- any scenario column — VPC","text":"x data frame scenarios scenarios, character vector, NULL default level PI level, default 0.9 (90% PI)","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/VPC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the VPC summary. Input data frame must contain the following columns:\r\n- replicate: replicate number\r\n- low: low percentile value in replicate (and in scenario if present)\r\n- med: median value in replicate (and in scenario if present)\r\n- up: up percentile value in replicate (and in scenario if present)\r\n- any scenario column — VPC","text":"VPC summary columns TIME, <scenarios> combinations  low, med, (.e. low_low, low_med, low_up, etc.)","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/vpcPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"VPC plot. — vpcPlot","title":"VPC plot. — vpcPlot","text":"VPC plot.","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/vpcPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"VPC plot. — vpcPlot","text":"","code":"vpcPlot(x, scenarios = NULL, level = 0.9, alpha = 0.15)"},{"path":"https://calvagone.github.io/campsis.doc/reference/vpcPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"VPC plot. — vpcPlot","text":"x data frame, output CAMPSIS replicates scenarios scenarios, character vector, NULL default level PI level, default 0.9 (90% PI) alpha alpha parameter (transparency) given geom_ribbon","code":""},{"path":"https://calvagone.github.io/campsis.doc/reference/vpcPlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"VPC plot. — vpcPlot","text":"ggplot object","code":""},{"path":"https://calvagone.github.io/campsis.doc/news/index.html","id":"campsis-150","dir":"Changelog","previous_headings":"","what":"campsis 1.5.0","title":"campsis 1.5.0","text":"CRAN release: 2023-10-13 Revise model library #126 Improve default plots #125 Add binomial distribution #124 Quickly assign subjects using setSubjects #123 Remove warnings generated tidyverse #118","code":""},{"path":"https://calvagone.github.io/campsis.doc/news/index.html","id":"campsis-141","dir":"Changelog","previous_headings":"","what":"campsis 1.4.1","title":"campsis 1.4.1","text":"CRAN release: 2023-04-24 Packages Suggests used conditionally #117","code":""},{"path":"https://calvagone.github.io/campsis.doc/news/index.html","id":"campsis-140","dir":"Changelog","previous_headings":"","what":"campsis 1.4.0","title":"campsis 1.4.0","text":"CRAN release: 2023-04-13 Run replicates parallel #107 Run scenarios parallel #111 Parallelise export dataset #109 Rework simulation settings #110 Mrgsolve: don’t recompile model replicate #93 Write new vignette parallelisation #113 Replace progress package progressr package #108 Write new vignette progress bar #113 Remove RxODE suggested packages (removed CRAN) #106 Remove messages output rxode2 console #114","code":""},{"path":"https://calvagone.github.io/campsis.doc/news/index.html","id":"campsis-131","dir":"Changelog","previous_headings":"","what":"campsis 1.3.1","title":"campsis 1.3.1","text":"Add scatter plot #103. Use model_suite instead model_library #101","code":""},{"path":"https://calvagone.github.io/campsis.doc/news/index.html","id":"campsis-130","dir":"Changelog","previous_headings":"","what":"campsis 1.3.0","title":"campsis 1.3.0","text":"CRAN release: 2022-06-01 Add new simulation engine rxode2 #92. Refactor tests support multiple simulation engines #92","code":""},{"path":"https://calvagone.github.io/campsis.doc/news/index.html","id":"campsis-122","dir":"Changelog","previous_headings":"","what":"campsis 1.2.2","title":"campsis 1.2.2","text":"Fix CRAN issues M1 Mac architecture #90. Remove call suppressMessages building mrgsolve model #91 Export TSLD / TDOS columns demand #94","code":""},{"path":"https://calvagone.github.io/campsis.doc/news/index.html","id":"campsis-121","dir":"Changelog","previous_headings":"","what":"campsis 1.2.1","title":"campsis 1.2.1","text":"CRAN release: 2022-05-03 Add progress bar simulations. Minor bug fixes (#85, #86).","code":""},{"path":"https://calvagone.github.io/campsis.doc/news/index.html","id":"campsis-120","dir":"Changelog","previous_headings":"","what":"campsis 1.2.0","title":"campsis 1.2.0","text":"CRAN release: 2022-02-16 Added NEWS.md file track changes package. Initial release campsis CRAN.","code":""}]
